/*! For license information please see main.5b12ea7f.js.LICENSE.txt */ ! function() {
    var e = {
            694: function(e, t) {
                var n;
                ! function() {
                    "use strict";
                    var r = {}.hasOwnProperty;

                    function i() {
                        for (var e = [], t = 0; t < arguments.length; t++) {
                            var n = arguments[t];
                            if (n) {
                                var a = typeof n;
                                if ("string" === a || "number" === a) e.push(n);
                                else if (Array.isArray(n)) {
                                    if (n.length) {
                                        var o = i.apply(null, n);
                                        o && e.push(o)
                                    }
                                } else if ("object" === a) {
                                    if (n.toString !== Object.prototype.toString && !n.toString.toString().includes("[native code]")) {
                                        e.push(n.toString());
                                        continue
                                    }
                                    for (var s in n) r.call(n, s) && n[s] && e.push(s)
                                }
                            }
                        }
                        return e.join(" ")
                    }
                    e.exports ? (i.default = i, e.exports = i) : void 0 === (n = function() {
                        return i
                    }.apply(t, [])) || (e.exports = n)
                }()
            },
            802: function(e) {
                e.exports = function() {
                    function e(t, n, r) {
                        function i(o, s) {
                            if (!n[o]) {
                                if (!t[o]) {
                                    if (a) return a(o, !0);
                                    var l = new Error("Cannot find module '" + o + "'");
                                    throw l.code = "MODULE_NOT_FOUND", l
                                }
                                var u = n[o] = {
                                    exports: {}
                                };
                                t[o][0].call(u.exports, (function(e) {
                                    return i(t[o][1][e] || e)
                                }), u, u.exports, e, t, n, r)
                            }
                            return n[o].exports
                        }
                        for (var a = void 0, o = 0; o < r.length; o++) i(r[o]);
                        return i
                    }
                    return e
                }()({
                    1: [function(e, t, n) {
                        "use strict";
                        t.exports = function() {
                            if ("undefined" === typeof window || "undefined" === typeof navigator) return function() {
                                return 0
                            };
                            if (!navigator.userAgent.match(/iphone|ipod|ipad/i)) return function() {
                                return window.innerHeight
                            };
                            var e = Math.abs(window.orientation),
                                t = {
                                    w: 0,
                                    h: 0
                                };
                            return function() {
                                    var n = document.createElement("div");
                                    n.style.position = "fixed", n.style.height = "100vh", n.style.width = 0, n.style.top = 0, document.documentElement.appendChild(n), t.w = 90 === e ? n.offsetHeight : window.innerWidth, t.h = 90 === e ? window.innerWidth : n.offsetHeight, document.documentElement.removeChild(n), n = null
                                }(),
                                function() {
                                    return 90 !== Math.abs(window.orientation) ? t.h : t.w
                                }
                        }()
                    }, {}]
                }, {}, [1])(1)
            },
            888: function(e, t, n) {
                "use strict";
                var r = n(47);

                function i() {}

                function a() {}
                a.resetWarningCache = i, e.exports = function() {
                    function e(e, t, n, i, a, o) {
                        if (o !== r) {
                            var s = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                            throw s.name = "Invariant Violation", s
                        }
                    }

                    function t() {
                        return e
                    }
                    e.isRequired = e;
                    var n = {
                        array: e,
                        bigint: e,
                        bool: e,
                        func: e,
                        number: e,
                        object: e,
                        string: e,
                        symbol: e,
                        any: e,
                        arrayOf: t,
                        element: e,
                        elementType: e,
                        instanceOf: t,
                        node: e,
                        objectOf: t,
                        oneOf: t,
                        oneOfType: t,
                        shape: t,
                        exact: t,
                        checkPropTypes: a,
                        resetWarningCache: i
                    };
                    return n.PropTypes = n, n
                }
            },
            7: function(e, t, n) {
                e.exports = n(888)()
            },
            47: function(e) {
                "use strict";
                e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
            },
            463: function(e, t, n) {
                "use strict";
                var r = n(791),
                    i = n(296);

                function a(e) {
                    for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++) t += "&args[]=" + encodeURIComponent(arguments[n]);
                    return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
                }
                var o = new Set,
                    s = {};

                function l(e, t) {
                    u(e, t), u(e + "Capture", t)
                }

                function u(e, t) {
                    for (s[e] = t, e = 0; e < t.length; e++) o.add(t[e])
                }
                var c = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
                    f = Object.prototype.hasOwnProperty,
                    d = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
                    h = {},
                    p = {};

                function v(e, t, n, r, i, a, o) {
                    this.acceptsBooleans = 2 === t || 3 === t || 4 === t, this.attributeName = r, this.attributeNamespace = i, this.mustUseProperty = n, this.propertyName = e, this.type = t, this.sanitizeURL = a, this.removeEmptyString = o
                }
                var m = {};
                "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
                    m[e] = new v(e, 0, !1, e, null, !1, !1)
                })), [
                    ["acceptCharset", "accept-charset"],
                    ["className", "class"],
                    ["htmlFor", "for"],
                    ["httpEquiv", "http-equiv"]
                ].forEach((function(e) {
                    var t = e[0];
                    m[t] = new v(t, 1, !1, e[1], null, !1, !1)
                })), ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
                    m[e] = new v(e, 2, !1, e.toLowerCase(), null, !1, !1)
                })), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
                    m[e] = new v(e, 2, !1, e, null, !1, !1)
                })), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
                    m[e] = new v(e, 3, !1, e.toLowerCase(), null, !1, !1)
                })), ["checked", "multiple", "muted", "selected"].forEach((function(e) {
                    m[e] = new v(e, 3, !0, e, null, !1, !1)
                })), ["capture", "download"].forEach((function(e) {
                    m[e] = new v(e, 4, !1, e, null, !1, !1)
                })), ["cols", "rows", "size", "span"].forEach((function(e) {
                    m[e] = new v(e, 6, !1, e, null, !1, !1)
                })), ["rowSpan", "start"].forEach((function(e) {
                    m[e] = new v(e, 5, !1, e.toLowerCase(), null, !1, !1)
                }));
                var g = /[\-:]([a-z])/g;

                function y(e) {
                    return e[1].toUpperCase()
                }

                function x(e, t, n, r) {
                    var i = m.hasOwnProperty(t) ? m[t] : null;
                    (null !== i ? 0 !== i.type : r || !(2 < t.length) || "o" !== t[0] && "O" !== t[0] || "n" !== t[1] && "N" !== t[1]) && (function(e, t, n, r) {
                        if (null === t || "undefined" === typeof t || function(e, t, n, r) {
                                if (null !== n && 0 === n.type) return !1;
                                switch (typeof t) {
                                    case "function":
                                    case "symbol":
                                        return !0;
                                    case "boolean":
                                        return !r && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                                    default:
                                        return !1
                                }
                            }(e, t, n, r)) return !0;
                        if (r) return !1;
                        if (null !== n) switch (n.type) {
                            case 3:
                                return !t;
                            case 4:
                                return !1 === t;
                            case 5:
                                return isNaN(t);
                            case 6:
                                return isNaN(t) || 1 > t
                        }
                        return !1
                    }(t, n, i, r) && (n = null), r || null === i ? function(e) {
                        return !!f.call(p, e) || !f.call(h, e) && (d.test(e) ? p[e] = !0 : (h[e] = !0, !1))
                    }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = null === n ? 3 !== i.type && "" : n : (t = i.attributeName, r = i.attributeNamespace, null === n ? e.removeAttribute(t) : (n = 3 === (i = i.type) || 4 === i && !0 === n ? "" : "" + n, r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
                }
                "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
                    var t = e.replace(g, y);
                    m[t] = new v(t, 1, !1, e, null, !1, !1)
                })), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
                    var t = e.replace(g, y);
                    m[t] = new v(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1)
                })), ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
                    var t = e.replace(g, y);
                    m[t] = new v(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1)
                })), ["tabIndex", "crossOrigin"].forEach((function(e) {
                    m[e] = new v(e, 1, !1, e.toLowerCase(), null, !1, !1)
                })), m.xlinkHref = new v("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1), ["src", "href", "action", "formAction"].forEach((function(e) {
                    m[e] = new v(e, 1, !1, e.toLowerCase(), null, !0, !0)
                }));
                var b = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                    _ = Symbol.for("react.element"),
                    w = Symbol.for("react.portal"),
                    S = Symbol.for("react.fragment"),
                    M = Symbol.for("react.strict_mode"),
                    k = Symbol.for("react.profiler"),
                    E = Symbol.for("react.provider"),
                    T = Symbol.for("react.context"),
                    L = Symbol.for("react.forward_ref"),
                    A = Symbol.for("react.suspense"),
                    C = Symbol.for("react.suspense_list"),
                    P = Symbol.for("react.memo"),
                    R = Symbol.for("react.lazy");
                Symbol.for("react.scope"), Symbol.for("react.debug_trace_mode");
                var N = Symbol.for("react.offscreen");
                Symbol.for("react.legacy_hidden"), Symbol.for("react.cache"), Symbol.for("react.tracing_marker");
                var I = Symbol.iterator;

                function z(e) {
                    return null === e || "object" !== typeof e ? null : "function" === typeof(e = I && e[I] || e["@@iterator"]) ? e : null
                }
                var O, D = Object.assign;

                function F(e) {
                    if (void 0 === O) try {
                        throw Error()
                    } catch (n) {
                        var t = n.stack.trim().match(/\n( *(at )?)/);
                        O = t && t[1] || ""
                    }
                    return "\n" + O + e
                }
                var B = !1;

                function U(e, t) {
                    if (!e || B) return "";
                    B = !0;
                    var n = Error.prepareStackTrace;
                    Error.prepareStackTrace = void 0;
                    try {
                        if (t)
                            if (t = function() {
                                    throw Error()
                                }, Object.defineProperty(t.prototype, "props", {
                                    set: function() {
                                        throw Error()
                                    }
                                }), "object" === typeof Reflect && Reflect.construct) {
                                try {
                                    Reflect.construct(t, [])
                                } catch (u) {
                                    var r = u
                                }
                                Reflect.construct(e, [], t)
                            } else {
                                try {
                                    t.call()
                                } catch (u) {
                                    r = u
                                }
                                e.call(t.prototype)
                            }
                        else {
                            try {
                                throw Error()
                            } catch (u) {
                                r = u
                            }
                            e()
                        }
                    } catch (u) {
                        if (u && r && "string" === typeof u.stack) {
                            for (var i = u.stack.split("\n"), a = r.stack.split("\n"), o = i.length - 1, s = a.length - 1; 1 <= o && 0 <= s && i[o] !== a[s];) s--;
                            for (; 1 <= o && 0 <= s; o--, s--)
                                if (i[o] !== a[s]) {
                                    if (1 !== o || 1 !== s)
                                        do {
                                            if (o--, 0 > --s || i[o] !== a[s]) {
                                                var l = "\n" + i[o].replace(" at new ", " at ");
                                                return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)), l
                                            }
                                        } while (1 <= o && 0 <= s);
                                    break
                                }
                        }
                    } finally {
                        B = !1, Error.prepareStackTrace = n
                    }
                    return (e = e ? e.displayName || e.name : "") ? F(e) : ""
                }

                function H(e) {
                    switch (e.tag) {
                        case 5:
                            return F(e.type);
                        case 16:
                            return F("Lazy");
                        case 13:
                            return F("Suspense");
                        case 19:
                            return F("SuspenseList");
                        case 0:
                        case 2:
                        case 15:
                            return e = U(e.type, !1);
                        case 11:
                            return e = U(e.type.render, !1);
                        case 1:
                            return e = U(e.type, !0);
                        default:
                            return ""
                    }
                }

                function V(e) {
                    if (null == e) return null;
                    if ("function" === typeof e) return e.displayName || e.name || null;
                    if ("string" === typeof e) return e;
                    switch (e) {
                        case S:
                            return "Fragment";
                        case w:
                            return "Portal";
                        case k:
                            return "Profiler";
                        case M:
                            return "StrictMode";
                        case A:
                            return "Suspense";
                        case C:
                            return "SuspenseList"
                    }
                    if ("object" === typeof e) switch (e.$$typeof) {
                        case T:
                            return (e.displayName || "Context") + ".Consumer";
                        case E:
                            return (e._context.displayName || "Context") + ".Provider";
                        case L:
                            var t = e.render;
                            return (e = e.displayName) || (e = "" !== (e = t.displayName || t.name || "") ? "ForwardRef(" + e + ")" : "ForwardRef"), e;
                        case P:
                            return null !== (t = e.displayName || null) ? t : V(e.type) || "Memo";
                        case R:
                            t = e._payload, e = e._init;
                            try {
                                return V(e(t))
                            } catch (n) {}
                    }
                    return null
                }

                function G(e) {
                    var t = e.type;
                    switch (e.tag) {
                        case 24:
                            return "Cache";
                        case 9:
                            return (t.displayName || "Context") + ".Consumer";
                        case 10:
                            return (t._context.displayName || "Context") + ".Provider";
                        case 18:
                            return "DehydratedFragment";
                        case 11:
                            return e = (e = t.render).displayName || e.name || "", t.displayName || ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef");
                        case 7:
                            return "Fragment";
                        case 5:
                            return t;
                        case 4:
                            return "Portal";
                        case 3:
                            return "Root";
                        case 6:
                            return "Text";
                        case 16:
                            return V(t);
                        case 8:
                            return t === M ? "StrictMode" : "Mode";
                        case 22:
                            return "Offscreen";
                        case 12:
                            return "Profiler";
                        case 21:
                            return "Scope";
                        case 13:
                            return "Suspense";
                        case 19:
                            return "SuspenseList";
                        case 25:
                            return "TracingMarker";
                        case 1:
                        case 0:
                        case 17:
                        case 2:
                        case 14:
                        case 15:
                            if ("function" === typeof t) return t.displayName || t.name || null;
                            if ("string" === typeof t) return t
                    }
                    return null
                }

                function W(e) {
                    switch (typeof e) {
                        case "boolean":
                        case "number":
                        case "string":
                        case "undefined":
                        case "object":
                            return e;
                        default:
                            return ""
                    }
                }

                function j(e) {
                    var t = e.type;
                    return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
                }

                function q(e) {
                    e._valueTracker || (e._valueTracker = function(e) {
                        var t = j(e) ? "checked" : "value",
                            n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                            r = "" + e[t];
                        if (!e.hasOwnProperty(t) && "undefined" !== typeof n && "function" === typeof n.get && "function" === typeof n.set) {
                            var i = n.get,
                                a = n.set;
                            return Object.defineProperty(e, t, {
                                configurable: !0,
                                get: function() {
                                    return i.call(this)
                                },
                                set: function(e) {
                                    r = "" + e, a.call(this, e)
                                }
                            }), Object.defineProperty(e, t, {
                                enumerable: n.enumerable
                            }), {
                                getValue: function() {
                                    return r
                                },
                                setValue: function(e) {
                                    r = "" + e
                                },
                                stopTracking: function() {
                                    e._valueTracker = null, delete e[t]
                                }
                            }
                        }
                    }(e))
                }

                function X(e) {
                    if (!e) return !1;
                    var t = e._valueTracker;
                    if (!t) return !0;
                    var n = t.getValue(),
                        r = "";
                    return e && (r = j(e) ? e.checked ? "true" : "false" : e.value), (e = r) !== n && (t.setValue(e), !0)
                }

                function Y(e) {
                    if ("undefined" === typeof(e = e || ("undefined" !== typeof document ? document : void 0))) return null;
                    try {
                        return e.activeElement || e.body
                    } catch (t) {
                        return e.body
                    }
                }

                function Z(e, t) {
                    var n = t.checked;
                    return D({}, t, {
                        defaultChecked: void 0,
                        defaultValue: void 0,
                        value: void 0,
                        checked: null != n ? n : e._wrapperState.initialChecked
                    })
                }

                function J(e, t) {
                    var n = null == t.defaultValue ? "" : t.defaultValue,
                        r = null != t.checked ? t.checked : t.defaultChecked;
                    n = W(null != t.value ? t.value : n), e._wrapperState = {
                        initialChecked: r,
                        initialValue: n,
                        controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
                    }
                }

                function $(e, t) {
                    null != (t = t.checked) && x(e, "checked", t, !1)
                }

                function Q(e, t) {
                    $(e, t);
                    var n = W(t.value),
                        r = t.type;
                    if (null != n) "number" === r ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
                    else if ("submit" === r || "reset" === r) return void e.removeAttribute("value");
                    t.hasOwnProperty("value") ? ee(e, t.type, n) : t.hasOwnProperty("defaultValue") && ee(e, t.type, W(t.defaultValue)), null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
                }

                function K(e, t, n) {
                    if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                        var r = t.type;
                        if (!("submit" !== r && "reset" !== r || void 0 !== t.value && null !== t.value)) return;
                        t = "" + e._wrapperState.initialValue, n || t === e.value || (e.value = t), e.defaultValue = t
                    }
                    "" !== (n = e.name) && (e.name = ""), e.defaultChecked = !!e._wrapperState.initialChecked, "" !== n && (e.name = n)
                }

                function ee(e, t, n) {
                    "number" === t && Y(e.ownerDocument) === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
                }
                var te = Array.isArray;

                function ne(e, t, n, r) {
                    if (e = e.options, t) {
                        t = {};
                        for (var i = 0; i < n.length; i++) t["$" + n[i]] = !0;
                        for (n = 0; n < e.length; n++) i = t.hasOwnProperty("$" + e[n].value), e[n].selected !== i && (e[n].selected = i), i && r && (e[n].defaultSelected = !0)
                    } else {
                        for (n = "" + W(n), t = null, i = 0; i < e.length; i++) {
                            if (e[i].value === n) return e[i].selected = !0, void(r && (e[i].defaultSelected = !0));
                            null !== t || e[i].disabled || (t = e[i])
                        }
                        null !== t && (t.selected = !0)
                    }
                }

                function re(e, t) {
                    if (null != t.dangerouslySetInnerHTML) throw Error(a(91));
                    return D({}, t, {
                        value: void 0,
                        defaultValue: void 0,
                        children: "" + e._wrapperState.initialValue
                    })
                }

                function ie(e, t) {
                    var n = t.value;
                    if (null == n) {
                        if (n = t.children, t = t.defaultValue, null != n) {
                            if (null != t) throw Error(a(92));
                            if (te(n)) {
                                if (1 < n.length) throw Error(a(93));
                                n = n[0]
                            }
                            t = n
                        }
                        null == t && (t = ""), n = t
                    }
                    e._wrapperState = {
                        initialValue: W(n)
                    }
                }

                function ae(e, t) {
                    var n = W(t.value),
                        r = W(t.defaultValue);
                    null != n && ((n = "" + n) !== e.value && (e.value = n), null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)), null != r && (e.defaultValue = "" + r)
                }

                function oe(e) {
                    var t = e.textContent;
                    t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
                }

                function se(e) {
                    switch (e) {
                        case "svg":
                            return "http://www.w3.org/2000/svg";
                        case "math":
                            return "http://www.w3.org/1998/Math/MathML";
                        default:
                            return "http://www.w3.org/1999/xhtml"
                    }
                }

                function le(e, t) {
                    return null == e || "http://www.w3.org/1999/xhtml" === e ? se(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
                }
                var ue, ce, fe = (ce = function(e, t) {
                    if ("http://www.w3.org/2000/svg" !== e.namespaceURI || "innerHTML" in e) e.innerHTML = t;
                    else {
                        for ((ue = ue || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>", t = ue.firstChild; e.firstChild;) e.removeChild(e.firstChild);
                        for (; t.firstChild;) e.appendChild(t.firstChild)
                    }
                }, "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(e, t, n, r) {
                    MSApp.execUnsafeLocalFunction((function() {
                        return ce(e, t)
                    }))
                } : ce);

                function de(e, t) {
                    if (t) {
                        var n = e.firstChild;
                        if (n && n === e.lastChild && 3 === n.nodeType) return void(n.nodeValue = t)
                    }
                    e.textContent = t
                }
                var he = {
                        animationIterationCount: !0,
                        aspectRatio: !0,
                        borderImageOutset: !0,
                        borderImageSlice: !0,
                        borderImageWidth: !0,
                        boxFlex: !0,
                        boxFlexGroup: !0,
                        boxOrdinalGroup: !0,
                        columnCount: !0,
                        columns: !0,
                        flex: !0,
                        flexGrow: !0,
                        flexPositive: !0,
                        flexShrink: !0,
                        flexNegative: !0,
                        flexOrder: !0,
                        gridArea: !0,
                        gridRow: !0,
                        gridRowEnd: !0,
                        gridRowSpan: !0,
                        gridRowStart: !0,
                        gridColumn: !0,
                        gridColumnEnd: !0,
                        gridColumnSpan: !0,
                        gridColumnStart: !0,
                        fontWeight: !0,
                        lineClamp: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        tabSize: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0,
                        fillOpacity: !0,
                        floodOpacity: !0,
                        stopOpacity: !0,
                        strokeDasharray: !0,
                        strokeDashoffset: !0,
                        strokeMiterlimit: !0,
                        strokeOpacity: !0,
                        strokeWidth: !0
                    },
                    pe = ["Webkit", "ms", "Moz", "O"];

                function ve(e, t, n) {
                    return null == t || "boolean" === typeof t || "" === t ? "" : n || "number" !== typeof t || 0 === t || he.hasOwnProperty(e) && he[e] ? ("" + t).trim() : t + "px"
                }

                function me(e, t) {
                    for (var n in e = e.style, t)
                        if (t.hasOwnProperty(n)) {
                            var r = 0 === n.indexOf("--"),
                                i = ve(n, t[n], r);
                            "float" === n && (n = "cssFloat"), r ? e.setProperty(n, i) : e[n] = i
                        }
                }
                Object.keys(he).forEach((function(e) {
                    pe.forEach((function(t) {
                        t = t + e.charAt(0).toUpperCase() + e.substring(1), he[t] = he[e]
                    }))
                }));
                var ge = D({
                    menuitem: !0
                }, {
                    area: !0,
                    base: !0,
                    br: !0,
                    col: !0,
                    embed: !0,
                    hr: !0,
                    img: !0,
                    input: !0,
                    keygen: !0,
                    link: !0,
                    meta: !0,
                    param: !0,
                    source: !0,
                    track: !0,
                    wbr: !0
                });

                function ye(e, t) {
                    if (t) {
                        if (ge[e] && (null != t.children || null != t.dangerouslySetInnerHTML)) throw Error(a(137, e));
                        if (null != t.dangerouslySetInnerHTML) {
                            if (null != t.children) throw Error(a(60));
                            if ("object" !== typeof t.dangerouslySetInnerHTML || !("__html" in t.dangerouslySetInnerHTML)) throw Error(a(61))
                        }
                        if (null != t.style && "object" !== typeof t.style) throw Error(a(62))
                    }
                }

                function xe(e, t) {
                    if (-1 === e.indexOf("-")) return "string" === typeof t.is;
                    switch (e) {
                        case "annotation-xml":
                        case "color-profile":
                        case "font-face":
                        case "font-face-src":
                        case "font-face-uri":
                        case "font-face-format":
                        case "font-face-name":
                        case "missing-glyph":
                            return !1;
                        default:
                            return !0
                    }
                }
                var be = null;

                function _e(e) {
                    return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement), 3 === e.nodeType ? e.parentNode : e
                }
                var we = null,
                    Se = null,
                    Me = null;

                function ke(e) {
                    if (e = xi(e)) {
                        if ("function" !== typeof we) throw Error(a(280));
                        var t = e.stateNode;
                        t && (t = _i(t), we(e.stateNode, e.type, t))
                    }
                }

                function Ee(e) {
                    Se ? Me ? Me.push(e) : Me = [e] : Se = e
                }

                function Te() {
                    if (Se) {
                        var e = Se,
                            t = Me;
                        if (Me = Se = null, ke(e), t)
                            for (e = 0; e < t.length; e++) ke(t[e])
                    }
                }

                function Le(e, t) {
                    return e(t)
                }

                function Ae() {}
                var Ce = !1;

                function Pe(e, t, n) {
                    if (Ce) return e(t, n);
                    Ce = !0;
                    try {
                        return Le(e, t, n)
                    } finally {
                        Ce = !1, (null !== Se || null !== Me) && (Ae(), Te())
                    }
                }

                function Re(e, t) {
                    var n = e.stateNode;
                    if (null === n) return null;
                    var r = _i(n);
                    if (null === r) return null;
                    n = r[t];
                    e: switch (t) {
                        case "onClick":
                        case "onClickCapture":
                        case "onDoubleClick":
                        case "onDoubleClickCapture":
                        case "onMouseDown":
                        case "onMouseDownCapture":
                        case "onMouseMove":
                        case "onMouseMoveCapture":
                        case "onMouseUp":
                        case "onMouseUpCapture":
                        case "onMouseEnter":
                            (r = !r.disabled) || (r = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)), e = !r;
                            break e;
                        default:
                            e = !1
                    }
                    if (e) return null;
                    if (n && "function" !== typeof n) throw Error(a(231, t, typeof n));
                    return n
                }
                var Ne = !1;
                if (c) try {
                    var Ie = {};
                    Object.defineProperty(Ie, "passive", {
                        get: function() {
                            Ne = !0
                        }
                    }), window.addEventListener("test", Ie, Ie), window.removeEventListener("test", Ie, Ie)
                } catch (ce) {
                    Ne = !1
                }

                function ze(e, t, n, r, i, a, o, s, l) {
                    var u = Array.prototype.slice.call(arguments, 3);
                    try {
                        t.apply(n, u)
                    } catch (c) {
                        this.onError(c)
                    }
                }
                var Oe = !1,
                    De = null,
                    Fe = !1,
                    Be = null,
                    Ue = {
                        onError: function(e) {
                            Oe = !0, De = e
                        }
                    };

                function He(e, t, n, r, i, a, o, s, l) {
                    Oe = !1, De = null, ze.apply(Ue, arguments)
                }

                function Ve(e) {
                    var t = e,
                        n = e;
                    if (e.alternate)
                        for (; t.return;) t = t.return;
                    else {
                        e = t;
                        do {
                            0 !== (4098 & (t = e).flags) && (n = t.return), e = t.return
                        } while (e)
                    }
                    return 3 === t.tag ? n : null
                }

                function Ge(e) {
                    if (13 === e.tag) {
                        var t = e.memoizedState;
                        if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)), null !== t) return t.dehydrated
                    }
                    return null
                }

                function We(e) {
                    if (Ve(e) !== e) throw Error(a(188))
                }

                function je(e) {
                    return null !== (e = function(e) {
                        var t = e.alternate;
                        if (!t) {
                            if (null === (t = Ve(e))) throw Error(a(188));
                            return t !== e ? null : e
                        }
                        for (var n = e, r = t;;) {
                            var i = n.return;
                            if (null === i) break;
                            var o = i.alternate;
                            if (null === o) {
                                if (null !== (r = i.return)) {
                                    n = r;
                                    continue
                                }
                                break
                            }
                            if (i.child === o.child) {
                                for (o = i.child; o;) {
                                    if (o === n) return We(i), e;
                                    if (o === r) return We(i), t;
                                    o = o.sibling
                                }
                                throw Error(a(188))
                            }
                            if (n.return !== r.return) n = i, r = o;
                            else {
                                for (var s = !1, l = i.child; l;) {
                                    if (l === n) {
                                        s = !0, n = i, r = o;
                                        break
                                    }
                                    if (l === r) {
                                        s = !0, r = i, n = o;
                                        break
                                    }
                                    l = l.sibling
                                }
                                if (!s) {
                                    for (l = o.child; l;) {
                                        if (l === n) {
                                            s = !0, n = o, r = i;
                                            break
                                        }
                                        if (l === r) {
                                            s = !0, r = o, n = i;
                                            break
                                        }
                                        l = l.sibling
                                    }
                                    if (!s) throw Error(a(189))
                                }
                            }
                            if (n.alternate !== r) throw Error(a(190))
                        }
                        if (3 !== n.tag) throw Error(a(188));
                        return n.stateNode.current === n ? e : t
                    }(e)) ? qe(e) : null
                }

                function qe(e) {
                    if (5 === e.tag || 6 === e.tag) return e;
                    for (e = e.child; null !== e;) {
                        var t = qe(e);
                        if (null !== t) return t;
                        e = e.sibling
                    }
                    return null
                }
                var Xe = i.unstable_scheduleCallback,
                    Ye = i.unstable_cancelCallback,
                    Ze = i.unstable_shouldYield,
                    Je = i.unstable_requestPaint,
                    $e = i.unstable_now,
                    Qe = i.unstable_getCurrentPriorityLevel,
                    Ke = i.unstable_ImmediatePriority,
                    et = i.unstable_UserBlockingPriority,
                    tt = i.unstable_NormalPriority,
                    nt = i.unstable_LowPriority,
                    rt = i.unstable_IdlePriority,
                    it = null,
                    at = null;
                var ot = Math.clz32 ? Math.clz32 : function(e) {
                        return 0 === (e >>>= 0) ? 32 : 31 - (st(e) / lt | 0) | 0
                    },
                    st = Math.log,
                    lt = Math.LN2;
                var ut = 64,
                    ct = 4194304;

                function ft(e) {
                    switch (e & -e) {
                        case 1:
                            return 1;
                        case 2:
                            return 2;
                        case 4:
                            return 4;
                        case 8:
                            return 8;
                        case 16:
                            return 16;
                        case 32:
                            return 32;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return 4194240 & e;
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            return 130023424 & e;
                        case 134217728:
                            return 134217728;
                        case 268435456:
                            return 268435456;
                        case 536870912:
                            return 536870912;
                        case 1073741824:
                            return 1073741824;
                        default:
                            return e
                    }
                }

                function dt(e, t) {
                    var n = e.pendingLanes;
                    if (0 === n) return 0;
                    var r = 0,
                        i = e.suspendedLanes,
                        a = e.pingedLanes,
                        o = 268435455 & n;
                    if (0 !== o) {
                        var s = o & ~i;
                        0 !== s ? r = ft(s) : 0 !== (a &= o) && (r = ft(a))
                    } else 0 !== (o = n & ~i) ? r = ft(o) : 0 !== a && (r = ft(a));
                    if (0 === r) return 0;
                    if (0 !== t && t !== r && 0 === (t & i) && ((i = r & -r) >= (a = t & -t) || 16 === i && 0 !== (4194240 & a))) return t;
                    if (0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes))
                        for (e = e.entanglements, t &= r; 0 < t;) i = 1 << (n = 31 - ot(t)), r |= e[n], t &= ~i;
                    return r
                }

                function ht(e, t) {
                    switch (e) {
                        case 1:
                        case 2:
                        case 4:
                            return t + 250;
                        case 8:
                        case 16:
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return t + 5e3;
                        default:
                            return -1
                    }
                }

                function pt(e) {
                    return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0
                }

                function vt() {
                    var e = ut;
                    return 0 === (4194240 & (ut <<= 1)) && (ut = 64), e
                }

                function mt(e) {
                    for (var t = [], n = 0; 31 > n; n++) t.push(e);
                    return t
                }

                function gt(e, t, n) {
                    e.pendingLanes |= t, 536870912 !== t && (e.suspendedLanes = 0, e.pingedLanes = 0), (e = e.eventTimes)[t = 31 - ot(t)] = n
                }

                function yt(e, t) {
                    var n = e.entangledLanes |= t;
                    for (e = e.entanglements; n;) {
                        var r = 31 - ot(n),
                            i = 1 << r;
                        i & t | e[r] & t && (e[r] |= t), n &= ~i
                    }
                }
                var xt = 0;

                function bt(e) {
                    return 1 < (e &= -e) ? 4 < e ? 0 !== (268435455 & e) ? 16 : 536870912 : 4 : 1
                }
                var _t, wt, St, Mt, kt, Et = !1,
                    Tt = [],
                    Lt = null,
                    At = null,
                    Ct = null,
                    Pt = new Map,
                    Rt = new Map,
                    Nt = [],
                    It = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

                function zt(e, t) {
                    switch (e) {
                        case "focusin":
                        case "focusout":
                            Lt = null;
                            break;
                        case "dragenter":
                        case "dragleave":
                            At = null;
                            break;
                        case "mouseover":
                        case "mouseout":
                            Ct = null;
                            break;
                        case "pointerover":
                        case "pointerout":
                            Pt.delete(t.pointerId);
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                            Rt.delete(t.pointerId)
                    }
                }

                function Ot(e, t, n, r, i, a) {
                    return null === e || e.nativeEvent !== a ? (e = {
                        blockedOn: t,
                        domEventName: n,
                        eventSystemFlags: r,
                        nativeEvent: a,
                        targetContainers: [i]
                    }, null !== t && (null !== (t = xi(t)) && wt(t)), e) : (e.eventSystemFlags |= r, t = e.targetContainers, null !== i && -1 === t.indexOf(i) && t.push(i), e)
                }

                function Dt(e) {
                    var t = yi(e.target);
                    if (null !== t) {
                        var n = Ve(t);
                        if (null !== n)
                            if (13 === (t = n.tag)) {
                                if (null !== (t = Ge(n))) return e.blockedOn = t, void kt(e.priority, (function() {
                                    St(n)
                                }))
                            } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated) return void(e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
                    }
                    e.blockedOn = null
                }

                function Ft(e) {
                    if (null !== e.blockedOn) return !1;
                    for (var t = e.targetContainers; 0 < t.length;) {
                        var n = Zt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                        if (null !== n) return null !== (t = xi(n)) && wt(t), e.blockedOn = n, !1;
                        var r = new(n = e.nativeEvent).constructor(n.type, n);
                        be = r, n.target.dispatchEvent(r), be = null, t.shift()
                    }
                    return !0
                }

                function Bt(e, t, n) {
                    Ft(e) && n.delete(t)
                }

                function Ut() {
                    Et = !1, null !== Lt && Ft(Lt) && (Lt = null), null !== At && Ft(At) && (At = null), null !== Ct && Ft(Ct) && (Ct = null), Pt.forEach(Bt), Rt.forEach(Bt)
                }

                function Ht(e, t) {
                    e.blockedOn === t && (e.blockedOn = null, Et || (Et = !0, i.unstable_scheduleCallback(i.unstable_NormalPriority, Ut)))
                }

                function Vt(e) {
                    function t(t) {
                        return Ht(t, e)
                    }
                    if (0 < Tt.length) {
                        Ht(Tt[0], e);
                        for (var n = 1; n < Tt.length; n++) {
                            var r = Tt[n];
                            r.blockedOn === e && (r.blockedOn = null)
                        }
                    }
                    for (null !== Lt && Ht(Lt, e), null !== At && Ht(At, e), null !== Ct && Ht(Ct, e), Pt.forEach(t), Rt.forEach(t), n = 0; n < Nt.length; n++)(r = Nt[n]).blockedOn === e && (r.blockedOn = null);
                    for (; 0 < Nt.length && null === (n = Nt[0]).blockedOn;) Dt(n), null === n.blockedOn && Nt.shift()
                }
                var Gt = b.ReactCurrentBatchConfig,
                    Wt = !0;

                function jt(e, t, n, r) {
                    var i = xt,
                        a = Gt.transition;
                    Gt.transition = null;
                    try {
                        xt = 1, Xt(e, t, n, r)
                    } finally {
                        xt = i, Gt.transition = a
                    }
                }

                function qt(e, t, n, r) {
                    var i = xt,
                        a = Gt.transition;
                    Gt.transition = null;
                    try {
                        xt = 4, Xt(e, t, n, r)
                    } finally {
                        xt = i, Gt.transition = a
                    }
                }

                function Xt(e, t, n, r) {
                    if (Wt) {
                        var i = Zt(e, t, n, r);
                        if (null === i) Wr(e, t, r, Yt, n), zt(e, r);
                        else if (function(e, t, n, r, i) {
                                switch (t) {
                                    case "focusin":
                                        return Lt = Ot(Lt, e, t, n, r, i), !0;
                                    case "dragenter":
                                        return At = Ot(At, e, t, n, r, i), !0;
                                    case "mouseover":
                                        return Ct = Ot(Ct, e, t, n, r, i), !0;
                                    case "pointerover":
                                        var a = i.pointerId;
                                        return Pt.set(a, Ot(Pt.get(a) || null, e, t, n, r, i)), !0;
                                    case "gotpointercapture":
                                        return a = i.pointerId, Rt.set(a, Ot(Rt.get(a) || null, e, t, n, r, i)), !0
                                }
                                return !1
                            }(i, e, t, n, r)) r.stopPropagation();
                        else if (zt(e, r), 4 & t && -1 < It.indexOf(e)) {
                            for (; null !== i;) {
                                var a = xi(i);
                                if (null !== a && _t(a), null === (a = Zt(e, t, n, r)) && Wr(e, t, r, Yt, n), a === i) break;
                                i = a
                            }
                            null !== i && r.stopPropagation()
                        } else Wr(e, t, r, null, n)
                    }
                }
                var Yt = null;

                function Zt(e, t, n, r) {
                    if (Yt = null, null !== (e = yi(e = _e(r))))
                        if (null === (t = Ve(e))) e = null;
                        else if (13 === (n = t.tag)) {
                        if (null !== (e = Ge(t))) return e;
                        e = null
                    } else if (3 === n) {
                        if (t.stateNode.current.memoizedState.isDehydrated) return 3 === t.tag ? t.stateNode.containerInfo : null;
                        e = null
                    } else t !== e && (e = null);
                    return Yt = e, null
                }

                function Jt(e) {
                    switch (e) {
                        case "cancel":
                        case "click":
                        case "close":
                        case "contextmenu":
                        case "copy":
                        case "cut":
                        case "auxclick":
                        case "dblclick":
                        case "dragend":
                        case "dragstart":
                        case "drop":
                        case "focusin":
                        case "focusout":
                        case "input":
                        case "invalid":
                        case "keydown":
                        case "keypress":
                        case "keyup":
                        case "mousedown":
                        case "mouseup":
                        case "paste":
                        case "pause":
                        case "play":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointerup":
                        case "ratechange":
                        case "reset":
                        case "resize":
                        case "seeked":
                        case "submit":
                        case "touchcancel":
                        case "touchend":
                        case "touchstart":
                        case "volumechange":
                        case "change":
                        case "selectionchange":
                        case "textInput":
                        case "compositionstart":
                        case "compositionend":
                        case "compositionupdate":
                        case "beforeblur":
                        case "afterblur":
                        case "beforeinput":
                        case "blur":
                        case "fullscreenchange":
                        case "focus":
                        case "hashchange":
                        case "popstate":
                        case "select":
                        case "selectstart":
                            return 1;
                        case "drag":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "mousemove":
                        case "mouseout":
                        case "mouseover":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "scroll":
                        case "toggle":
                        case "touchmove":
                        case "wheel":
                        case "mouseenter":
                        case "mouseleave":
                        case "pointerenter":
                        case "pointerleave":
                            return 4;
                        case "message":
                            switch (Qe()) {
                                case Ke:
                                    return 1;
                                case et:
                                    return 4;
                                case tt:
                                case nt:
                                    return 16;
                                case rt:
                                    return 536870912;
                                default:
                                    return 16
                            }
                        default:
                            return 16
                    }
                }
                var $t = null,
                    Qt = null,
                    Kt = null;

                function en() {
                    if (Kt) return Kt;
                    var e, t, n = Qt,
                        r = n.length,
                        i = "value" in $t ? $t.value : $t.textContent,
                        a = i.length;
                    for (e = 0; e < r && n[e] === i[e]; e++);
                    var o = r - e;
                    for (t = 1; t <= o && n[r - t] === i[a - t]; t++);
                    return Kt = i.slice(e, 1 < t ? 1 - t : void 0)
                }

                function tn(e) {
                    var t = e.keyCode;
                    return "charCode" in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t, 10 === e && (e = 13), 32 <= e || 13 === e ? e : 0
                }

                function nn() {
                    return !0
                }

                function rn() {
                    return !1
                }

                function an(e) {
                    function t(t, n, r, i, a) {
                        for (var o in this._reactName = t, this._targetInst = r, this.type = n, this.nativeEvent = i, this.target = a, this.currentTarget = null, e) e.hasOwnProperty(o) && (t = e[o], this[o] = t ? t(i) : i[o]);
                        return this.isDefaultPrevented = (null != i.defaultPrevented ? i.defaultPrevented : !1 === i.returnValue) ? nn : rn, this.isPropagationStopped = rn, this
                    }
                    return D(t.prototype, {
                        preventDefault: function() {
                            this.defaultPrevented = !0;
                            var e = this.nativeEvent;
                            e && (e.preventDefault ? e.preventDefault() : "unknown" !== typeof e.returnValue && (e.returnValue = !1), this.isDefaultPrevented = nn)
                        },
                        stopPropagation: function() {
                            var e = this.nativeEvent;
                            e && (e.stopPropagation ? e.stopPropagation() : "unknown" !== typeof e.cancelBubble && (e.cancelBubble = !0), this.isPropagationStopped = nn)
                        },
                        persist: function() {},
                        isPersistent: nn
                    }), t
                }
                var on, sn, ln, un = {
                        eventPhase: 0,
                        bubbles: 0,
                        cancelable: 0,
                        timeStamp: function(e) {
                            return e.timeStamp || Date.now()
                        },
                        defaultPrevented: 0,
                        isTrusted: 0
                    },
                    cn = an(un),
                    fn = D({}, un, {
                        view: 0,
                        detail: 0
                    }),
                    dn = an(fn),
                    hn = D({}, fn, {
                        screenX: 0,
                        screenY: 0,
                        clientX: 0,
                        clientY: 0,
                        pageX: 0,
                        pageY: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        altKey: 0,
                        metaKey: 0,
                        getModifierState: kn,
                        button: 0,
                        buttons: 0,
                        relatedTarget: function(e) {
                            return void 0 === e.relatedTarget ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                        },
                        movementX: function(e) {
                            return "movementX" in e ? e.movementX : (e !== ln && (ln && "mousemove" === e.type ? (on = e.screenX - ln.screenX, sn = e.screenY - ln.screenY) : sn = on = 0, ln = e), on)
                        },
                        movementY: function(e) {
                            return "movementY" in e ? e.movementY : sn
                        }
                    }),
                    pn = an(hn),
                    vn = an(D({}, hn, {
                        dataTransfer: 0
                    })),
                    mn = an(D({}, fn, {
                        relatedTarget: 0
                    })),
                    gn = an(D({}, un, {
                        animationName: 0,
                        elapsedTime: 0,
                        pseudoElement: 0
                    })),
                    yn = D({}, un, {
                        clipboardData: function(e) {
                            return "clipboardData" in e ? e.clipboardData : window.clipboardData
                        }
                    }),
                    xn = an(yn),
                    bn = an(D({}, un, {
                        data: 0
                    })),
                    _n = {
                        Esc: "Escape",
                        Spacebar: " ",
                        Left: "ArrowLeft",
                        Up: "ArrowUp",
                        Right: "ArrowRight",
                        Down: "ArrowDown",
                        Del: "Delete",
                        Win: "OS",
                        Menu: "ContextMenu",
                        Apps: "ContextMenu",
                        Scroll: "ScrollLock",
                        MozPrintableKey: "Unidentified"
                    },
                    wn = {
                        8: "Backspace",
                        9: "Tab",
                        12: "Clear",
                        13: "Enter",
                        16: "Shift",
                        17: "Control",
                        18: "Alt",
                        19: "Pause",
                        20: "CapsLock",
                        27: "Escape",
                        32: " ",
                        33: "PageUp",
                        34: "PageDown",
                        35: "End",
                        36: "Home",
                        37: "ArrowLeft",
                        38: "ArrowUp",
                        39: "ArrowRight",
                        40: "ArrowDown",
                        45: "Insert",
                        46: "Delete",
                        112: "F1",
                        113: "F2",
                        114: "F3",
                        115: "F4",
                        116: "F5",
                        117: "F6",
                        118: "F7",
                        119: "F8",
                        120: "F9",
                        121: "F10",
                        122: "F11",
                        123: "F12",
                        144: "NumLock",
                        145: "ScrollLock",
                        224: "Meta"
                    },
                    Sn = {
                        Alt: "altKey",
                        Control: "ctrlKey",
                        Meta: "metaKey",
                        Shift: "shiftKey"
                    };

                function Mn(e) {
                    var t = this.nativeEvent;
                    return t.getModifierState ? t.getModifierState(e) : !!(e = Sn[e]) && !!t[e]
                }

                function kn() {
                    return Mn
                }
                var En = D({}, fn, {
                        key: function(e) {
                            if (e.key) {
                                var t = _n[e.key] || e.key;
                                if ("Unidentified" !== t) return t
                            }
                            return "keypress" === e.type ? 13 === (e = tn(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? wn[e.keyCode] || "Unidentified" : ""
                        },
                        code: 0,
                        location: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        altKey: 0,
                        metaKey: 0,
                        repeat: 0,
                        locale: 0,
                        getModifierState: kn,
                        charCode: function(e) {
                            return "keypress" === e.type ? tn(e) : 0
                        },
                        keyCode: function(e) {
                            return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                        },
                        which: function(e) {
                            return "keypress" === e.type ? tn(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                        }
                    }),
                    Tn = an(En),
                    Ln = an(D({}, hn, {
                        pointerId: 0,
                        width: 0,
                        height: 0,
                        pressure: 0,
                        tangentialPressure: 0,
                        tiltX: 0,
                        tiltY: 0,
                        twist: 0,
                        pointerType: 0,
                        isPrimary: 0
                    })),
                    An = an(D({}, fn, {
                        touches: 0,
                        targetTouches: 0,
                        changedTouches: 0,
                        altKey: 0,
                        metaKey: 0,
                        ctrlKey: 0,
                        shiftKey: 0,
                        getModifierState: kn
                    })),
                    Cn = an(D({}, un, {
                        propertyName: 0,
                        elapsedTime: 0,
                        pseudoElement: 0
                    })),
                    Pn = D({}, hn, {
                        deltaX: function(e) {
                            return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0
                        },
                        deltaY: function(e) {
                            return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0
                        },
                        deltaZ: 0,
                        deltaMode: 0
                    }),
                    Rn = an(Pn),
                    Nn = [9, 13, 27, 32],
                    In = c && "CompositionEvent" in window,
                    zn = null;
                c && "documentMode" in document && (zn = document.documentMode);
                var On = c && "TextEvent" in window && !zn,
                    Dn = c && (!In || zn && 8 < zn && 11 >= zn),
                    Fn = String.fromCharCode(32),
                    Bn = !1;

                function Un(e, t) {
                    switch (e) {
                        case "keyup":
                            return -1 !== Nn.indexOf(t.keyCode);
                        case "keydown":
                            return 229 !== t.keyCode;
                        case "keypress":
                        case "mousedown":
                        case "focusout":
                            return !0;
                        default:
                            return !1
                    }
                }

                function Hn(e) {
                    return "object" === typeof(e = e.detail) && "data" in e ? e.data : null
                }
                var Vn = !1;
                var Gn = {
                    color: !0,
                    date: !0,
                    datetime: !0,
                    "datetime-local": !0,
                    email: !0,
                    month: !0,
                    number: !0,
                    password: !0,
                    range: !0,
                    search: !0,
                    tel: !0,
                    text: !0,
                    time: !0,
                    url: !0,
                    week: !0
                };

                function Wn(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return "input" === t ? !!Gn[e.type] : "textarea" === t
                }

                function jn(e, t, n, r) {
                    Ee(r), 0 < (t = qr(t, "onChange")).length && (n = new cn("onChange", "change", null, n, r), e.push({
                        event: n,
                        listeners: t
                    }))
                }
                var qn = null,
                    Xn = null;

                function Yn(e) {
                    Fr(e, 0)
                }

                function Zn(e) {
                    if (X(bi(e))) return e
                }

                function Jn(e, t) {
                    if ("change" === e) return t
                }
                var $n = !1;
                if (c) {
                    var Qn;
                    if (c) {
                        var Kn = "oninput" in document;
                        if (!Kn) {
                            var er = document.createElement("div");
                            er.setAttribute("oninput", "return;"), Kn = "function" === typeof er.oninput
                        }
                        Qn = Kn
                    } else Qn = !1;
                    $n = Qn && (!document.documentMode || 9 < document.documentMode)
                }

                function tr() {
                    qn && (qn.detachEvent("onpropertychange", nr), Xn = qn = null)
                }

                function nr(e) {
                    if ("value" === e.propertyName && Zn(Xn)) {
                        var t = [];
                        jn(t, Xn, e, _e(e)), Pe(Yn, t)
                    }
                }

                function rr(e, t, n) {
                    "focusin" === e ? (tr(), Xn = n, (qn = t).attachEvent("onpropertychange", nr)) : "focusout" === e && tr()
                }

                function ir(e) {
                    if ("selectionchange" === e || "keyup" === e || "keydown" === e) return Zn(Xn)
                }

                function ar(e, t) {
                    if ("click" === e) return Zn(t)
                }

                function or(e, t) {
                    if ("input" === e || "change" === e) return Zn(t)
                }
                var sr = "function" === typeof Object.is ? Object.is : function(e, t) {
                    return e === t && (0 !== e || 1 / e === 1 / t) || e !== e && t !== t
                };

                function lr(e, t) {
                    if (sr(e, t)) return !0;
                    if ("object" !== typeof e || null === e || "object" !== typeof t || null === t) return !1;
                    var n = Object.keys(e),
                        r = Object.keys(t);
                    if (n.length !== r.length) return !1;
                    for (r = 0; r < n.length; r++) {
                        var i = n[r];
                        if (!f.call(t, i) || !sr(e[i], t[i])) return !1
                    }
                    return !0
                }

                function ur(e) {
                    for (; e && e.firstChild;) e = e.firstChild;
                    return e
                }

                function cr(e, t) {
                    var n, r = ur(e);
                    for (e = 0; r;) {
                        if (3 === r.nodeType) {
                            if (n = e + r.textContent.length, e <= t && n >= t) return {
                                node: r,
                                offset: t - e
                            };
                            e = n
                        }
                        e: {
                            for (; r;) {
                                if (r.nextSibling) {
                                    r = r.nextSibling;
                                    break e
                                }
                                r = r.parentNode
                            }
                            r = void 0
                        }
                        r = ur(r)
                    }
                }

                function fr(e, t) {
                    return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? fr(e, t.parentNode) : "contains" in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
                }

                function dr() {
                    for (var e = window, t = Y(); t instanceof e.HTMLIFrameElement;) {
                        try {
                            var n = "string" === typeof t.contentWindow.location.href
                        } catch (r) {
                            n = !1
                        }
                        if (!n) break;
                        t = Y((e = t.contentWindow).document)
                    }
                    return t
                }

                function hr(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
                }

                function pr(e) {
                    var t = dr(),
                        n = e.focusedElem,
                        r = e.selectionRange;
                    if (t !== n && n && n.ownerDocument && fr(n.ownerDocument.documentElement, n)) {
                        if (null !== r && hr(n))
                            if (t = r.start, void 0 === (e = r.end) && (e = t), "selectionStart" in n) n.selectionStart = t, n.selectionEnd = Math.min(e, n.value.length);
                            else if ((e = (t = n.ownerDocument || document) && t.defaultView || window).getSelection) {
                            e = e.getSelection();
                            var i = n.textContent.length,
                                a = Math.min(r.start, i);
                            r = void 0 === r.end ? a : Math.min(r.end, i), !e.extend && a > r && (i = r, r = a, a = i), i = cr(n, a);
                            var o = cr(n, r);
                            i && o && (1 !== e.rangeCount || e.anchorNode !== i.node || e.anchorOffset !== i.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) && ((t = t.createRange()).setStart(i.node, i.offset), e.removeAllRanges(), a > r ? (e.addRange(t), e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset), e.addRange(t)))
                        }
                        for (t = [], e = n; e = e.parentNode;) 1 === e.nodeType && t.push({
                            element: e,
                            left: e.scrollLeft,
                            top: e.scrollTop
                        });
                        for ("function" === typeof n.focus && n.focus(), n = 0; n < t.length; n++)(e = t[n]).element.scrollLeft = e.left, e.element.scrollTop = e.top
                    }
                }
                var vr = c && "documentMode" in document && 11 >= document.documentMode,
                    mr = null,
                    gr = null,
                    yr = null,
                    xr = !1;

                function br(e, t, n) {
                    var r = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
                    xr || null == mr || mr !== Y(r) || ("selectionStart" in (r = mr) && hr(r) ? r = {
                        start: r.selectionStart,
                        end: r.selectionEnd
                    } : r = {
                        anchorNode: (r = (r.ownerDocument && r.ownerDocument.defaultView || window).getSelection()).anchorNode,
                        anchorOffset: r.anchorOffset,
                        focusNode: r.focusNode,
                        focusOffset: r.focusOffset
                    }, yr && lr(yr, r) || (yr = r, 0 < (r = qr(gr, "onSelect")).length && (t = new cn("onSelect", "select", null, t, n), e.push({
                        event: t,
                        listeners: r
                    }), t.target = mr)))
                }

                function _r(e, t) {
                    var n = {};
                    return n[e.toLowerCase()] = t.toLowerCase(), n["Webkit" + e] = "webkit" + t, n["Moz" + e] = "moz" + t, n
                }
                var wr = {
                        animationend: _r("Animation", "AnimationEnd"),
                        animationiteration: _r("Animation", "AnimationIteration"),
                        animationstart: _r("Animation", "AnimationStart"),
                        transitionend: _r("Transition", "TransitionEnd")
                    },
                    Sr = {},
                    Mr = {};

                function kr(e) {
                    if (Sr[e]) return Sr[e];
                    if (!wr[e]) return e;
                    var t, n = wr[e];
                    for (t in n)
                        if (n.hasOwnProperty(t) && t in Mr) return Sr[e] = n[t];
                    return e
                }
                c && (Mr = document.createElement("div").style, "AnimationEvent" in window || (delete wr.animationend.animation, delete wr.animationiteration.animation, delete wr.animationstart.animation), "TransitionEvent" in window || delete wr.transitionend.transition);
                var Er = kr("animationend"),
                    Tr = kr("animationiteration"),
                    Lr = kr("animationstart"),
                    Ar = kr("transitionend"),
                    Cr = new Map,
                    Pr = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");

                function Rr(e, t) {
                    Cr.set(e, t), l(t, [e])
                }
                for (var Nr = 0; Nr < Pr.length; Nr++) {
                    var Ir = Pr[Nr];
                    Rr(Ir.toLowerCase(), "on" + (Ir[0].toUpperCase() + Ir.slice(1)))
                }
                Rr(Er, "onAnimationEnd"), Rr(Tr, "onAnimationIteration"), Rr(Lr, "onAnimationStart"), Rr("dblclick", "onDoubleClick"), Rr("focusin", "onFocus"), Rr("focusout", "onBlur"), Rr(Ar, "onTransitionEnd"), u("onMouseEnter", ["mouseout", "mouseover"]), u("onMouseLeave", ["mouseout", "mouseover"]), u("onPointerEnter", ["pointerout", "pointerover"]), u("onPointerLeave", ["pointerout", "pointerover"]), l("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")), l("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")), l("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), l("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")), l("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
                var zr = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
                    Or = new Set("cancel close invalid load scroll toggle".split(" ").concat(zr));

                function Dr(e, t, n) {
                    var r = e.type || "unknown-event";
                    e.currentTarget = n,
                        function(e, t, n, r, i, o, s, l, u) {
                            if (He.apply(this, arguments), Oe) {
                                if (!Oe) throw Error(a(198));
                                var c = De;
                                Oe = !1, De = null, Fe || (Fe = !0, Be = c)
                            }
                        }(r, t, void 0, e), e.currentTarget = null
                }

                function Fr(e, t) {
                    t = 0 !== (4 & t);
                    for (var n = 0; n < e.length; n++) {
                        var r = e[n],
                            i = r.event;
                        r = r.listeners;
                        e: {
                            var a = void 0;
                            if (t)
                                for (var o = r.length - 1; 0 <= o; o--) {
                                    var s = r[o],
                                        l = s.instance,
                                        u = s.currentTarget;
                                    if (s = s.listener, l !== a && i.isPropagationStopped()) break e;
                                    Dr(i, s, u), a = l
                                } else
                                    for (o = 0; o < r.length; o++) {
                                        if (l = (s = r[o]).instance, u = s.currentTarget, s = s.listener, l !== a && i.isPropagationStopped()) break e;
                                        Dr(i, s, u), a = l
                                    }
                        }
                    }
                    if (Fe) throw e = Be, Fe = !1, Be = null, e
                }

                function Br(e, t) {
                    var n = t[vi];
                    void 0 === n && (n = t[vi] = new Set);
                    var r = e + "__bubble";
                    n.has(r) || (Gr(t, e, 2, !1), n.add(r))
                }

                function Ur(e, t, n) {
                    var r = 0;
                    t && (r |= 4), Gr(n, e, r, t)
                }
                var Hr = "_reactListening" + Math.random().toString(36).slice(2);

                function Vr(e) {
                    if (!e[Hr]) {
                        e[Hr] = !0, o.forEach((function(t) {
                            "selectionchange" !== t && (Or.has(t) || Ur(t, !1, e), Ur(t, !0, e))
                        }));
                        var t = 9 === e.nodeType ? e : e.ownerDocument;
                        null === t || t[Hr] || (t[Hr] = !0, Ur("selectionchange", !1, t))
                    }
                }

                function Gr(e, t, n, r) {
                    switch (Jt(t)) {
                        case 1:
                            var i = jt;
                            break;
                        case 4:
                            i = qt;
                            break;
                        default:
                            i = Xt
                    }
                    n = i.bind(null, t, n, e), i = void 0, !Ne || "touchstart" !== t && "touchmove" !== t && "wheel" !== t || (i = !0), r ? void 0 !== i ? e.addEventListener(t, n, {
                        capture: !0,
                        passive: i
                    }) : e.addEventListener(t, n, !0) : void 0 !== i ? e.addEventListener(t, n, {
                        passive: i
                    }) : e.addEventListener(t, n, !1)
                }

                function Wr(e, t, n, r, i) {
                    var a = r;
                    if (0 === (1 & t) && 0 === (2 & t) && null !== r) e: for (;;) {
                        if (null === r) return;
                        var o = r.tag;
                        if (3 === o || 4 === o) {
                            var s = r.stateNode.containerInfo;
                            if (s === i || 8 === s.nodeType && s.parentNode === i) break;
                            if (4 === o)
                                for (o = r.return; null !== o;) {
                                    var l = o.tag;
                                    if ((3 === l || 4 === l) && ((l = o.stateNode.containerInfo) === i || 8 === l.nodeType && l.parentNode === i)) return;
                                    o = o.return
                                }
                            for (; null !== s;) {
                                if (null === (o = yi(s))) return;
                                if (5 === (l = o.tag) || 6 === l) {
                                    r = a = o;
                                    continue e
                                }
                                s = s.parentNode
                            }
                        }
                        r = r.return
                    }
                    Pe((function() {
                        var r = a,
                            i = _e(n),
                            o = [];
                        e: {
                            var s = Cr.get(e);
                            if (void 0 !== s) {
                                var l = cn,
                                    u = e;
                                switch (e) {
                                    case "keypress":
                                        if (0 === tn(n)) break e;
                                    case "keydown":
                                    case "keyup":
                                        l = Tn;
                                        break;
                                    case "focusin":
                                        u = "focus", l = mn;
                                        break;
                                    case "focusout":
                                        u = "blur", l = mn;
                                        break;
                                    case "beforeblur":
                                    case "afterblur":
                                        l = mn;
                                        break;
                                    case "click":
                                        if (2 === n.button) break e;
                                    case "auxclick":
                                    case "dblclick":
                                    case "mousedown":
                                    case "mousemove":
                                    case "mouseup":
                                    case "mouseout":
                                    case "mouseover":
                                    case "contextmenu":
                                        l = pn;
                                        break;
                                    case "drag":
                                    case "dragend":
                                    case "dragenter":
                                    case "dragexit":
                                    case "dragleave":
                                    case "dragover":
                                    case "dragstart":
                                    case "drop":
                                        l = vn;
                                        break;
                                    case "touchcancel":
                                    case "touchend":
                                    case "touchmove":
                                    case "touchstart":
                                        l = An;
                                        break;
                                    case Er:
                                    case Tr:
                                    case Lr:
                                        l = gn;
                                        break;
                                    case Ar:
                                        l = Cn;
                                        break;
                                    case "scroll":
                                        l = dn;
                                        break;
                                    case "wheel":
                                        l = Rn;
                                        break;
                                    case "copy":
                                    case "cut":
                                    case "paste":
                                        l = xn;
                                        break;
                                    case "gotpointercapture":
                                    case "lostpointercapture":
                                    case "pointercancel":
                                    case "pointerdown":
                                    case "pointermove":
                                    case "pointerout":
                                    case "pointerover":
                                    case "pointerup":
                                        l = Ln
                                }
                                var c = 0 !== (4 & t),
                                    f = !c && "scroll" === e,
                                    d = c ? null !== s ? s + "Capture" : null : s;
                                c = [];
                                for (var h, p = r; null !== p;) {
                                    var v = (h = p).stateNode;
                                    if (5 === h.tag && null !== v && (h = v, null !== d && (null != (v = Re(p, d)) && c.push(jr(p, v, h)))), f) break;
                                    p = p.return
                                }
                                0 < c.length && (s = new l(s, u, null, n, i), o.push({
                                    event: s,
                                    listeners: c
                                }))
                            }
                        }
                        if (0 === (7 & t)) {
                            if (l = "mouseout" === e || "pointerout" === e, (!(s = "mouseover" === e || "pointerover" === e) || n === be || !(u = n.relatedTarget || n.fromElement) || !yi(u) && !u[pi]) && (l || s) && (s = i.window === i ? i : (s = i.ownerDocument) ? s.defaultView || s.parentWindow : window, l ? (l = r, null !== (u = (u = n.relatedTarget || n.toElement) ? yi(u) : null) && (u !== (f = Ve(u)) || 5 !== u.tag && 6 !== u.tag) && (u = null)) : (l = null, u = r), l !== u)) {
                                if (c = pn, v = "onMouseLeave", d = "onMouseEnter", p = "mouse", "pointerout" !== e && "pointerover" !== e || (c = Ln, v = "onPointerLeave", d = "onPointerEnter", p = "pointer"), f = null == l ? s : bi(l), h = null == u ? s : bi(u), (s = new c(v, p + "leave", l, n, i)).target = f, s.relatedTarget = h, v = null, yi(i) === r && ((c = new c(d, p + "enter", u, n, i)).target = h, c.relatedTarget = f, v = c), f = v, l && u) e: {
                                    for (d = u, p = 0, h = c = l; h; h = Xr(h)) p++;
                                    for (h = 0, v = d; v; v = Xr(v)) h++;
                                    for (; 0 < p - h;) c = Xr(c),
                                    p--;
                                    for (; 0 < h - p;) d = Xr(d),
                                    h--;
                                    for (; p--;) {
                                        if (c === d || null !== d && c === d.alternate) break e;
                                        c = Xr(c), d = Xr(d)
                                    }
                                    c = null
                                }
                                else c = null;
                                null !== l && Yr(o, s, l, c, !1), null !== u && null !== f && Yr(o, f, u, c, !0)
                            }
                            if ("select" === (l = (s = r ? bi(r) : window).nodeName && s.nodeName.toLowerCase()) || "input" === l && "file" === s.type) var m = Jn;
                            else if (Wn(s))
                                if ($n) m = or;
                                else {
                                    m = ir;
                                    var g = rr
                                }
                            else(l = s.nodeName) && "input" === l.toLowerCase() && ("checkbox" === s.type || "radio" === s.type) && (m = ar);
                            switch (m && (m = m(e, r)) ? jn(o, m, n, i) : (g && g(e, s, r), "focusout" === e && (g = s._wrapperState) && g.controlled && "number" === s.type && ee(s, "number", s.value)), g = r ? bi(r) : window, e) {
                                case "focusin":
                                    (Wn(g) || "true" === g.contentEditable) && (mr = g, gr = r, yr = null);
                                    break;
                                case "focusout":
                                    yr = gr = mr = null;
                                    break;
                                case "mousedown":
                                    xr = !0;
                                    break;
                                case "contextmenu":
                                case "mouseup":
                                case "dragend":
                                    xr = !1, br(o, n, i);
                                    break;
                                case "selectionchange":
                                    if (vr) break;
                                case "keydown":
                                case "keyup":
                                    br(o, n, i)
                            }
                            var y;
                            if (In) e: {
                                switch (e) {
                                    case "compositionstart":
                                        var x = "onCompositionStart";
                                        break e;
                                    case "compositionend":
                                        x = "onCompositionEnd";
                                        break e;
                                    case "compositionupdate":
                                        x = "onCompositionUpdate";
                                        break e
                                }
                                x = void 0
                            }
                            else Vn ? Un(e, n) && (x = "onCompositionEnd") : "keydown" === e && 229 === n.keyCode && (x = "onCompositionStart");
                            x && (Dn && "ko" !== n.locale && (Vn || "onCompositionStart" !== x ? "onCompositionEnd" === x && Vn && (y = en()) : (Qt = "value" in ($t = i) ? $t.value : $t.textContent, Vn = !0)), 0 < (g = qr(r, x)).length && (x = new bn(x, e, null, n, i), o.push({
                                event: x,
                                listeners: g
                            }), y ? x.data = y : null !== (y = Hn(n)) && (x.data = y))), (y = On ? function(e, t) {
                                switch (e) {
                                    case "compositionend":
                                        return Hn(t);
                                    case "keypress":
                                        return 32 !== t.which ? null : (Bn = !0, Fn);
                                    case "textInput":
                                        return (e = t.data) === Fn && Bn ? null : e;
                                    default:
                                        return null
                                }
                            }(e, n) : function(e, t) {
                                if (Vn) return "compositionend" === e || !In && Un(e, t) ? (e = en(), Kt = Qt = $t = null, Vn = !1, e) : null;
                                switch (e) {
                                    case "paste":
                                    default:
                                        return null;
                                    case "keypress":
                                        if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                                            if (t.char && 1 < t.char.length) return t.char;
                                            if (t.which) return String.fromCharCode(t.which)
                                        }
                                        return null;
                                    case "compositionend":
                                        return Dn && "ko" !== t.locale ? null : t.data
                                }
                            }(e, n)) && (0 < (r = qr(r, "onBeforeInput")).length && (i = new bn("onBeforeInput", "beforeinput", null, n, i), o.push({
                                event: i,
                                listeners: r
                            }), i.data = y))
                        }
                        Fr(o, t)
                    }))
                }

                function jr(e, t, n) {
                    return {
                        instance: e,
                        listener: t,
                        currentTarget: n
                    }
                }

                function qr(e, t) {
                    for (var n = t + "Capture", r = []; null !== e;) {
                        var i = e,
                            a = i.stateNode;
                        5 === i.tag && null !== a && (i = a, null != (a = Re(e, n)) && r.unshift(jr(e, a, i)), null != (a = Re(e, t)) && r.push(jr(e, a, i))), e = e.return
                    }
                    return r
                }

                function Xr(e) {
                    if (null === e) return null;
                    do {
                        e = e.return
                    } while (e && 5 !== e.tag);
                    return e || null
                }

                function Yr(e, t, n, r, i) {
                    for (var a = t._reactName, o = []; null !== n && n !== r;) {
                        var s = n,
                            l = s.alternate,
                            u = s.stateNode;
                        if (null !== l && l === r) break;
                        5 === s.tag && null !== u && (s = u, i ? null != (l = Re(n, a)) && o.unshift(jr(n, l, s)) : i || null != (l = Re(n, a)) && o.push(jr(n, l, s))), n = n.return
                    }
                    0 !== o.length && e.push({
                        event: t,
                        listeners: o
                    })
                }
                var Zr = /\r\n?/g,
                    Jr = /\u0000|\uFFFD/g;

                function $r(e) {
                    return ("string" === typeof e ? e : "" + e).replace(Zr, "\n").replace(Jr, "")
                }

                function Qr(e, t, n) {
                    if (t = $r(t), $r(e) !== t && n) throw Error(a(425))
                }

                function Kr() {}
                var ei = null,
                    ti = null;

                function ni(e, t) {
                    return "textarea" === e || "noscript" === e || "string" === typeof t.children || "number" === typeof t.children || "object" === typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
                }
                var ri = "function" === typeof setTimeout ? setTimeout : void 0,
                    ii = "function" === typeof clearTimeout ? clearTimeout : void 0,
                    ai = "function" === typeof Promise ? Promise : void 0,
                    oi = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof ai ? function(e) {
                        return ai.resolve(null).then(e).catch(si)
                    } : ri;

                function si(e) {
                    setTimeout((function() {
                        throw e
                    }))
                }

                function li(e, t) {
                    var n = t,
                        r = 0;
                    do {
                        var i = n.nextSibling;
                        if (e.removeChild(n), i && 8 === i.nodeType)
                            if ("/$" === (n = i.data)) {
                                if (0 === r) return e.removeChild(i), void Vt(t);
                                r--
                            } else "$" !== n && "$?" !== n && "$!" !== n || r++;
                        n = i
                    } while (n);
                    Vt(t)
                }

                function ui(e) {
                    for (; null != e; e = e.nextSibling) {
                        var t = e.nodeType;
                        if (1 === t || 3 === t) break;
                        if (8 === t) {
                            if ("$" === (t = e.data) || "$!" === t || "$?" === t) break;
                            if ("/$" === t) return null
                        }
                    }
                    return e
                }

                function ci(e) {
                    e = e.previousSibling;
                    for (var t = 0; e;) {
                        if (8 === e.nodeType) {
                            var n = e.data;
                            if ("$" === n || "$!" === n || "$?" === n) {
                                if (0 === t) return e;
                                t--
                            } else "/$" === n && t++
                        }
                        e = e.previousSibling
                    }
                    return null
                }
                var fi = Math.random().toString(36).slice(2),
                    di = "__reactFiber$" + fi,
                    hi = "__reactProps$" + fi,
                    pi = "__reactContainer$" + fi,
                    vi = "__reactEvents$" + fi,
                    mi = "__reactListeners$" + fi,
                    gi = "__reactHandles$" + fi;

                function yi(e) {
                    var t = e[di];
                    if (t) return t;
                    for (var n = e.parentNode; n;) {
                        if (t = n[pi] || n[di]) {
                            if (n = t.alternate, null !== t.child || null !== n && null !== n.child)
                                for (e = ci(e); null !== e;) {
                                    if (n = e[di]) return n;
                                    e = ci(e)
                                }
                            return t
                        }
                        n = (e = n).parentNode
                    }
                    return null
                }

                function xi(e) {
                    return !(e = e[di] || e[pi]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
                }

                function bi(e) {
                    if (5 === e.tag || 6 === e.tag) return e.stateNode;
                    throw Error(a(33))
                }

                function _i(e) {
                    return e[hi] || null
                }
                var wi = [],
                    Si = -1;

                function Mi(e) {
                    return {
                        current: e
                    }
                }

                function ki(e) {
                    0 > Si || (e.current = wi[Si], wi[Si] = null, Si--)
                }

                function Ei(e, t) {
                    Si++, wi[Si] = e.current, e.current = t
                }
                var Ti = {},
                    Li = Mi(Ti),
                    Ai = Mi(!1),
                    Ci = Ti;

                function Pi(e, t) {
                    var n = e.type.contextTypes;
                    if (!n) return Ti;
                    var r = e.stateNode;
                    if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
                    var i, a = {};
                    for (i in n) a[i] = t[i];
                    return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t, e.__reactInternalMemoizedMaskedChildContext = a), a
                }

                function Ri(e) {
                    return null !== (e = e.childContextTypes) && void 0 !== e
                }

                function Ni() {
                    ki(Ai), ki(Li)
                }

                function Ii(e, t, n) {
                    if (Li.current !== Ti) throw Error(a(168));
                    Ei(Li, t), Ei(Ai, n)
                }

                function zi(e, t, n) {
                    var r = e.stateNode;
                    if (t = t.childContextTypes, "function" !== typeof r.getChildContext) return n;
                    for (var i in r = r.getChildContext())
                        if (!(i in t)) throw Error(a(108, G(e) || "Unknown", i));
                    return D({}, n, r)
                }

                function Oi(e) {
                    return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Ti, Ci = Li.current, Ei(Li, e), Ei(Ai, Ai.current), !0
                }

                function Di(e, t, n) {
                    var r = e.stateNode;
                    if (!r) throw Error(a(169));
                    n ? (e = zi(e, t, Ci), r.__reactInternalMemoizedMergedChildContext = e, ki(Ai), ki(Li), Ei(Li, e)) : ki(Ai), Ei(Ai, n)
                }
                var Fi = null,
                    Bi = !1,
                    Ui = !1;

                function Hi(e) {
                    null === Fi ? Fi = [e] : Fi.push(e)
                }

                function Vi() {
                    if (!Ui && null !== Fi) {
                        Ui = !0;
                        var e = 0,
                            t = xt;
                        try {
                            var n = Fi;
                            for (xt = 1; e < n.length; e++) {
                                var r = n[e];
                                do {
                                    r = r(!0)
                                } while (null !== r)
                            }
                            Fi = null, Bi = !1
                        } catch (i) {
                            throw null !== Fi && (Fi = Fi.slice(e + 1)), Xe(Ke, Vi), i
                        } finally {
                            xt = t, Ui = !1
                        }
                    }
                    return null
                }
                var Gi = [],
                    Wi = 0,
                    ji = null,
                    qi = 0,
                    Xi = [],
                    Yi = 0,
                    Zi = null,
                    Ji = 1,
                    $i = "";

                function Qi(e, t) {
                    Gi[Wi++] = qi, Gi[Wi++] = ji, ji = e, qi = t
                }

                function Ki(e, t, n) {
                    Xi[Yi++] = Ji, Xi[Yi++] = $i, Xi[Yi++] = Zi, Zi = e;
                    var r = Ji;
                    e = $i;
                    var i = 32 - ot(r) - 1;
                    r &= ~(1 << i), n += 1;
                    var a = 32 - ot(t) + i;
                    if (30 < a) {
                        var o = i - i % 5;
                        a = (r & (1 << o) - 1).toString(32), r >>= o, i -= o, Ji = 1 << 32 - ot(t) + i | n << i | r, $i = a + e
                    } else Ji = 1 << a | n << i | r, $i = e
                }

                function ea(e) {
                    null !== e.return && (Qi(e, 1), Ki(e, 1, 0))
                }

                function ta(e) {
                    for (; e === ji;) ji = Gi[--Wi], Gi[Wi] = null, qi = Gi[--Wi], Gi[Wi] = null;
                    for (; e === Zi;) Zi = Xi[--Yi], Xi[Yi] = null, $i = Xi[--Yi], Xi[Yi] = null, Ji = Xi[--Yi], Xi[Yi] = null
                }
                var na = null,
                    ra = null,
                    ia = !1,
                    aa = null;

                function oa(e, t) {
                    var n = Pu(5, null, null, 0);
                    n.elementType = "DELETED", n.stateNode = t, n.return = e, null === (t = e.deletions) ? (e.deletions = [n], e.flags |= 16) : t.push(n)
                }

                function sa(e, t) {
                    switch (e.tag) {
                        case 5:
                            var n = e.type;
                            return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t, na = e, ra = ui(t.firstChild), !0);
                        case 6:
                            return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t, na = e, ra = null, !0);
                        case 13:
                            return null !== (t = 8 !== t.nodeType ? null : t) && (n = null !== Zi ? {
                                id: Ji,
                                overflow: $i
                            } : null, e.memoizedState = {
                                dehydrated: t,
                                treeContext: n,
                                retryLane: 1073741824
                            }, (n = Pu(18, null, null, 0)).stateNode = t, n.return = e, e.child = n, na = e, ra = null, !0);
                        default:
                            return !1
                    }
                }

                function la(e) {
                    return 0 !== (1 & e.mode) && 0 === (128 & e.flags)
                }

                function ua(e) {
                    if (ia) {
                        var t = ra;
                        if (t) {
                            var n = t;
                            if (!sa(e, t)) {
                                if (la(e)) throw Error(a(418));
                                t = ui(n.nextSibling);
                                var r = na;
                                t && sa(e, t) ? oa(r, n) : (e.flags = -4097 & e.flags | 2, ia = !1, na = e)
                            }
                        } else {
                            if (la(e)) throw Error(a(418));
                            e.flags = -4097 & e.flags | 2, ia = !1, na = e
                        }
                    }
                }

                function ca(e) {
                    for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag;) e = e.return;
                    na = e
                }

                function fa(e) {
                    if (e !== na) return !1;
                    if (!ia) return ca(e), ia = !0, !1;
                    var t;
                    if ((t = 3 !== e.tag) && !(t = 5 !== e.tag) && (t = "head" !== (t = e.type) && "body" !== t && !ni(e.type, e.memoizedProps)), t && (t = ra)) {
                        if (la(e)) throw da(), Error(a(418));
                        for (; t;) oa(e, t), t = ui(t.nextSibling)
                    }
                    if (ca(e), 13 === e.tag) {
                        if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(a(317));
                        e: {
                            for (e = e.nextSibling, t = 0; e;) {
                                if (8 === e.nodeType) {
                                    var n = e.data;
                                    if ("/$" === n) {
                                        if (0 === t) {
                                            ra = ui(e.nextSibling);
                                            break e
                                        }
                                        t--
                                    } else "$" !== n && "$!" !== n && "$?" !== n || t++
                                }
                                e = e.nextSibling
                            }
                            ra = null
                        }
                    } else ra = na ? ui(e.stateNode.nextSibling) : null;
                    return !0
                }

                function da() {
                    for (var e = ra; e;) e = ui(e.nextSibling)
                }

                function ha() {
                    ra = na = null, ia = !1
                }

                function pa(e) {
                    null === aa ? aa = [e] : aa.push(e)
                }
                var va = b.ReactCurrentBatchConfig;

                function ma(e, t) {
                    if (e && e.defaultProps) {
                        for (var n in t = D({}, t), e = e.defaultProps) void 0 === t[n] && (t[n] = e[n]);
                        return t
                    }
                    return t
                }
                var ga = Mi(null),
                    ya = null,
                    xa = null,
                    ba = null;

                function _a() {
                    ba = xa = ya = null
                }

                function wa(e) {
                    var t = ga.current;
                    ki(ga), e._currentValue = t
                }

                function Sa(e, t, n) {
                    for (; null !== e;) {
                        var r = e.alternate;
                        if ((e.childLanes & t) !== t ? (e.childLanes |= t, null !== r && (r.childLanes |= t)) : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t), e === n) break;
                        e = e.return
                    }
                }

                function Ma(e, t) {
                    ya = e, ba = xa = null, null !== (e = e.dependencies) && null !== e.firstContext && (0 !== (e.lanes & t) && (bs = !0), e.firstContext = null)
                }

                function ka(e) {
                    var t = e._currentValue;
                    if (ba !== e)
                        if (e = {
                                context: e,
                                memoizedValue: t,
                                next: null
                            }, null === xa) {
                            if (null === ya) throw Error(a(308));
                            xa = e, ya.dependencies = {
                                lanes: 0,
                                firstContext: e
                            }
                        } else xa = xa.next = e;
                    return t
                }
                var Ea = null;

                function Ta(e) {
                    null === Ea ? Ea = [e] : Ea.push(e)
                }

                function La(e, t, n, r) {
                    var i = t.interleaved;
                    return null === i ? (n.next = n, Ta(t)) : (n.next = i.next, i.next = n), t.interleaved = n, Aa(e, r)
                }

                function Aa(e, t) {
                    e.lanes |= t;
                    var n = e.alternate;
                    for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e;) e.childLanes |= t, null !== (n = e.alternate) && (n.childLanes |= t), n = e, e = e.return;
                    return 3 === n.tag ? n.stateNode : null
                }
                var Ca = !1;

                function Pa(e) {
                    e.updateQueue = {
                        baseState: e.memoizedState,
                        firstBaseUpdate: null,
                        lastBaseUpdate: null,
                        shared: {
                            pending: null,
                            interleaved: null,
                            lanes: 0
                        },
                        effects: null
                    }
                }

                function Ra(e, t) {
                    e = e.updateQueue, t.updateQueue === e && (t.updateQueue = {
                        baseState: e.baseState,
                        firstBaseUpdate: e.firstBaseUpdate,
                        lastBaseUpdate: e.lastBaseUpdate,
                        shared: e.shared,
                        effects: e.effects
                    })
                }

                function Na(e, t) {
                    return {
                        eventTime: e,
                        lane: t,
                        tag: 0,
                        payload: null,
                        callback: null,
                        next: null
                    }
                }

                function Ia(e, t, n) {
                    var r = e.updateQueue;
                    if (null === r) return null;
                    if (r = r.shared, 0 !== (2 & Ll)) {
                        var i = r.pending;
                        return null === i ? t.next = t : (t.next = i.next, i.next = t), r.pending = t, Aa(e, n)
                    }
                    return null === (i = r.interleaved) ? (t.next = t, Ta(r)) : (t.next = i.next, i.next = t), r.interleaved = t, Aa(e, n)
                }

                function za(e, t, n) {
                    if (null !== (t = t.updateQueue) && (t = t.shared, 0 !== (4194240 & n))) {
                        var r = t.lanes;
                        n |= r &= e.pendingLanes, t.lanes = n, yt(e, n)
                    }
                }

                function Oa(e, t) {
                    var n = e.updateQueue,
                        r = e.alternate;
                    if (null !== r && n === (r = r.updateQueue)) {
                        var i = null,
                            a = null;
                        if (null !== (n = n.firstBaseUpdate)) {
                            do {
                                var o = {
                                    eventTime: n.eventTime,
                                    lane: n.lane,
                                    tag: n.tag,
                                    payload: n.payload,
                                    callback: n.callback,
                                    next: null
                                };
                                null === a ? i = a = o : a = a.next = o, n = n.next
                            } while (null !== n);
                            null === a ? i = a = t : a = a.next = t
                        } else i = a = t;
                        return n = {
                            baseState: r.baseState,
                            firstBaseUpdate: i,
                            lastBaseUpdate: a,
                            shared: r.shared,
                            effects: r.effects
                        }, void(e.updateQueue = n)
                    }
                    null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t, n.lastBaseUpdate = t
                }

                function Da(e, t, n, r) {
                    var i = e.updateQueue;
                    Ca = !1;
                    var a = i.firstBaseUpdate,
                        o = i.lastBaseUpdate,
                        s = i.shared.pending;
                    if (null !== s) {
                        i.shared.pending = null;
                        var l = s,
                            u = l.next;
                        l.next = null, null === o ? a = u : o.next = u, o = l;
                        var c = e.alternate;
                        null !== c && ((s = (c = c.updateQueue).lastBaseUpdate) !== o && (null === s ? c.firstBaseUpdate = u : s.next = u, c.lastBaseUpdate = l))
                    }
                    if (null !== a) {
                        var f = i.baseState;
                        for (o = 0, c = u = l = null, s = a;;) {
                            var d = s.lane,
                                h = s.eventTime;
                            if ((r & d) === d) {
                                null !== c && (c = c.next = {
                                    eventTime: h,
                                    lane: 0,
                                    tag: s.tag,
                                    payload: s.payload,
                                    callback: s.callback,
                                    next: null
                                });
                                e: {
                                    var p = e,
                                        v = s;
                                    switch (d = t, h = n, v.tag) {
                                        case 1:
                                            if ("function" === typeof(p = v.payload)) {
                                                f = p.call(h, f, d);
                                                break e
                                            }
                                            f = p;
                                            break e;
                                        case 3:
                                            p.flags = -65537 & p.flags | 128;
                                        case 0:
                                            if (null === (d = "function" === typeof(p = v.payload) ? p.call(h, f, d) : p) || void 0 === d) break e;
                                            f = D({}, f, d);
                                            break e;
                                        case 2:
                                            Ca = !0
                                    }
                                }
                                null !== s.callback && 0 !== s.lane && (e.flags |= 64, null === (d = i.effects) ? i.effects = [s] : d.push(s))
                            } else h = {
                                eventTime: h,
                                lane: d,
                                tag: s.tag,
                                payload: s.payload,
                                callback: s.callback,
                                next: null
                            }, null === c ? (u = c = h, l = f) : c = c.next = h, o |= d;
                            if (null === (s = s.next)) {
                                if (null === (s = i.shared.pending)) break;
                                s = (d = s).next, d.next = null, i.lastBaseUpdate = d, i.shared.pending = null
                            }
                        }
                        if (null === c && (l = f), i.baseState = l, i.firstBaseUpdate = u, i.lastBaseUpdate = c, null !== (t = i.shared.interleaved)) {
                            i = t;
                            do {
                                o |= i.lane, i = i.next
                            } while (i !== t)
                        } else null === a && (i.shared.lanes = 0);
                        Ol |= o, e.lanes = o, e.memoizedState = f
                    }
                }

                function Fa(e, t, n) {
                    if (e = t.effects, t.effects = null, null !== e)
                        for (t = 0; t < e.length; t++) {
                            var r = e[t],
                                i = r.callback;
                            if (null !== i) {
                                if (r.callback = null, r = n, "function" !== typeof i) throw Error(a(191, i));
                                i.call(r)
                            }
                        }
                }
                var Ba = (new r.Component).refs;

                function Ua(e, t, n, r) {
                    n = null === (n = n(r, t = e.memoizedState)) || void 0 === n ? t : D({}, t, n), e.memoizedState = n, 0 === e.lanes && (e.updateQueue.baseState = n)
                }
                var Ha = {
                    isMounted: function(e) {
                        return !!(e = e._reactInternals) && Ve(e) === e
                    },
                    enqueueSetState: function(e, t, n) {
                        e = e._reactInternals;
                        var r = eu(),
                            i = tu(e),
                            a = Na(r, i);
                        a.payload = t, void 0 !== n && null !== n && (a.callback = n), null !== (t = Ia(e, a, i)) && (nu(t, e, i, r), za(t, e, i))
                    },
                    enqueueReplaceState: function(e, t, n) {
                        e = e._reactInternals;
                        var r = eu(),
                            i = tu(e),
                            a = Na(r, i);
                        a.tag = 1, a.payload = t, void 0 !== n && null !== n && (a.callback = n), null !== (t = Ia(e, a, i)) && (nu(t, e, i, r), za(t, e, i))
                    },
                    enqueueForceUpdate: function(e, t) {
                        e = e._reactInternals;
                        var n = eu(),
                            r = tu(e),
                            i = Na(n, r);
                        i.tag = 2, void 0 !== t && null !== t && (i.callback = t), null !== (t = Ia(e, i, r)) && (nu(t, e, r, n), za(t, e, r))
                    }
                };

                function Va(e, t, n, r, i, a, o) {
                    return "function" === typeof(e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, a, o) : !t.prototype || !t.prototype.isPureReactComponent || (!lr(n, r) || !lr(i, a))
                }

                function Ga(e, t, n) {
                    var r = !1,
                        i = Ti,
                        a = t.contextType;
                    return "object" === typeof a && null !== a ? a = ka(a) : (i = Ri(t) ? Ci : Li.current, a = (r = null !== (r = t.contextTypes) && void 0 !== r) ? Pi(e, i) : Ti), t = new t(n, a), e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null, t.updater = Ha, e.stateNode = t, t._reactInternals = e, r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i, e.__reactInternalMemoizedMaskedChildContext = a), t
                }

                function Wa(e, t, n, r) {
                    e = t.state, "function" === typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r), "function" === typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r), t.state !== e && Ha.enqueueReplaceState(t, t.state, null)
                }

                function ja(e, t, n, r) {
                    var i = e.stateNode;
                    i.props = n, i.state = e.memoizedState, i.refs = Ba, Pa(e);
                    var a = t.contextType;
                    "object" === typeof a && null !== a ? i.context = ka(a) : (a = Ri(t) ? Ci : Li.current, i.context = Pi(e, a)), i.state = e.memoizedState, "function" === typeof(a = t.getDerivedStateFromProps) && (Ua(e, t, a, n), i.state = e.memoizedState), "function" === typeof t.getDerivedStateFromProps || "function" === typeof i.getSnapshotBeforeUpdate || "function" !== typeof i.UNSAFE_componentWillMount && "function" !== typeof i.componentWillMount || (t = i.state, "function" === typeof i.componentWillMount && i.componentWillMount(), "function" === typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(), t !== i.state && Ha.enqueueReplaceState(i, i.state, null), Da(e, n, i, r), i.state = e.memoizedState), "function" === typeof i.componentDidMount && (e.flags |= 4194308)
                }

                function qa(e, t, n) {
                    if (null !== (e = n.ref) && "function" !== typeof e && "object" !== typeof e) {
                        if (n._owner) {
                            if (n = n._owner) {
                                if (1 !== n.tag) throw Error(a(309));
                                var r = n.stateNode
                            }
                            if (!r) throw Error(a(147, e));
                            var i = r,
                                o = "" + e;
                            return null !== t && null !== t.ref && "function" === typeof t.ref && t.ref._stringRef === o ? t.ref : (t = function(e) {
                                var t = i.refs;
                                t === Ba && (t = i.refs = {}), null === e ? delete t[o] : t[o] = e
                            }, t._stringRef = o, t)
                        }
                        if ("string" !== typeof e) throw Error(a(284));
                        if (!n._owner) throw Error(a(290, e))
                    }
                    return e
                }

                function Xa(e, t) {
                    throw e = Object.prototype.toString.call(t), Error(a(31, "[object Object]" === e ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
                }

                function Ya(e) {
                    return (0, e._init)(e._payload)
                }

                function Za(e) {
                    function t(t, n) {
                        if (e) {
                            var r = t.deletions;
                            null === r ? (t.deletions = [n], t.flags |= 16) : r.push(n)
                        }
                    }

                    function n(n, r) {
                        if (!e) return null;
                        for (; null !== r;) t(n, r), r = r.sibling;
                        return null
                    }

                    function r(e, t) {
                        for (e = new Map; null !== t;) null !== t.key ? e.set(t.key, t) : e.set(t.index, t), t = t.sibling;
                        return e
                    }

                    function i(e, t) {
                        return (e = Nu(e, t)).index = 0, e.sibling = null, e
                    }

                    function o(t, n, r) {
                        return t.index = r, e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.flags |= 2, n) : r : (t.flags |= 2, n) : (t.flags |= 1048576, n)
                    }

                    function s(t) {
                        return e && null === t.alternate && (t.flags |= 2), t
                    }

                    function l(e, t, n, r) {
                        return null === t || 6 !== t.tag ? ((t = Du(n, e.mode, r)).return = e, t) : ((t = i(t, n)).return = e, t)
                    }

                    function u(e, t, n, r) {
                        var a = n.type;
                        return a === S ? f(e, t, n.props.children, r, n.key) : null !== t && (t.elementType === a || "object" === typeof a && null !== a && a.$$typeof === R && Ya(a) === t.type) ? ((r = i(t, n.props)).ref = qa(e, t, n), r.return = e, r) : ((r = Iu(n.type, n.key, n.props, null, e.mode, r)).ref = qa(e, t, n), r.return = e, r)
                    }

                    function c(e, t, n, r) {
                        return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Fu(n, e.mode, r)).return = e, t) : ((t = i(t, n.children || [])).return = e, t)
                    }

                    function f(e, t, n, r, a) {
                        return null === t || 7 !== t.tag ? ((t = zu(n, e.mode, r, a)).return = e, t) : ((t = i(t, n)).return = e, t)
                    }

                    function d(e, t, n) {
                        if ("string" === typeof t && "" !== t || "number" === typeof t) return (t = Du("" + t, e.mode, n)).return = e, t;
                        if ("object" === typeof t && null !== t) {
                            switch (t.$$typeof) {
                                case _:
                                    return (n = Iu(t.type, t.key, t.props, null, e.mode, n)).ref = qa(e, null, t), n.return = e, n;
                                case w:
                                    return (t = Fu(t, e.mode, n)).return = e, t;
                                case R:
                                    return d(e, (0, t._init)(t._payload), n)
                            }
                            if (te(t) || z(t)) return (t = zu(t, e.mode, n, null)).return = e, t;
                            Xa(e, t)
                        }
                        return null
                    }

                    function h(e, t, n, r) {
                        var i = null !== t ? t.key : null;
                        if ("string" === typeof n && "" !== n || "number" === typeof n) return null !== i ? null : l(e, t, "" + n, r);
                        if ("object" === typeof n && null !== n) {
                            switch (n.$$typeof) {
                                case _:
                                    return n.key === i ? u(e, t, n, r) : null;
                                case w:
                                    return n.key === i ? c(e, t, n, r) : null;
                                case R:
                                    return h(e, t, (i = n._init)(n._payload), r)
                            }
                            if (te(n) || z(n)) return null !== i ? null : f(e, t, n, r, null);
                            Xa(e, n)
                        }
                        return null
                    }

                    function p(e, t, n, r, i) {
                        if ("string" === typeof r && "" !== r || "number" === typeof r) return l(t, e = e.get(n) || null, "" + r, i);
                        if ("object" === typeof r && null !== r) {
                            switch (r.$$typeof) {
                                case _:
                                    return u(t, e = e.get(null === r.key ? n : r.key) || null, r, i);
                                case w:
                                    return c(t, e = e.get(null === r.key ? n : r.key) || null, r, i);
                                case R:
                                    return p(e, t, n, (0, r._init)(r._payload), i)
                            }
                            if (te(r) || z(r)) return f(t, e = e.get(n) || null, r, i, null);
                            Xa(t, r)
                        }
                        return null
                    }

                    function v(i, a, s, l) {
                        for (var u = null, c = null, f = a, v = a = 0, m = null; null !== f && v < s.length; v++) {
                            f.index > v ? (m = f, f = null) : m = f.sibling;
                            var g = h(i, f, s[v], l);
                            if (null === g) {
                                null === f && (f = m);
                                break
                            }
                            e && f && null === g.alternate && t(i, f), a = o(g, a, v), null === c ? u = g : c.sibling = g, c = g, f = m
                        }
                        if (v === s.length) return n(i, f), ia && Qi(i, v), u;
                        if (null === f) {
                            for (; v < s.length; v++) null !== (f = d(i, s[v], l)) && (a = o(f, a, v), null === c ? u = f : c.sibling = f, c = f);
                            return ia && Qi(i, v), u
                        }
                        for (f = r(i, f); v < s.length; v++) null !== (m = p(f, i, v, s[v], l)) && (e && null !== m.alternate && f.delete(null === m.key ? v : m.key), a = o(m, a, v), null === c ? u = m : c.sibling = m, c = m);
                        return e && f.forEach((function(e) {
                            return t(i, e)
                        })), ia && Qi(i, v), u
                    }

                    function m(i, s, l, u) {
                        var c = z(l);
                        if ("function" !== typeof c) throw Error(a(150));
                        if (null == (l = c.call(l))) throw Error(a(151));
                        for (var f = c = null, v = s, m = s = 0, g = null, y = l.next(); null !== v && !y.done; m++, y = l.next()) {
                            v.index > m ? (g = v, v = null) : g = v.sibling;
                            var x = h(i, v, y.value, u);
                            if (null === x) {
                                null === v && (v = g);
                                break
                            }
                            e && v && null === x.alternate && t(i, v), s = o(x, s, m), null === f ? c = x : f.sibling = x, f = x, v = g
                        }
                        if (y.done) return n(i, v), ia && Qi(i, m), c;
                        if (null === v) {
                            for (; !y.done; m++, y = l.next()) null !== (y = d(i, y.value, u)) && (s = o(y, s, m), null === f ? c = y : f.sibling = y, f = y);
                            return ia && Qi(i, m), c
                        }
                        for (v = r(i, v); !y.done; m++, y = l.next()) null !== (y = p(v, i, m, y.value, u)) && (e && null !== y.alternate && v.delete(null === y.key ? m : y.key), s = o(y, s, m), null === f ? c = y : f.sibling = y, f = y);
                        return e && v.forEach((function(e) {
                            return t(i, e)
                        })), ia && Qi(i, m), c
                    }
                    return function e(r, a, o, l) {
                        if ("object" === typeof o && null !== o && o.type === S && null === o.key && (o = o.props.children), "object" === typeof o && null !== o) {
                            switch (o.$$typeof) {
                                case _:
                                    e: {
                                        for (var u = o.key, c = a; null !== c;) {
                                            if (c.key === u) {
                                                if ((u = o.type) === S) {
                                                    if (7 === c.tag) {
                                                        n(r, c.sibling), (a = i(c, o.props.children)).return = r, r = a;
                                                        break e
                                                    }
                                                } else if (c.elementType === u || "object" === typeof u && null !== u && u.$$typeof === R && Ya(u) === c.type) {
                                                    n(r, c.sibling), (a = i(c, o.props)).ref = qa(r, c, o), a.return = r, r = a;
                                                    break e
                                                }
                                                n(r, c);
                                                break
                                            }
                                            t(r, c), c = c.sibling
                                        }
                                        o.type === S ? ((a = zu(o.props.children, r.mode, l, o.key)).return = r, r = a) : ((l = Iu(o.type, o.key, o.props, null, r.mode, l)).ref = qa(r, a, o), l.return = r, r = l)
                                    }
                                    return s(r);
                                case w:
                                    e: {
                                        for (c = o.key; null !== a;) {
                                            if (a.key === c) {
                                                if (4 === a.tag && a.stateNode.containerInfo === o.containerInfo && a.stateNode.implementation === o.implementation) {
                                                    n(r, a.sibling), (a = i(a, o.children || [])).return = r, r = a;
                                                    break e
                                                }
                                                n(r, a);
                                                break
                                            }
                                            t(r, a), a = a.sibling
                                        }(a = Fu(o, r.mode, l)).return = r,
                                        r = a
                                    }
                                    return s(r);
                                case R:
                                    return e(r, a, (c = o._init)(o._payload), l)
                            }
                            if (te(o)) return v(r, a, o, l);
                            if (z(o)) return m(r, a, o, l);
                            Xa(r, o)
                        }
                        return "string" === typeof o && "" !== o || "number" === typeof o ? (o = "" + o, null !== a && 6 === a.tag ? (n(r, a.sibling), (a = i(a, o)).return = r, r = a) : (n(r, a), (a = Du(o, r.mode, l)).return = r, r = a), s(r)) : n(r, a)
                    }
                }
                var Ja = Za(!0),
                    $a = Za(!1),
                    Qa = {},
                    Ka = Mi(Qa),
                    eo = Mi(Qa),
                    to = Mi(Qa);

                function no(e) {
                    if (e === Qa) throw Error(a(174));
                    return e
                }

                function ro(e, t) {
                    switch (Ei(to, t), Ei(eo, e), Ei(Ka, Qa), e = t.nodeType) {
                        case 9:
                        case 11:
                            t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
                            break;
                        default:
                            t = le(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
                    }
                    ki(Ka), Ei(Ka, t)
                }

                function io() {
                    ki(Ka), ki(eo), ki(to)
                }

                function ao(e) {
                    no(to.current);
                    var t = no(Ka.current),
                        n = le(t, e.type);
                    t !== n && (Ei(eo, e), Ei(Ka, n))
                }

                function oo(e) {
                    eo.current === e && (ki(Ka), ki(eo))
                }
                var so = Mi(0);

                function lo(e) {
                    for (var t = e; null !== t;) {
                        if (13 === t.tag) {
                            var n = t.memoizedState;
                            if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data)) return t
                        } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                            if (0 !== (128 & t.flags)) return t
                        } else if (null !== t.child) {
                            t.child.return = t, t = t.child;
                            continue
                        }
                        if (t === e) break;
                        for (; null === t.sibling;) {
                            if (null === t.return || t.return === e) return null;
                            t = t.return
                        }
                        t.sibling.return = t.return, t = t.sibling
                    }
                    return null
                }
                var uo = [];

                function co() {
                    for (var e = 0; e < uo.length; e++) uo[e]._workInProgressVersionPrimary = null;
                    uo.length = 0
                }
                var fo = b.ReactCurrentDispatcher,
                    ho = b.ReactCurrentBatchConfig,
                    po = 0,
                    vo = null,
                    mo = null,
                    go = null,
                    yo = !1,
                    xo = !1,
                    bo = 0,
                    _o = 0;

                function wo() {
                    throw Error(a(321))
                }

                function So(e, t) {
                    if (null === t) return !1;
                    for (var n = 0; n < t.length && n < e.length; n++)
                        if (!sr(e[n], t[n])) return !1;
                    return !0
                }

                function Mo(e, t, n, r, i, o) {
                    if (po = o, vo = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, fo.current = null === e || null === e.memoizedState ? ss : ls, e = n(r, i), xo) {
                        o = 0;
                        do {
                            if (xo = !1, bo = 0, 25 <= o) throw Error(a(301));
                            o += 1, go = mo = null, t.updateQueue = null, fo.current = us, e = n(r, i)
                        } while (xo)
                    }
                    if (fo.current = os, t = null !== mo && null !== mo.next, po = 0, go = mo = vo = null, yo = !1, t) throw Error(a(300));
                    return e
                }

                function ko() {
                    var e = 0 !== bo;
                    return bo = 0, e
                }

                function Eo() {
                    var e = {
                        memoizedState: null,
                        baseState: null,
                        baseQueue: null,
                        queue: null,
                        next: null
                    };
                    return null === go ? vo.memoizedState = go = e : go = go.next = e, go
                }

                function To() {
                    if (null === mo) {
                        var e = vo.alternate;
                        e = null !== e ? e.memoizedState : null
                    } else e = mo.next;
                    var t = null === go ? vo.memoizedState : go.next;
                    if (null !== t) go = t, mo = e;
                    else {
                        if (null === e) throw Error(a(310));
                        e = {
                            memoizedState: (mo = e).memoizedState,
                            baseState: mo.baseState,
                            baseQueue: mo.baseQueue,
                            queue: mo.queue,
                            next: null
                        }, null === go ? vo.memoizedState = go = e : go = go.next = e
                    }
                    return go
                }

                function Lo(e, t) {
                    return "function" === typeof t ? t(e) : t
                }

                function Ao(e) {
                    var t = To(),
                        n = t.queue;
                    if (null === n) throw Error(a(311));
                    n.lastRenderedReducer = e;
                    var r = mo,
                        i = r.baseQueue,
                        o = n.pending;
                    if (null !== o) {
                        if (null !== i) {
                            var s = i.next;
                            i.next = o.next, o.next = s
                        }
                        r.baseQueue = i = o, n.pending = null
                    }
                    if (null !== i) {
                        o = i.next, r = r.baseState;
                        var l = s = null,
                            u = null,
                            c = o;
                        do {
                            var f = c.lane;
                            if ((po & f) === f) null !== u && (u = u.next = {
                                lane: 0,
                                action: c.action,
                                hasEagerState: c.hasEagerState,
                                eagerState: c.eagerState,
                                next: null
                            }), r = c.hasEagerState ? c.eagerState : e(r, c.action);
                            else {
                                var d = {
                                    lane: f,
                                    action: c.action,
                                    hasEagerState: c.hasEagerState,
                                    eagerState: c.eagerState,
                                    next: null
                                };
                                null === u ? (l = u = d, s = r) : u = u.next = d, vo.lanes |= f, Ol |= f
                            }
                            c = c.next
                        } while (null !== c && c !== o);
                        null === u ? s = r : u.next = l, sr(r, t.memoizedState) || (bs = !0), t.memoizedState = r, t.baseState = s, t.baseQueue = u, n.lastRenderedState = r
                    }
                    if (null !== (e = n.interleaved)) {
                        i = e;
                        do {
                            o = i.lane, vo.lanes |= o, Ol |= o, i = i.next
                        } while (i !== e)
                    } else null === i && (n.lanes = 0);
                    return [t.memoizedState, n.dispatch]
                }

                function Co(e) {
                    var t = To(),
                        n = t.queue;
                    if (null === n) throw Error(a(311));
                    n.lastRenderedReducer = e;
                    var r = n.dispatch,
                        i = n.pending,
                        o = t.memoizedState;
                    if (null !== i) {
                        n.pending = null;
                        var s = i = i.next;
                        do {
                            o = e(o, s.action), s = s.next
                        } while (s !== i);
                        sr(o, t.memoizedState) || (bs = !0), t.memoizedState = o, null === t.baseQueue && (t.baseState = o), n.lastRenderedState = o
                    }
                    return [o, r]
                }

                function Po() {}

                function Ro(e, t) {
                    var n = vo,
                        r = To(),
                        i = t(),
                        o = !sr(r.memoizedState, i);
                    if (o && (r.memoizedState = i, bs = !0), r = r.queue, Wo(zo.bind(null, n, r, e), [e]), r.getSnapshot !== t || o || null !== go && 1 & go.memoizedState.tag) {
                        if (n.flags |= 2048, Bo(9, Io.bind(null, n, r, i, t), void 0, null), null === Al) throw Error(a(349));
                        0 !== (30 & po) || No(n, t, i)
                    }
                    return i
                }

                function No(e, t, n) {
                    e.flags |= 16384, e = {
                        getSnapshot: t,
                        value: n
                    }, null === (t = vo.updateQueue) ? (t = {
                        lastEffect: null,
                        stores: null
                    }, vo.updateQueue = t, t.stores = [e]) : null === (n = t.stores) ? t.stores = [e] : n.push(e)
                }

                function Io(e, t, n, r) {
                    t.value = n, t.getSnapshot = r, Oo(t) && Do(e)
                }

                function zo(e, t, n) {
                    return n((function() {
                        Oo(t) && Do(e)
                    }))
                }

                function Oo(e) {
                    var t = e.getSnapshot;
                    e = e.value;
                    try {
                        var n = t();
                        return !sr(e, n)
                    } catch (r) {
                        return !0
                    }
                }

                function Do(e) {
                    var t = Aa(e, 1);
                    null !== t && nu(t, e, 1, -1)
                }

                function Fo(e) {
                    var t = Eo();
                    return "function" === typeof e && (e = e()), t.memoizedState = t.baseState = e, e = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: Lo,
                        lastRenderedState: e
                    }, t.queue = e, e = e.dispatch = ns.bind(null, vo, e), [t.memoizedState, e]
                }

                function Bo(e, t, n, r) {
                    return e = {
                        tag: e,
                        create: t,
                        destroy: n,
                        deps: r,
                        next: null
                    }, null === (t = vo.updateQueue) ? (t = {
                        lastEffect: null,
                        stores: null
                    }, vo.updateQueue = t, t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next, n.next = e, e.next = r, t.lastEffect = e), e
                }

                function Uo() {
                    return To().memoizedState
                }

                function Ho(e, t, n, r) {
                    var i = Eo();
                    vo.flags |= e, i.memoizedState = Bo(1 | t, n, void 0, void 0 === r ? null : r)
                }

                function Vo(e, t, n, r) {
                    var i = To();
                    r = void 0 === r ? null : r;
                    var a = void 0;
                    if (null !== mo) {
                        var o = mo.memoizedState;
                        if (a = o.destroy, null !== r && So(r, o.deps)) return void(i.memoizedState = Bo(t, n, a, r))
                    }
                    vo.flags |= e, i.memoizedState = Bo(1 | t, n, a, r)
                }

                function Go(e, t) {
                    return Ho(8390656, 8, e, t)
                }

                function Wo(e, t) {
                    return Vo(2048, 8, e, t)
                }

                function jo(e, t) {
                    return Vo(4, 2, e, t)
                }

                function qo(e, t) {
                    return Vo(4, 4, e, t)
                }

                function Xo(e, t) {
                    return "function" === typeof t ? (e = e(), t(e), function() {
                        t(null)
                    }) : null !== t && void 0 !== t ? (e = e(), t.current = e, function() {
                        t.current = null
                    }) : void 0
                }

                function Yo(e, t, n) {
                    return n = null !== n && void 0 !== n ? n.concat([e]) : null, Vo(4, 4, Xo.bind(null, t, e), n)
                }

                function Zo() {}

                function Jo(e, t) {
                    var n = To();
                    t = void 0 === t ? null : t;
                    var r = n.memoizedState;
                    return null !== r && null !== t && So(t, r[1]) ? r[0] : (n.memoizedState = [e, t], e)
                }

                function $o(e, t) {
                    var n = To();
                    t = void 0 === t ? null : t;
                    var r = n.memoizedState;
                    return null !== r && null !== t && So(t, r[1]) ? r[0] : (e = e(), n.memoizedState = [e, t], e)
                }

                function Qo(e, t, n) {
                    return 0 === (21 & po) ? (e.baseState && (e.baseState = !1, bs = !0), e.memoizedState = n) : (sr(n, t) || (n = vt(), vo.lanes |= n, Ol |= n, e.baseState = !0), t)
                }

                function Ko(e, t) {
                    var n = xt;
                    xt = 0 !== n && 4 > n ? n : 4, e(!0);
                    var r = ho.transition;
                    ho.transition = {};
                    try {
                        e(!1), t()
                    } finally {
                        xt = n, ho.transition = r
                    }
                }

                function es() {
                    return To().memoizedState
                }

                function ts(e, t, n) {
                    var r = tu(e);
                    if (n = {
                            lane: r,
                            action: n,
                            hasEagerState: !1,
                            eagerState: null,
                            next: null
                        }, rs(e)) is(t, n);
                    else if (null !== (n = La(e, t, n, r))) {
                        nu(n, e, r, eu()), as(n, t, r)
                    }
                }

                function ns(e, t, n) {
                    var r = tu(e),
                        i = {
                            lane: r,
                            action: n,
                            hasEagerState: !1,
                            eagerState: null,
                            next: null
                        };
                    if (rs(e)) is(t, i);
                    else {
                        var a = e.alternate;
                        if (0 === e.lanes && (null === a || 0 === a.lanes) && null !== (a = t.lastRenderedReducer)) try {
                            var o = t.lastRenderedState,
                                s = a(o, n);
                            if (i.hasEagerState = !0, i.eagerState = s, sr(s, o)) {
                                var l = t.interleaved;
                                return null === l ? (i.next = i, Ta(t)) : (i.next = l.next, l.next = i), void(t.interleaved = i)
                            }
                        } catch (u) {}
                        null !== (n = La(e, t, i, r)) && (nu(n, e, r, i = eu()), as(n, t, r))
                    }
                }

                function rs(e) {
                    var t = e.alternate;
                    return e === vo || null !== t && t === vo
                }

                function is(e, t) {
                    xo = yo = !0;
                    var n = e.pending;
                    null === n ? t.next = t : (t.next = n.next, n.next = t), e.pending = t
                }

                function as(e, t, n) {
                    if (0 !== (4194240 & n)) {
                        var r = t.lanes;
                        n |= r &= e.pendingLanes, t.lanes = n, yt(e, n)
                    }
                }
                var os = {
                        readContext: ka,
                        useCallback: wo,
                        useContext: wo,
                        useEffect: wo,
                        useImperativeHandle: wo,
                        useInsertionEffect: wo,
                        useLayoutEffect: wo,
                        useMemo: wo,
                        useReducer: wo,
                        useRef: wo,
                        useState: wo,
                        useDebugValue: wo,
                        useDeferredValue: wo,
                        useTransition: wo,
                        useMutableSource: wo,
                        useSyncExternalStore: wo,
                        useId: wo,
                        unstable_isNewReconciler: !1
                    },
                    ss = {
                        readContext: ka,
                        useCallback: function(e, t) {
                            return Eo().memoizedState = [e, void 0 === t ? null : t], e
                        },
                        useContext: ka,
                        useEffect: Go,
                        useImperativeHandle: function(e, t, n) {
                            return n = null !== n && void 0 !== n ? n.concat([e]) : null, Ho(4194308, 4, Xo.bind(null, t, e), n)
                        },
                        useLayoutEffect: function(e, t) {
                            return Ho(4194308, 4, e, t)
                        },
                        useInsertionEffect: function(e, t) {
                            return Ho(4, 2, e, t)
                        },
                        useMemo: function(e, t) {
                            var n = Eo();
                            return t = void 0 === t ? null : t, e = e(), n.memoizedState = [e, t], e
                        },
                        useReducer: function(e, t, n) {
                            var r = Eo();
                            return t = void 0 !== n ? n(t) : t, r.memoizedState = r.baseState = t, e = {
                                pending: null,
                                interleaved: null,
                                lanes: 0,
                                dispatch: null,
                                lastRenderedReducer: e,
                                lastRenderedState: t
                            }, r.queue = e, e = e.dispatch = ts.bind(null, vo, e), [r.memoizedState, e]
                        },
                        useRef: function(e) {
                            return e = {
                                current: e
                            }, Eo().memoizedState = e
                        },
                        useState: Fo,
                        useDebugValue: Zo,
                        useDeferredValue: function(e) {
                            return Eo().memoizedState = e
                        },
                        useTransition: function() {
                            var e = Fo(!1),
                                t = e[0];
                            return e = Ko.bind(null, e[1]), Eo().memoizedState = e, [t, e]
                        },
                        useMutableSource: function() {},
                        useSyncExternalStore: function(e, t, n) {
                            var r = vo,
                                i = Eo();
                            if (ia) {
                                if (void 0 === n) throw Error(a(407));
                                n = n()
                            } else {
                                if (n = t(), null === Al) throw Error(a(349));
                                0 !== (30 & po) || No(r, t, n)
                            }
                            i.memoizedState = n;
                            var o = {
                                value: n,
                                getSnapshot: t
                            };
                            return i.queue = o, Go(zo.bind(null, r, o, e), [e]), r.flags |= 2048, Bo(9, Io.bind(null, r, o, n, t), void 0, null), n
                        },
                        useId: function() {
                            var e = Eo(),
                                t = Al.identifierPrefix;
                            if (ia) {
                                var n = $i;
                                t = ":" + t + "R" + (n = (Ji & ~(1 << 32 - ot(Ji) - 1)).toString(32) + n), 0 < (n = bo++) && (t += "H" + n.toString(32)), t += ":"
                            } else t = ":" + t + "r" + (n = _o++).toString(32) + ":";
                            return e.memoizedState = t
                        },
                        unstable_isNewReconciler: !1
                    },
                    ls = {
                        readContext: ka,
                        useCallback: Jo,
                        useContext: ka,
                        useEffect: Wo,
                        useImperativeHandle: Yo,
                        useInsertionEffect: jo,
                        useLayoutEffect: qo,
                        useMemo: $o,
                        useReducer: Ao,
                        useRef: Uo,
                        useState: function() {
                            return Ao(Lo)
                        },
                        useDebugValue: Zo,
                        useDeferredValue: function(e) {
                            return Qo(To(), mo.memoizedState, e)
                        },
                        useTransition: function() {
                            return [Ao(Lo)[0], To().memoizedState]
                        },
                        useMutableSource: Po,
                        useSyncExternalStore: Ro,
                        useId: es,
                        unstable_isNewReconciler: !1
                    },
                    us = {
                        readContext: ka,
                        useCallback: Jo,
                        useContext: ka,
                        useEffect: Wo,
                        useImperativeHandle: Yo,
                        useInsertionEffect: jo,
                        useLayoutEffect: qo,
                        useMemo: $o,
                        useReducer: Co,
                        useRef: Uo,
                        useState: function() {
                            return Co(Lo)
                        },
                        useDebugValue: Zo,
                        useDeferredValue: function(e) {
                            var t = To();
                            return null === mo ? t.memoizedState = e : Qo(t, mo.memoizedState, e)
                        },
                        useTransition: function() {
                            return [Co(Lo)[0], To().memoizedState]
                        },
                        useMutableSource: Po,
                        useSyncExternalStore: Ro,
                        useId: es,
                        unstable_isNewReconciler: !1
                    };

                function cs(e, t) {
                    try {
                        var n = "",
                            r = t;
                        do {
                            n += H(r), r = r.return
                        } while (r);
                        var i = n
                    } catch (a) {
                        i = "\nError generating stack: " + a.message + "\n" + a.stack
                    }
                    return {
                        value: e,
                        source: t,
                        stack: i,
                        digest: null
                    }
                }

                function fs(e, t, n) {
                    return {
                        value: e,
                        source: null,
                        stack: null != n ? n : null,
                        digest: null != t ? t : null
                    }
                }

                function ds(e, t) {
                    try {
                        console.error(t.value)
                    } catch (n) {
                        setTimeout((function() {
                            throw n
                        }))
                    }
                }
                var hs = "function" === typeof WeakMap ? WeakMap : Map;

                function ps(e, t, n) {
                    (n = Na(-1, n)).tag = 3, n.payload = {
                        element: null
                    };
                    var r = t.value;
                    return n.callback = function() {
                        Wl || (Wl = !0, jl = r), ds(0, t)
                    }, n
                }

                function vs(e, t, n) {
                    (n = Na(-1, n)).tag = 3;
                    var r = e.type.getDerivedStateFromError;
                    if ("function" === typeof r) {
                        var i = t.value;
                        n.payload = function() {
                            return r(i)
                        }, n.callback = function() {
                            ds(0, t)
                        }
                    }
                    var a = e.stateNode;
                    return null !== a && "function" === typeof a.componentDidCatch && (n.callback = function() {
                        ds(0, t), "function" !== typeof r && (null === ql ? ql = new Set([this]) : ql.add(this));
                        var e = t.stack;
                        this.componentDidCatch(t.value, {
                            componentStack: null !== e ? e : ""
                        })
                    }), n
                }

                function ms(e, t, n) {
                    var r = e.pingCache;
                    if (null === r) {
                        r = e.pingCache = new hs;
                        var i = new Set;
                        r.set(t, i)
                    } else void 0 === (i = r.get(t)) && (i = new Set, r.set(t, i));
                    i.has(n) || (i.add(n), e = ku.bind(null, e, t, n), t.then(e, e))
                }

                function gs(e) {
                    do {
                        var t;
                        if ((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated), t) return e;
                        e = e.return
                    } while (null !== e);
                    return null
                }

                function ys(e, t, n, r, i) {
                    return 0 === (1 & e.mode) ? (e === t ? e.flags |= 65536 : (e.flags |= 128, n.flags |= 131072, n.flags &= -52805, 1 === n.tag && (null === n.alternate ? n.tag = 17 : ((t = Na(-1, 1)).tag = 2, Ia(n, t, 1))), n.lanes |= 1), e) : (e.flags |= 65536, e.lanes = i, e)
                }
                var xs = b.ReactCurrentOwner,
                    bs = !1;

                function _s(e, t, n, r) {
                    t.child = null === e ? $a(t, null, n, r) : Ja(t, e.child, n, r)
                }

                function ws(e, t, n, r, i) {
                    n = n.render;
                    var a = t.ref;
                    return Ma(t, i), r = Mo(e, t, n, r, a, i), n = ko(), null === e || bs ? (ia && n && ea(t), t.flags |= 1, _s(e, t, r, i), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~i, Ws(e, t, i))
                }

                function Ss(e, t, n, r, i) {
                    if (null === e) {
                        var a = n.type;
                        return "function" !== typeof a || Ru(a) || void 0 !== a.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Iu(n.type, null, r, t, t.mode, i)).ref = t.ref, e.return = t, t.child = e) : (t.tag = 15, t.type = a, Ms(e, t, a, r, i))
                    }
                    if (a = e.child, 0 === (e.lanes & i)) {
                        var o = a.memoizedProps;
                        if ((n = null !== (n = n.compare) ? n : lr)(o, r) && e.ref === t.ref) return Ws(e, t, i)
                    }
                    return t.flags |= 1, (e = Nu(a, r)).ref = t.ref, e.return = t, t.child = e
                }

                function Ms(e, t, n, r, i) {
                    if (null !== e) {
                        var a = e.memoizedProps;
                        if (lr(a, r) && e.ref === t.ref) {
                            if (bs = !1, t.pendingProps = r = a, 0 === (e.lanes & i)) return t.lanes = e.lanes, Ws(e, t, i);
                            0 !== (131072 & e.flags) && (bs = !0)
                        }
                    }
                    return Ts(e, t, n, r, i)
                }

                function ks(e, t, n) {
                    var r = t.pendingProps,
                        i = r.children,
                        a = null !== e ? e.memoizedState : null;
                    if ("hidden" === r.mode)
                        if (0 === (1 & t.mode)) t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        }, Ei(Nl, Rl), Rl |= n;
                        else {
                            if (0 === (1073741824 & n)) return e = null !== a ? a.baseLanes | n : n, t.lanes = t.childLanes = 1073741824, t.memoizedState = {
                                baseLanes: e,
                                cachePool: null,
                                transitions: null
                            }, t.updateQueue = null, Ei(Nl, Rl), Rl |= e, null;
                            t.memoizedState = {
                                baseLanes: 0,
                                cachePool: null,
                                transitions: null
                            }, r = null !== a ? a.baseLanes : n, Ei(Nl, Rl), Rl |= r
                        }
                    else null !== a ? (r = a.baseLanes | n, t.memoizedState = null) : r = n, Ei(Nl, Rl), Rl |= r;
                    return _s(e, t, i, n), t.child
                }

                function Es(e, t) {
                    var n = t.ref;
                    (null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 512, t.flags |= 2097152)
                }

                function Ts(e, t, n, r, i) {
                    var a = Ri(n) ? Ci : Li.current;
                    return a = Pi(t, a), Ma(t, i), n = Mo(e, t, n, r, a, i), r = ko(), null === e || bs ? (ia && r && ea(t), t.flags |= 1, _s(e, t, n, i), t.child) : (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~i, Ws(e, t, i))
                }

                function Ls(e, t, n, r, i) {
                    if (Ri(n)) {
                        var a = !0;
                        Oi(t)
                    } else a = !1;
                    if (Ma(t, i), null === t.stateNode) Gs(e, t), Ga(t, n, r), ja(t, n, r, i), r = !0;
                    else if (null === e) {
                        var o = t.stateNode,
                            s = t.memoizedProps;
                        o.props = s;
                        var l = o.context,
                            u = n.contextType;
                        "object" === typeof u && null !== u ? u = ka(u) : u = Pi(t, u = Ri(n) ? Ci : Li.current);
                        var c = n.getDerivedStateFromProps,
                            f = "function" === typeof c || "function" === typeof o.getSnapshotBeforeUpdate;
                        f || "function" !== typeof o.UNSAFE_componentWillReceiveProps && "function" !== typeof o.componentWillReceiveProps || (s !== r || l !== u) && Wa(t, o, r, u), Ca = !1;
                        var d = t.memoizedState;
                        o.state = d, Da(t, r, o, i), l = t.memoizedState, s !== r || d !== l || Ai.current || Ca ? ("function" === typeof c && (Ua(t, n, c, r), l = t.memoizedState), (s = Ca || Va(t, n, s, r, d, l, u)) ? (f || "function" !== typeof o.UNSAFE_componentWillMount && "function" !== typeof o.componentWillMount || ("function" === typeof o.componentWillMount && o.componentWillMount(), "function" === typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()), "function" === typeof o.componentDidMount && (t.flags |= 4194308)) : ("function" === typeof o.componentDidMount && (t.flags |= 4194308), t.memoizedProps = r, t.memoizedState = l), o.props = r, o.state = l, o.context = u, r = s) : ("function" === typeof o.componentDidMount && (t.flags |= 4194308), r = !1)
                    } else {
                        o = t.stateNode, Ra(e, t), s = t.memoizedProps, u = t.type === t.elementType ? s : ma(t.type, s), o.props = u, f = t.pendingProps, d = o.context, "object" === typeof(l = n.contextType) && null !== l ? l = ka(l) : l = Pi(t, l = Ri(n) ? Ci : Li.current);
                        var h = n.getDerivedStateFromProps;
                        (c = "function" === typeof h || "function" === typeof o.getSnapshotBeforeUpdate) || "function" !== typeof o.UNSAFE_componentWillReceiveProps && "function" !== typeof o.componentWillReceiveProps || (s !== f || d !== l) && Wa(t, o, r, l), Ca = !1, d = t.memoizedState, o.state = d, Da(t, r, o, i);
                        var p = t.memoizedState;
                        s !== f || d !== p || Ai.current || Ca ? ("function" === typeof h && (Ua(t, n, h, r), p = t.memoizedState), (u = Ca || Va(t, n, u, r, d, p, l) || !1) ? (c || "function" !== typeof o.UNSAFE_componentWillUpdate && "function" !== typeof o.componentWillUpdate || ("function" === typeof o.componentWillUpdate && o.componentWillUpdate(r, p, l), "function" === typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(r, p, l)), "function" === typeof o.componentDidUpdate && (t.flags |= 4), "function" === typeof o.getSnapshotBeforeUpdate && (t.flags |= 1024)) : ("function" !== typeof o.componentDidUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 4), "function" !== typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 1024), t.memoizedProps = r, t.memoizedState = p), o.props = r, o.state = p, o.context = l, r = u) : ("function" !== typeof o.componentDidUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 4), "function" !== typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && d === e.memoizedState || (t.flags |= 1024), r = !1)
                    }
                    return As(e, t, n, r, a, i)
                }

                function As(e, t, n, r, i, a) {
                    Es(e, t);
                    var o = 0 !== (128 & t.flags);
                    if (!r && !o) return i && Di(t, n, !1), Ws(e, t, a);
                    r = t.stateNode, xs.current = t;
                    var s = o && "function" !== typeof n.getDerivedStateFromError ? null : r.render();
                    return t.flags |= 1, null !== e && o ? (t.child = Ja(t, e.child, null, a), t.child = Ja(t, null, s, a)) : _s(e, t, s, a), t.memoizedState = r.state, i && Di(t, n, !0), t.child
                }

                function Cs(e) {
                    var t = e.stateNode;
                    t.pendingContext ? Ii(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Ii(0, t.context, !1), ro(e, t.containerInfo)
                }

                function Ps(e, t, n, r, i) {
                    return ha(), pa(i), t.flags |= 256, _s(e, t, n, r), t.child
                }
                var Rs, Ns, Is, zs = {
                    dehydrated: null,
                    treeContext: null,
                    retryLane: 0
                };

                function Os(e) {
                    return {
                        baseLanes: e,
                        cachePool: null,
                        transitions: null
                    }
                }

                function Ds(e, t, n) {
                    var r, i = t.pendingProps,
                        o = so.current,
                        s = !1,
                        l = 0 !== (128 & t.flags);
                    if ((r = l) || (r = (null === e || null !== e.memoizedState) && 0 !== (2 & o)), r ? (s = !0, t.flags &= -129) : null !== e && null === e.memoizedState || (o |= 1), Ei(so, 1 & o), null === e) return ua(t), null !== (e = t.memoizedState) && null !== (e = e.dehydrated) ? (0 === (1 & t.mode) ? t.lanes = 1 : "$!" === e.data ? t.lanes = 8 : t.lanes = 1073741824, null) : (l = i.children, e = i.fallback, s ? (i = t.mode, s = t.child, l = {
                        mode: "hidden",
                        children: l
                    }, 0 === (1 & i) && null !== s ? (s.childLanes = 0, s.pendingProps = l) : s = Ou(l, i, 0, null), e = zu(e, i, n, null), s.return = t, e.return = t, s.sibling = e, t.child = s, t.child.memoizedState = Os(n), t.memoizedState = zs, e) : Fs(t, l));
                    if (null !== (o = e.memoizedState) && null !== (r = o.dehydrated)) return function(e, t, n, r, i, o, s) {
                        if (n) return 256 & t.flags ? (t.flags &= -257, Bs(e, t, s, r = fs(Error(a(422))))) : null !== t.memoizedState ? (t.child = e.child, t.flags |= 128, null) : (o = r.fallback, i = t.mode, r = Ou({
                            mode: "visible",
                            children: r.children
                        }, i, 0, null), (o = zu(o, i, s, null)).flags |= 2, r.return = t, o.return = t, r.sibling = o, t.child = r, 0 !== (1 & t.mode) && Ja(t, e.child, null, s), t.child.memoizedState = Os(s), t.memoizedState = zs, o);
                        if (0 === (1 & t.mode)) return Bs(e, t, s, null);
                        if ("$!" === i.data) {
                            if (r = i.nextSibling && i.nextSibling.dataset) var l = r.dgst;
                            return r = l, Bs(e, t, s, r = fs(o = Error(a(419)), r, void 0))
                        }
                        if (l = 0 !== (s & e.childLanes), bs || l) {
                            if (null !== (r = Al)) {
                                switch (s & -s) {
                                    case 4:
                                        i = 2;
                                        break;
                                    case 16:
                                        i = 8;
                                        break;
                                    case 64:
                                    case 128:
                                    case 256:
                                    case 512:
                                    case 1024:
                                    case 2048:
                                    case 4096:
                                    case 8192:
                                    case 16384:
                                    case 32768:
                                    case 65536:
                                    case 131072:
                                    case 262144:
                                    case 524288:
                                    case 1048576:
                                    case 2097152:
                                    case 4194304:
                                    case 8388608:
                                    case 16777216:
                                    case 33554432:
                                    case 67108864:
                                        i = 32;
                                        break;
                                    case 536870912:
                                        i = 268435456;
                                        break;
                                    default:
                                        i = 0
                                }
                                0 !== (i = 0 !== (i & (r.suspendedLanes | s)) ? 0 : i) && i !== o.retryLane && (o.retryLane = i, Aa(e, i), nu(r, e, i, -1))
                            }
                            return vu(), Bs(e, t, s, r = fs(Error(a(421))))
                        }
                        return "$?" === i.data ? (t.flags |= 128, t.child = e.child, t = Tu.bind(null, e), i._reactRetry = t, null) : (e = o.treeContext, ra = ui(i.nextSibling), na = t, ia = !0, aa = null, null !== e && (Xi[Yi++] = Ji, Xi[Yi++] = $i, Xi[Yi++] = Zi, Ji = e.id, $i = e.overflow, Zi = t), (t = Fs(t, r.children)).flags |= 4096, t)
                    }(e, t, l, i, r, o, n);
                    if (s) {
                        s = i.fallback, l = t.mode, r = (o = e.child).sibling;
                        var u = {
                            mode: "hidden",
                            children: i.children
                        };
                        return 0 === (1 & l) && t.child !== o ? ((i = t.child).childLanes = 0, i.pendingProps = u, t.deletions = null) : (i = Nu(o, u)).subtreeFlags = 14680064 & o.subtreeFlags, null !== r ? s = Nu(r, s) : (s = zu(s, l, n, null)).flags |= 2, s.return = t, i.return = t, i.sibling = s, t.child = i, i = s, s = t.child, l = null === (l = e.child.memoizedState) ? Os(n) : {
                            baseLanes: l.baseLanes | n,
                            cachePool: null,
                            transitions: l.transitions
                        }, s.memoizedState = l, s.childLanes = e.childLanes & ~n, t.memoizedState = zs, i
                    }
                    return e = (s = e.child).sibling, i = Nu(s, {
                        mode: "visible",
                        children: i.children
                    }), 0 === (1 & t.mode) && (i.lanes = n), i.return = t, i.sibling = null, null !== e && (null === (n = t.deletions) ? (t.deletions = [e], t.flags |= 16) : n.push(e)), t.child = i, t.memoizedState = null, i
                }

                function Fs(e, t) {
                    return (t = Ou({
                        mode: "visible",
                        children: t
                    }, e.mode, 0, null)).return = e, e.child = t
                }

                function Bs(e, t, n, r) {
                    return null !== r && pa(r), Ja(t, e.child, null, n), (e = Fs(t, t.pendingProps.children)).flags |= 2, t.memoizedState = null, e
                }

                function Us(e, t, n) {
                    e.lanes |= t;
                    var r = e.alternate;
                    null !== r && (r.lanes |= t), Sa(e.return, t, n)
                }

                function Hs(e, t, n, r, i) {
                    var a = e.memoizedState;
                    null === a ? e.memoizedState = {
                        isBackwards: t,
                        rendering: null,
                        renderingStartTime: 0,
                        last: r,
                        tail: n,
                        tailMode: i
                    } : (a.isBackwards = t, a.rendering = null, a.renderingStartTime = 0, a.last = r, a.tail = n, a.tailMode = i)
                }

                function Vs(e, t, n) {
                    var r = t.pendingProps,
                        i = r.revealOrder,
                        a = r.tail;
                    if (_s(e, t, r.children, n), 0 !== (2 & (r = so.current))) r = 1 & r | 2, t.flags |= 128;
                    else {
                        if (null !== e && 0 !== (128 & e.flags)) e: for (e = t.child; null !== e;) {
                            if (13 === e.tag) null !== e.memoizedState && Us(e, n, t);
                            else if (19 === e.tag) Us(e, n, t);
                            else if (null !== e.child) {
                                e.child.return = e, e = e.child;
                                continue
                            }
                            if (e === t) break e;
                            for (; null === e.sibling;) {
                                if (null === e.return || e.return === t) break e;
                                e = e.return
                            }
                            e.sibling.return = e.return, e = e.sibling
                        }
                        r &= 1
                    }
                    if (Ei(so, r), 0 === (1 & t.mode)) t.memoizedState = null;
                    else switch (i) {
                        case "forwards":
                            for (n = t.child, i = null; null !== n;) null !== (e = n.alternate) && null === lo(e) && (i = n), n = n.sibling;
                            null === (n = i) ? (i = t.child, t.child = null) : (i = n.sibling, n.sibling = null), Hs(t, !1, i, n, a);
                            break;
                        case "backwards":
                            for (n = null, i = t.child, t.child = null; null !== i;) {
                                if (null !== (e = i.alternate) && null === lo(e)) {
                                    t.child = i;
                                    break
                                }
                                e = i.sibling, i.sibling = n, n = i, i = e
                            }
                            Hs(t, !0, n, null, a);
                            break;
                        case "together":
                            Hs(t, !1, null, null, void 0);
                            break;
                        default:
                            t.memoizedState = null
                    }
                    return t.child
                }

                function Gs(e, t) {
                    0 === (1 & t.mode) && null !== e && (e.alternate = null, t.alternate = null, t.flags |= 2)
                }

                function Ws(e, t, n) {
                    if (null !== e && (t.dependencies = e.dependencies), Ol |= t.lanes, 0 === (n & t.childLanes)) return null;
                    if (null !== e && t.child !== e.child) throw Error(a(153));
                    if (null !== t.child) {
                        for (n = Nu(e = t.child, e.pendingProps), t.child = n, n.return = t; null !== e.sibling;) e = e.sibling, (n = n.sibling = Nu(e, e.pendingProps)).return = t;
                        n.sibling = null
                    }
                    return t.child
                }

                function js(e, t) {
                    if (!ia) switch (e.tailMode) {
                        case "hidden":
                            t = e.tail;
                            for (var n = null; null !== t;) null !== t.alternate && (n = t), t = t.sibling;
                            null === n ? e.tail = null : n.sibling = null;
                            break;
                        case "collapsed":
                            n = e.tail;
                            for (var r = null; null !== n;) null !== n.alternate && (r = n), n = n.sibling;
                            null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
                    }
                }

                function qs(e) {
                    var t = null !== e.alternate && e.alternate.child === e.child,
                        n = 0,
                        r = 0;
                    if (t)
                        for (var i = e.child; null !== i;) n |= i.lanes | i.childLanes, r |= 14680064 & i.subtreeFlags, r |= 14680064 & i.flags, i.return = e, i = i.sibling;
                    else
                        for (i = e.child; null !== i;) n |= i.lanes | i.childLanes, r |= i.subtreeFlags, r |= i.flags, i.return = e, i = i.sibling;
                    return e.subtreeFlags |= r, e.childLanes = n, t
                }

                function Xs(e, t, n) {
                    var r = t.pendingProps;
                    switch (ta(t), t.tag) {
                        case 2:
                        case 16:
                        case 15:
                        case 0:
                        case 11:
                        case 7:
                        case 8:
                        case 12:
                        case 9:
                        case 14:
                            return qs(t), null;
                        case 1:
                        case 17:
                            return Ri(t.type) && Ni(), qs(t), null;
                        case 3:
                            return r = t.stateNode, io(), ki(Ai), ki(Li), co(), r.pendingContext && (r.context = r.pendingContext, r.pendingContext = null), null !== e && null !== e.child || (fa(t) ? t.flags |= 4 : null === e || e.memoizedState.isDehydrated && 0 === (256 & t.flags) || (t.flags |= 1024, null !== aa && (ou(aa), aa = null))), qs(t), null;
                        case 5:
                            oo(t);
                            var i = no(to.current);
                            if (n = t.type, null !== e && null != t.stateNode) Ns(e, t, n, r), e.ref !== t.ref && (t.flags |= 512, t.flags |= 2097152);
                            else {
                                if (!r) {
                                    if (null === t.stateNode) throw Error(a(166));
                                    return qs(t), null
                                }
                                if (e = no(Ka.current), fa(t)) {
                                    r = t.stateNode, n = t.type;
                                    var o = t.memoizedProps;
                                    switch (r[di] = t, r[hi] = o, e = 0 !== (1 & t.mode), n) {
                                        case "dialog":
                                            Br("cancel", r), Br("close", r);
                                            break;
                                        case "iframe":
                                        case "object":
                                        case "embed":
                                            Br("load", r);
                                            break;
                                        case "video":
                                        case "audio":
                                            for (i = 0; i < zr.length; i++) Br(zr[i], r);
                                            break;
                                        case "source":
                                            Br("error", r);
                                            break;
                                        case "img":
                                        case "image":
                                        case "link":
                                            Br("error", r), Br("load", r);
                                            break;
                                        case "details":
                                            Br("toggle", r);
                                            break;
                                        case "input":
                                            J(r, o), Br("invalid", r);
                                            break;
                                        case "select":
                                            r._wrapperState = {
                                                wasMultiple: !!o.multiple
                                            }, Br("invalid", r);
                                            break;
                                        case "textarea":
                                            ie(r, o), Br("invalid", r)
                                    }
                                    for (var l in ye(n, o), i = null, o)
                                        if (o.hasOwnProperty(l)) {
                                            var u = o[l];
                                            "children" === l ? "string" === typeof u ? r.textContent !== u && (!0 !== o.suppressHydrationWarning && Qr(r.textContent, u, e), i = ["children", u]) : "number" === typeof u && r.textContent !== "" + u && (!0 !== o.suppressHydrationWarning && Qr(r.textContent, u, e), i = ["children", "" + u]) : s.hasOwnProperty(l) && null != u && "onScroll" === l && Br("scroll", r)
                                        }
                                    switch (n) {
                                        case "input":
                                            q(r), K(r, o, !0);
                                            break;
                                        case "textarea":
                                            q(r), oe(r);
                                            break;
                                        case "select":
                                        case "option":
                                            break;
                                        default:
                                            "function" === typeof o.onClick && (r.onclick = Kr)
                                    }
                                    r = i, t.updateQueue = r, null !== r && (t.flags |= 4)
                                } else {
                                    l = 9 === i.nodeType ? i : i.ownerDocument, "http://www.w3.org/1999/xhtml" === e && (e = se(n)), "http://www.w3.org/1999/xhtml" === e ? "script" === n ? ((e = l.createElement("div")).innerHTML = "<script><\/script>", e = e.removeChild(e.firstChild)) : "string" === typeof r.is ? e = l.createElement(n, {
                                        is: r.is
                                    }) : (e = l.createElement(n), "select" === n && (l = e, r.multiple ? l.multiple = !0 : r.size && (l.size = r.size))) : e = l.createElementNS(e, n), e[di] = t, e[hi] = r, Rs(e, t), t.stateNode = e;
                                    e: {
                                        switch (l = xe(n, r), n) {
                                            case "dialog":
                                                Br("cancel", e), Br("close", e), i = r;
                                                break;
                                            case "iframe":
                                            case "object":
                                            case "embed":
                                                Br("load", e), i = r;
                                                break;
                                            case "video":
                                            case "audio":
                                                for (i = 0; i < zr.length; i++) Br(zr[i], e);
                                                i = r;
                                                break;
                                            case "source":
                                                Br("error", e), i = r;
                                                break;
                                            case "img":
                                            case "image":
                                            case "link":
                                                Br("error", e), Br("load", e), i = r;
                                                break;
                                            case "details":
                                                Br("toggle", e), i = r;
                                                break;
                                            case "input":
                                                J(e, r), i = Z(e, r), Br("invalid", e);
                                                break;
                                            case "option":
                                            default:
                                                i = r;
                                                break;
                                            case "select":
                                                e._wrapperState = {
                                                    wasMultiple: !!r.multiple
                                                }, i = D({}, r, {
                                                    value: void 0
                                                }), Br("invalid", e);
                                                break;
                                            case "textarea":
                                                ie(e, r), i = re(e, r), Br("invalid", e)
                                        }
                                        for (o in ye(n, i), u = i)
                                            if (u.hasOwnProperty(o)) {
                                                var c = u[o];
                                                "style" === o ? me(e, c) : "dangerouslySetInnerHTML" === o ? null != (c = c ? c.__html : void 0) && fe(e, c) : "children" === o ? "string" === typeof c ? ("textarea" !== n || "" !== c) && de(e, c) : "number" === typeof c && de(e, "" + c) : "suppressContentEditableWarning" !== o && "suppressHydrationWarning" !== o && "autoFocus" !== o && (s.hasOwnProperty(o) ? null != c && "onScroll" === o && Br("scroll", e) : null != c && x(e, o, c, l))
                                            }
                                        switch (n) {
                                            case "input":
                                                q(e), K(e, r, !1);
                                                break;
                                            case "textarea":
                                                q(e), oe(e);
                                                break;
                                            case "option":
                                                null != r.value && e.setAttribute("value", "" + W(r.value));
                                                break;
                                            case "select":
                                                e.multiple = !!r.multiple, null != (o = r.value) ? ne(e, !!r.multiple, o, !1) : null != r.defaultValue && ne(e, !!r.multiple, r.defaultValue, !0);
                                                break;
                                            default:
                                                "function" === typeof i.onClick && (e.onclick = Kr)
                                        }
                                        switch (n) {
                                            case "button":
                                            case "input":
                                            case "select":
                                            case "textarea":
                                                r = !!r.autoFocus;
                                                break e;
                                            case "img":
                                                r = !0;
                                                break e;
                                            default:
                                                r = !1
                                        }
                                    }
                                    r && (t.flags |= 4)
                                }
                                null !== t.ref && (t.flags |= 512, t.flags |= 2097152)
                            }
                            return qs(t), null;
                        case 6:
                            if (e && null != t.stateNode) Is(0, t, e.memoizedProps, r);
                            else {
                                if ("string" !== typeof r && null === t.stateNode) throw Error(a(166));
                                if (n = no(to.current), no(Ka.current), fa(t)) {
                                    if (r = t.stateNode, n = t.memoizedProps, r[di] = t, (o = r.nodeValue !== n) && null !== (e = na)) switch (e.tag) {
                                        case 3:
                                            Qr(r.nodeValue, n, 0 !== (1 & e.mode));
                                            break;
                                        case 5:
                                            !0 !== e.memoizedProps.suppressHydrationWarning && Qr(r.nodeValue, n, 0 !== (1 & e.mode))
                                    }
                                    o && (t.flags |= 4)
                                } else(r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[di] = t, t.stateNode = r
                            }
                            return qs(t), null;
                        case 13:
                            if (ki(so), r = t.memoizedState, null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {
                                if (ia && null !== ra && 0 !== (1 & t.mode) && 0 === (128 & t.flags)) da(), ha(), t.flags |= 98560, o = !1;
                                else if (o = fa(t), null !== r && null !== r.dehydrated) {
                                    if (null === e) {
                                        if (!o) throw Error(a(318));
                                        if (!(o = null !== (o = t.memoizedState) ? o.dehydrated : null)) throw Error(a(317));
                                        o[di] = t
                                    } else ha(), 0 === (128 & t.flags) && (t.memoizedState = null), t.flags |= 4;
                                    qs(t), o = !1
                                } else null !== aa && (ou(aa), aa = null), o = !0;
                                if (!o) return 65536 & t.flags ? t : null
                            }
                            return 0 !== (128 & t.flags) ? (t.lanes = n, t) : ((r = null !== r) !== (null !== e && null !== e.memoizedState) && r && (t.child.flags |= 8192, 0 !== (1 & t.mode) && (null === e || 0 !== (1 & so.current) ? 0 === Il && (Il = 3) : vu())), null !== t.updateQueue && (t.flags |= 4), qs(t), null);
                        case 4:
                            return io(), null === e && Vr(t.stateNode.containerInfo), qs(t), null;
                        case 10:
                            return wa(t.type._context), qs(t), null;
                        case 19:
                            if (ki(so), null === (o = t.memoizedState)) return qs(t), null;
                            if (r = 0 !== (128 & t.flags), null === (l = o.rendering))
                                if (r) js(o, !1);
                                else {
                                    if (0 !== Il || null !== e && 0 !== (128 & e.flags))
                                        for (e = t.child; null !== e;) {
                                            if (null !== (l = lo(e))) {
                                                for (t.flags |= 128, js(o, !1), null !== (r = l.updateQueue) && (t.updateQueue = r, t.flags |= 4), t.subtreeFlags = 0, r = n, n = t.child; null !== n;) e = r, (o = n).flags &= 14680066, null === (l = o.alternate) ? (o.childLanes = 0, o.lanes = e, o.child = null, o.subtreeFlags = 0, o.memoizedProps = null, o.memoizedState = null, o.updateQueue = null, o.dependencies = null, o.stateNode = null) : (o.childLanes = l.childLanes, o.lanes = l.lanes, o.child = l.child, o.subtreeFlags = 0, o.deletions = null, o.memoizedProps = l.memoizedProps, o.memoizedState = l.memoizedState, o.updateQueue = l.updateQueue, o.type = l.type, e = l.dependencies, o.dependencies = null === e ? null : {
                                                    lanes: e.lanes,
                                                    firstContext: e.firstContext
                                                }), n = n.sibling;
                                                return Ei(so, 1 & so.current | 2), t.child
                                            }
                                            e = e.sibling
                                        }
                                    null !== o.tail && $e() > Vl && (t.flags |= 128, r = !0, js(o, !1), t.lanes = 4194304)
                                }
                            else {
                                if (!r)
                                    if (null !== (e = lo(l))) {
                                        if (t.flags |= 128, r = !0, null !== (n = e.updateQueue) && (t.updateQueue = n, t.flags |= 4), js(o, !0), null === o.tail && "hidden" === o.tailMode && !l.alternate && !ia) return qs(t), null
                                    } else 2 * $e() - o.renderingStartTime > Vl && 1073741824 !== n && (t.flags |= 128, r = !0, js(o, !1), t.lanes = 4194304);
                                o.isBackwards ? (l.sibling = t.child, t.child = l) : (null !== (n = o.last) ? n.sibling = l : t.child = l, o.last = l)
                            }
                            return null !== o.tail ? (t = o.tail, o.rendering = t, o.tail = t.sibling, o.renderingStartTime = $e(), t.sibling = null, n = so.current, Ei(so, r ? 1 & n | 2 : 1 & n), t) : (qs(t), null);
                        case 22:
                        case 23:
                            return fu(), r = null !== t.memoizedState, null !== e && null !== e.memoizedState !== r && (t.flags |= 8192), r && 0 !== (1 & t.mode) ? 0 !== (1073741824 & Rl) && (qs(t), 6 & t.subtreeFlags && (t.flags |= 8192)) : qs(t), null;
                        case 24:
                        case 25:
                            return null
                    }
                    throw Error(a(156, t.tag))
                }

                function Ys(e, t) {
                    switch (ta(t), t.tag) {
                        case 1:
                            return Ri(t.type) && Ni(), 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;
                        case 3:
                            return io(), ki(Ai), ki(Li), co(), 0 !== (65536 & (e = t.flags)) && 0 === (128 & e) ? (t.flags = -65537 & e | 128, t) : null;
                        case 5:
                            return oo(t), null;
                        case 13:
                            if (ki(so), null !== (e = t.memoizedState) && null !== e.dehydrated) {
                                if (null === t.alternate) throw Error(a(340));
                                ha()
                            }
                            return 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128, t) : null;
                        case 19:
                            return ki(so), null;
                        case 4:
                            return io(), null;
                        case 10:
                            return wa(t.type._context), null;
                        case 22:
                        case 23:
                            return fu(), null;
                        default:
                            return null
                    }
                }
                Rs = function(e, t) {
                    for (var n = t.child; null !== n;) {
                        if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
                        else if (4 !== n.tag && null !== n.child) {
                            n.child.return = n, n = n.child;
                            continue
                        }
                        if (n === t) break;
                        for (; null === n.sibling;) {
                            if (null === n.return || n.return === t) return;
                            n = n.return
                        }
                        n.sibling.return = n.return, n = n.sibling
                    }
                }, Ns = function(e, t, n, r) {
                    var i = e.memoizedProps;
                    if (i !== r) {
                        e = t.stateNode, no(Ka.current);
                        var a, o = null;
                        switch (n) {
                            case "input":
                                i = Z(e, i), r = Z(e, r), o = [];
                                break;
                            case "select":
                                i = D({}, i, {
                                    value: void 0
                                }), r = D({}, r, {
                                    value: void 0
                                }), o = [];
                                break;
                            case "textarea":
                                i = re(e, i), r = re(e, r), o = [];
                                break;
                            default:
                                "function" !== typeof i.onClick && "function" === typeof r.onClick && (e.onclick = Kr)
                        }
                        for (c in ye(n, r), n = null, i)
                            if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && null != i[c])
                                if ("style" === c) {
                                    var l = i[c];
                                    for (a in l) l.hasOwnProperty(a) && (n || (n = {}), n[a] = "")
                                } else "dangerouslySetInnerHTML" !== c && "children" !== c && "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && "autoFocus" !== c && (s.hasOwnProperty(c) ? o || (o = []) : (o = o || []).push(c, null));
                        for (c in r) {
                            var u = r[c];
                            if (l = null != i ? i[c] : void 0, r.hasOwnProperty(c) && u !== l && (null != u || null != l))
                                if ("style" === c)
                                    if (l) {
                                        for (a in l) !l.hasOwnProperty(a) || u && u.hasOwnProperty(a) || (n || (n = {}), n[a] = "");
                                        for (a in u) u.hasOwnProperty(a) && l[a] !== u[a] && (n || (n = {}), n[a] = u[a])
                                    } else n || (o || (o = []), o.push(c, n)), n = u;
                            else "dangerouslySetInnerHTML" === c ? (u = u ? u.__html : void 0, l = l ? l.__html : void 0, null != u && l !== u && (o = o || []).push(c, u)) : "children" === c ? "string" !== typeof u && "number" !== typeof u || (o = o || []).push(c, "" + u) : "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && (s.hasOwnProperty(c) ? (null != u && "onScroll" === c && Br("scroll", e), o || l === u || (o = [])) : (o = o || []).push(c, u))
                        }
                        n && (o = o || []).push("style", n);
                        var c = o;
                        (t.updateQueue = c) && (t.flags |= 4)
                    }
                }, Is = function(e, t, n, r) {
                    n !== r && (t.flags |= 4)
                };
                var Zs = !1,
                    Js = !1,
                    $s = "function" === typeof WeakSet ? WeakSet : Set,
                    Qs = null;

                function Ks(e, t) {
                    var n = e.ref;
                    if (null !== n)
                        if ("function" === typeof n) try {
                            n(null)
                        } catch (r) {
                            Mu(e, t, r)
                        } else n.current = null
                }

                function el(e, t, n) {
                    try {
                        n()
                    } catch (r) {
                        Mu(e, t, r)
                    }
                }
                var tl = !1;

                function nl(e, t, n) {
                    var r = t.updateQueue;
                    if (null !== (r = null !== r ? r.lastEffect : null)) {
                        var i = r = r.next;
                        do {
                            if ((i.tag & e) === e) {
                                var a = i.destroy;
                                i.destroy = void 0, void 0 !== a && el(t, n, a)
                            }
                            i = i.next
                        } while (i !== r)
                    }
                }

                function rl(e, t) {
                    if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
                        var n = t = t.next;
                        do {
                            if ((n.tag & e) === e) {
                                var r = n.create;
                                n.destroy = r()
                            }
                            n = n.next
                        } while (n !== t)
                    }
                }

                function il(e) {
                    var t = e.ref;
                    if (null !== t) {
                        var n = e.stateNode;
                        e.tag, e = n, "function" === typeof t ? t(e) : t.current = e
                    }
                }

                function al(e) {
                    var t = e.alternate;
                    null !== t && (e.alternate = null, al(t)), e.child = null, e.deletions = null, e.sibling = null, 5 === e.tag && (null !== (t = e.stateNode) && (delete t[di], delete t[hi], delete t[vi], delete t[mi], delete t[gi])), e.stateNode = null, e.return = null, e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, e.stateNode = null, e.updateQueue = null
                }

                function ol(e) {
                    return 5 === e.tag || 3 === e.tag || 4 === e.tag
                }

                function sl(e) {
                    e: for (;;) {
                        for (; null === e.sibling;) {
                            if (null === e.return || ol(e.return)) return null;
                            e = e.return
                        }
                        for (e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag;) {
                            if (2 & e.flags) continue e;
                            if (null === e.child || 4 === e.tag) continue e;
                            e.child.return = e, e = e.child
                        }
                        if (!(2 & e.flags)) return e.stateNode
                    }
                }

                function ll(e, t, n) {
                    var r = e.tag;
                    if (5 === r || 6 === r) e = e.stateNode, t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e), null !== (n = n._reactRootContainer) && void 0 !== n || null !== t.onclick || (t.onclick = Kr));
                    else if (4 !== r && null !== (e = e.child))
                        for (ll(e, t, n), e = e.sibling; null !== e;) ll(e, t, n), e = e.sibling
                }

                function ul(e, t, n) {
                    var r = e.tag;
                    if (5 === r || 6 === r) e = e.stateNode, t ? n.insertBefore(e, t) : n.appendChild(e);
                    else if (4 !== r && null !== (e = e.child))
                        for (ul(e, t, n), e = e.sibling; null !== e;) ul(e, t, n), e = e.sibling
                }
                var cl = null,
                    fl = !1;

                function dl(e, t, n) {
                    for (n = n.child; null !== n;) hl(e, t, n), n = n.sibling
                }

                function hl(e, t, n) {
                    if (at && "function" === typeof at.onCommitFiberUnmount) try {
                        at.onCommitFiberUnmount(it, n)
                    } catch (s) {}
                    switch (n.tag) {
                        case 5:
                            Js || Ks(n, t);
                        case 6:
                            var r = cl,
                                i = fl;
                            cl = null, dl(e, t, n), fl = i, null !== (cl = r) && (fl ? (e = cl, n = n.stateNode, 8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n)) : cl.removeChild(n.stateNode));
                            break;
                        case 18:
                            null !== cl && (fl ? (e = cl, n = n.stateNode, 8 === e.nodeType ? li(e.parentNode, n) : 1 === e.nodeType && li(e, n), Vt(e)) : li(cl, n.stateNode));
                            break;
                        case 4:
                            r = cl, i = fl, cl = n.stateNode.containerInfo, fl = !0, dl(e, t, n), cl = r, fl = i;
                            break;
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (!Js && (null !== (r = n.updateQueue) && null !== (r = r.lastEffect))) {
                                i = r = r.next;
                                do {
                                    var a = i,
                                        o = a.destroy;
                                    a = a.tag, void 0 !== o && (0 !== (2 & a) || 0 !== (4 & a)) && el(n, t, o), i = i.next
                                } while (i !== r)
                            }
                            dl(e, t, n);
                            break;
                        case 1:
                            if (!Js && (Ks(n, t), "function" === typeof(r = n.stateNode).componentWillUnmount)) try {
                                r.props = n.memoizedProps, r.state = n.memoizedState, r.componentWillUnmount()
                            } catch (s) {
                                Mu(n, t, s)
                            }
                            dl(e, t, n);
                            break;
                        case 21:
                            dl(e, t, n);
                            break;
                        case 22:
                            1 & n.mode ? (Js = (r = Js) || null !== n.memoizedState, dl(e, t, n), Js = r) : dl(e, t, n);
                            break;
                        default:
                            dl(e, t, n)
                    }
                }

                function pl(e) {
                    var t = e.updateQueue;
                    if (null !== t) {
                        e.updateQueue = null;
                        var n = e.stateNode;
                        null === n && (n = e.stateNode = new $s), t.forEach((function(t) {
                            var r = Lu.bind(null, e, t);
                            n.has(t) || (n.add(t), t.then(r, r))
                        }))
                    }
                }

                function vl(e, t) {
                    var n = t.deletions;
                    if (null !== n)
                        for (var r = 0; r < n.length; r++) {
                            var i = n[r];
                            try {
                                var o = e,
                                    s = t,
                                    l = s;
                                e: for (; null !== l;) {
                                    switch (l.tag) {
                                        case 5:
                                            cl = l.stateNode, fl = !1;
                                            break e;
                                        case 3:
                                        case 4:
                                            cl = l.stateNode.containerInfo, fl = !0;
                                            break e
                                    }
                                    l = l.return
                                }
                                if (null === cl) throw Error(a(160));
                                hl(o, s, i), cl = null, fl = !1;
                                var u = i.alternate;
                                null !== u && (u.return = null), i.return = null
                            } catch (c) {
                                Mu(i, t, c)
                            }
                        }
                    if (12854 & t.subtreeFlags)
                        for (t = t.child; null !== t;) ml(t, e), t = t.sibling
                }

                function ml(e, t) {
                    var n = e.alternate,
                        r = e.flags;
                    switch (e.tag) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (vl(t, e), gl(e), 4 & r) {
                                try {
                                    nl(3, e, e.return), rl(3, e)
                                } catch (m) {
                                    Mu(e, e.return, m)
                                }
                                try {
                                    nl(5, e, e.return)
                                } catch (m) {
                                    Mu(e, e.return, m)
                                }
                            }
                            break;
                        case 1:
                            vl(t, e), gl(e), 512 & r && null !== n && Ks(n, n.return);
                            break;
                        case 5:
                            if (vl(t, e), gl(e), 512 & r && null !== n && Ks(n, n.return), 32 & e.flags) {
                                var i = e.stateNode;
                                try {
                                    de(i, "")
                                } catch (m) {
                                    Mu(e, e.return, m)
                                }
                            }
                            if (4 & r && null != (i = e.stateNode)) {
                                var o = e.memoizedProps,
                                    s = null !== n ? n.memoizedProps : o,
                                    l = e.type,
                                    u = e.updateQueue;
                                if (e.updateQueue = null, null !== u) try {
                                    "input" === l && "radio" === o.type && null != o.name && $(i, o), xe(l, s);
                                    var c = xe(l, o);
                                    for (s = 0; s < u.length; s += 2) {
                                        var f = u[s],
                                            d = u[s + 1];
                                        "style" === f ? me(i, d) : "dangerouslySetInnerHTML" === f ? fe(i, d) : "children" === f ? de(i, d) : x(i, f, d, c)
                                    }
                                    switch (l) {
                                        case "input":
                                            Q(i, o);
                                            break;
                                        case "textarea":
                                            ae(i, o);
                                            break;
                                        case "select":
                                            var h = i._wrapperState.wasMultiple;
                                            i._wrapperState.wasMultiple = !!o.multiple;
                                            var p = o.value;
                                            null != p ? ne(i, !!o.multiple, p, !1) : h !== !!o.multiple && (null != o.defaultValue ? ne(i, !!o.multiple, o.defaultValue, !0) : ne(i, !!o.multiple, o.multiple ? [] : "", !1))
                                    }
                                    i[hi] = o
                                } catch (m) {
                                    Mu(e, e.return, m)
                                }
                            }
                            break;
                        case 6:
                            if (vl(t, e), gl(e), 4 & r) {
                                if (null === e.stateNode) throw Error(a(162));
                                i = e.stateNode, o = e.memoizedProps;
                                try {
                                    i.nodeValue = o
                                } catch (m) {
                                    Mu(e, e.return, m)
                                }
                            }
                            break;
                        case 3:
                            if (vl(t, e), gl(e), 4 & r && null !== n && n.memoizedState.isDehydrated) try {
                                Vt(t.containerInfo)
                            } catch (m) {
                                Mu(e, e.return, m)
                            }
                            break;
                        case 4:
                        default:
                            vl(t, e), gl(e);
                            break;
                        case 13:
                            vl(t, e), gl(e), 8192 & (i = e.child).flags && (o = null !== i.memoizedState, i.stateNode.isHidden = o, !o || null !== i.alternate && null !== i.alternate.memoizedState || (Hl = $e())), 4 & r && pl(e);
                            break;
                        case 22:
                            if (f = null !== n && null !== n.memoizedState, 1 & e.mode ? (Js = (c = Js) || f, vl(t, e), Js = c) : vl(t, e), gl(e), 8192 & r) {
                                if (c = null !== e.memoizedState, (e.stateNode.isHidden = c) && !f && 0 !== (1 & e.mode))
                                    for (Qs = e, f = e.child; null !== f;) {
                                        for (d = Qs = f; null !== Qs;) {
                                            switch (p = (h = Qs).child, h.tag) {
                                                case 0:
                                                case 11:
                                                case 14:
                                                case 15:
                                                    nl(4, h, h.return);
                                                    break;
                                                case 1:
                                                    Ks(h, h.return);
                                                    var v = h.stateNode;
                                                    if ("function" === typeof v.componentWillUnmount) {
                                                        r = h, n = h.return;
                                                        try {
                                                            t = r, v.props = t.memoizedProps, v.state = t.memoizedState, v.componentWillUnmount()
                                                        } catch (m) {
                                                            Mu(r, n, m)
                                                        }
                                                    }
                                                    break;
                                                case 5:
                                                    Ks(h, h.return);
                                                    break;
                                                case 22:
                                                    if (null !== h.memoizedState) {
                                                        _l(d);
                                                        continue
                                                    }
                                            }
                                            null !== p ? (p.return = h, Qs = p) : _l(d)
                                        }
                                        f = f.sibling
                                    }
                                e: for (f = null, d = e;;) {
                                    if (5 === d.tag) {
                                        if (null === f) {
                                            f = d;
                                            try {
                                                i = d.stateNode, c ? "function" === typeof(o = i.style).setProperty ? o.setProperty("display", "none", "important") : o.display = "none" : (l = d.stateNode, s = void 0 !== (u = d.memoizedProps.style) && null !== u && u.hasOwnProperty("display") ? u.display : null, l.style.display = ve("display", s))
                                            } catch (m) {
                                                Mu(e, e.return, m)
                                            }
                                        }
                                    } else if (6 === d.tag) {
                                        if (null === f) try {
                                            d.stateNode.nodeValue = c ? "" : d.memoizedProps
                                        } catch (m) {
                                            Mu(e, e.return, m)
                                        }
                                    } else if ((22 !== d.tag && 23 !== d.tag || null === d.memoizedState || d === e) && null !== d.child) {
                                        d.child.return = d, d = d.child;
                                        continue
                                    }
                                    if (d === e) break e;
                                    for (; null === d.sibling;) {
                                        if (null === d.return || d.return === e) break e;
                                        f === d && (f = null), d = d.return
                                    }
                                    f === d && (f = null), d.sibling.return = d.return, d = d.sibling
                                }
                            }
                            break;
                        case 19:
                            vl(t, e), gl(e), 4 & r && pl(e);
                        case 21:
                    }
                }

                function gl(e) {
                    var t = e.flags;
                    if (2 & t) {
                        try {
                            e: {
                                for (var n = e.return; null !== n;) {
                                    if (ol(n)) {
                                        var r = n;
                                        break e
                                    }
                                    n = n.return
                                }
                                throw Error(a(160))
                            }
                            switch (r.tag) {
                                case 5:
                                    var i = r.stateNode;
                                    32 & r.flags && (de(i, ""), r.flags &= -33), ul(e, sl(e), i);
                                    break;
                                case 3:
                                case 4:
                                    var o = r.stateNode.containerInfo;
                                    ll(e, sl(e), o);
                                    break;
                                default:
                                    throw Error(a(161))
                            }
                        }
                        catch (s) {
                            Mu(e, e.return, s)
                        }
                        e.flags &= -3
                    }
                    4096 & t && (e.flags &= -4097)
                }

                function yl(e, t, n) {
                    Qs = e, xl(e, t, n)
                }

                function xl(e, t, n) {
                    for (var r = 0 !== (1 & e.mode); null !== Qs;) {
                        var i = Qs,
                            a = i.child;
                        if (22 === i.tag && r) {
                            var o = null !== i.memoizedState || Zs;
                            if (!o) {
                                var s = i.alternate,
                                    l = null !== s && null !== s.memoizedState || Js;
                                s = Zs;
                                var u = Js;
                                if (Zs = o, (Js = l) && !u)
                                    for (Qs = i; null !== Qs;) l = (o = Qs).child, 22 === o.tag && null !== o.memoizedState ? wl(i) : null !== l ? (l.return = o, Qs = l) : wl(i);
                                for (; null !== a;) Qs = a, xl(a, t, n), a = a.sibling;
                                Qs = i, Zs = s, Js = u
                            }
                            bl(e)
                        } else 0 !== (8772 & i.subtreeFlags) && null !== a ? (a.return = i, Qs = a) : bl(e)
                    }
                }

                function bl(e) {
                    for (; null !== Qs;) {
                        var t = Qs;
                        if (0 !== (8772 & t.flags)) {
                            var n = t.alternate;
                            try {
                                if (0 !== (8772 & t.flags)) switch (t.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        Js || rl(5, t);
                                        break;
                                    case 1:
                                        var r = t.stateNode;
                                        if (4 & t.flags && !Js)
                                            if (null === n) r.componentDidMount();
                                            else {
                                                var i = t.elementType === t.type ? n.memoizedProps : ma(t.type, n.memoizedProps);
                                                r.componentDidUpdate(i, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate)
                                            }
                                        var o = t.updateQueue;
                                        null !== o && Fa(t, o, r);
                                        break;
                                    case 3:
                                        var s = t.updateQueue;
                                        if (null !== s) {
                                            if (n = null, null !== t.child) switch (t.child.tag) {
                                                case 5:
                                                case 1:
                                                    n = t.child.stateNode
                                            }
                                            Fa(t, s, n)
                                        }
                                        break;
                                    case 5:
                                        var l = t.stateNode;
                                        if (null === n && 4 & t.flags) {
                                            n = l;
                                            var u = t.memoizedProps;
                                            switch (t.type) {
                                                case "button":
                                                case "input":
                                                case "select":
                                                case "textarea":
                                                    u.autoFocus && n.focus();
                                                    break;
                                                case "img":
                                                    u.src && (n.src = u.src)
                                            }
                                        }
                                        break;
                                    case 6:
                                    case 4:
                                    case 12:
                                    case 19:
                                    case 17:
                                    case 21:
                                    case 22:
                                    case 23:
                                    case 25:
                                        break;
                                    case 13:
                                        if (null === t.memoizedState) {
                                            var c = t.alternate;
                                            if (null !== c) {
                                                var f = c.memoizedState;
                                                if (null !== f) {
                                                    var d = f.dehydrated;
                                                    null !== d && Vt(d)
                                                }
                                            }
                                        }
                                        break;
                                    default:
                                        throw Error(a(163))
                                }
                                Js || 512 & t.flags && il(t)
                            } catch (h) {
                                Mu(t, t.return, h)
                            }
                        }
                        if (t === e) {
                            Qs = null;
                            break
                        }
                        if (null !== (n = t.sibling)) {
                            n.return = t.return, Qs = n;
                            break
                        }
                        Qs = t.return
                    }
                }

                function _l(e) {
                    for (; null !== Qs;) {
                        var t = Qs;
                        if (t === e) {
                            Qs = null;
                            break
                        }
                        var n = t.sibling;
                        if (null !== n) {
                            n.return = t.return, Qs = n;
                            break
                        }
                        Qs = t.return
                    }
                }

                function wl(e) {
                    for (; null !== Qs;) {
                        var t = Qs;
                        try {
                            switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    var n = t.return;
                                    try {
                                        rl(4, t)
                                    } catch (l) {
                                        Mu(t, n, l)
                                    }
                                    break;
                                case 1:
                                    var r = t.stateNode;
                                    if ("function" === typeof r.componentDidMount) {
                                        var i = t.return;
                                        try {
                                            r.componentDidMount()
                                        } catch (l) {
                                            Mu(t, i, l)
                                        }
                                    }
                                    var a = t.return;
                                    try {
                                        il(t)
                                    } catch (l) {
                                        Mu(t, a, l)
                                    }
                                    break;
                                case 5:
                                    var o = t.return;
                                    try {
                                        il(t)
                                    } catch (l) {
                                        Mu(t, o, l)
                                    }
                            }
                        } catch (l) {
                            Mu(t, t.return, l)
                        }
                        if (t === e) {
                            Qs = null;
                            break
                        }
                        var s = t.sibling;
                        if (null !== s) {
                            s.return = t.return, Qs = s;
                            break
                        }
                        Qs = t.return
                    }
                }
                var Sl, Ml = Math.ceil,
                    kl = b.ReactCurrentDispatcher,
                    El = b.ReactCurrentOwner,
                    Tl = b.ReactCurrentBatchConfig,
                    Ll = 0,
                    Al = null,
                    Cl = null,
                    Pl = 0,
                    Rl = 0,
                    Nl = Mi(0),
                    Il = 0,
                    zl = null,
                    Ol = 0,
                    Dl = 0,
                    Fl = 0,
                    Bl = null,
                    Ul = null,
                    Hl = 0,
                    Vl = 1 / 0,
                    Gl = null,
                    Wl = !1,
                    jl = null,
                    ql = null,
                    Xl = !1,
                    Yl = null,
                    Zl = 0,
                    Jl = 0,
                    $l = null,
                    Ql = -1,
                    Kl = 0;

                function eu() {
                    return 0 !== (6 & Ll) ? $e() : -1 !== Ql ? Ql : Ql = $e()
                }

                function tu(e) {
                    return 0 === (1 & e.mode) ? 1 : 0 !== (2 & Ll) && 0 !== Pl ? Pl & -Pl : null !== va.transition ? (0 === Kl && (Kl = vt()), Kl) : 0 !== (e = xt) ? e : e = void 0 === (e = window.event) ? 16 : Jt(e.type)
                }

                function nu(e, t, n, r) {
                    if (50 < Jl) throw Jl = 0, $l = null, Error(a(185));
                    gt(e, n, r), 0 !== (2 & Ll) && e === Al || (e === Al && (0 === (2 & Ll) && (Dl |= n), 4 === Il && su(e, Pl)), ru(e, r), 1 === n && 0 === Ll && 0 === (1 & t.mode) && (Vl = $e() + 500, Bi && Vi()))
                }

                function ru(e, t) {
                    var n = e.callbackNode;
                    ! function(e, t) {
                        for (var n = e.suspendedLanes, r = e.pingedLanes, i = e.expirationTimes, a = e.pendingLanes; 0 < a;) {
                            var o = 31 - ot(a),
                                s = 1 << o,
                                l = i[o]; - 1 === l ? 0 !== (s & n) && 0 === (s & r) || (i[o] = ht(s, t)) : l <= t && (e.expiredLanes |= s), a &= ~s
                        }
                    }(e, t);
                    var r = dt(e, e === Al ? Pl : 0);
                    if (0 === r) null !== n && Ye(n), e.callbackNode = null, e.callbackPriority = 0;
                    else if (t = r & -r, e.callbackPriority !== t) {
                        if (null != n && Ye(n), 1 === t) 0 === e.tag ? function(e) {
                            Bi = !0, Hi(e)
                        }(lu.bind(null, e)) : Hi(lu.bind(null, e)), oi((function() {
                            0 === (6 & Ll) && Vi()
                        })), n = null;
                        else {
                            switch (bt(r)) {
                                case 1:
                                    n = Ke;
                                    break;
                                case 4:
                                    n = et;
                                    break;
                                case 16:
                                default:
                                    n = tt;
                                    break;
                                case 536870912:
                                    n = rt
                            }
                            n = Au(n, iu.bind(null, e))
                        }
                        e.callbackPriority = t, e.callbackNode = n
                    }
                }

                function iu(e, t) {
                    if (Ql = -1, Kl = 0, 0 !== (6 & Ll)) throw Error(a(327));
                    var n = e.callbackNode;
                    if (wu() && e.callbackNode !== n) return null;
                    var r = dt(e, e === Al ? Pl : 0);
                    if (0 === r) return null;
                    if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = mu(e, r);
                    else {
                        t = r;
                        var i = Ll;
                        Ll |= 2;
                        var o = pu();
                        for (Al === e && Pl === t || (Gl = null, Vl = $e() + 500, du(e, t));;) try {
                            yu();
                            break
                        } catch (l) {
                            hu(e, l)
                        }
                        _a(), kl.current = o, Ll = i, null !== Cl ? t = 0 : (Al = null, Pl = 0, t = Il)
                    }
                    if (0 !== t) {
                        if (2 === t && (0 !== (i = pt(e)) && (r = i, t = au(e, i))), 1 === t) throw n = zl, du(e, 0), su(e, r), ru(e, $e()), n;
                        if (6 === t) su(e, r);
                        else {
                            if (i = e.current.alternate, 0 === (30 & r) && ! function(e) {
                                    for (var t = e;;) {
                                        if (16384 & t.flags) {
                                            var n = t.updateQueue;
                                            if (null !== n && null !== (n = n.stores))
                                                for (var r = 0; r < n.length; r++) {
                                                    var i = n[r],
                                                        a = i.getSnapshot;
                                                    i = i.value;
                                                    try {
                                                        if (!sr(a(), i)) return !1
                                                    } catch (s) {
                                                        return !1
                                                    }
                                                }
                                        }
                                        if (n = t.child, 16384 & t.subtreeFlags && null !== n) n.return = t, t = n;
                                        else {
                                            if (t === e) break;
                                            for (; null === t.sibling;) {
                                                if (null === t.return || t.return === e) return !0;
                                                t = t.return
                                            }
                                            t.sibling.return = t.return, t = t.sibling
                                        }
                                    }
                                    return !0
                                }(i) && (2 === (t = mu(e, r)) && (0 !== (o = pt(e)) && (r = o, t = au(e, o))), 1 === t)) throw n = zl, du(e, 0), su(e, r), ru(e, $e()), n;
                            switch (e.finishedWork = i, e.finishedLanes = r, t) {
                                case 0:
                                case 1:
                                    throw Error(a(345));
                                case 2:
                                case 5:
                                    _u(e, Ul, Gl);
                                    break;
                                case 3:
                                    if (su(e, r), (130023424 & r) === r && 10 < (t = Hl + 500 - $e())) {
                                        if (0 !== dt(e, 0)) break;
                                        if (((i = e.suspendedLanes) & r) !== r) {
                                            eu(), e.pingedLanes |= e.suspendedLanes & i;
                                            break
                                        }
                                        e.timeoutHandle = ri(_u.bind(null, e, Ul, Gl), t);
                                        break
                                    }
                                    _u(e, Ul, Gl);
                                    break;
                                case 4:
                                    if (su(e, r), (4194240 & r) === r) break;
                                    for (t = e.eventTimes, i = -1; 0 < r;) {
                                        var s = 31 - ot(r);
                                        o = 1 << s, (s = t[s]) > i && (i = s), r &= ~o
                                    }
                                    if (r = i, 10 < (r = (120 > (r = $e() - r) ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * Ml(r / 1960)) - r)) {
                                        e.timeoutHandle = ri(_u.bind(null, e, Ul, Gl), r);
                                        break
                                    }
                                    _u(e, Ul, Gl);
                                    break;
                                default:
                                    throw Error(a(329))
                            }
                        }
                    }
                    return ru(e, $e()), e.callbackNode === n ? iu.bind(null, e) : null
                }

                function au(e, t) {
                    var n = Bl;
                    return e.current.memoizedState.isDehydrated && (du(e, t).flags |= 256), 2 !== (e = mu(e, t)) && (t = Ul, Ul = n, null !== t && ou(t)), e
                }

                function ou(e) {
                    null === Ul ? Ul = e : Ul.push.apply(Ul, e)
                }

                function su(e, t) {
                    for (t &= ~Fl, t &= ~Dl, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t;) {
                        var n = 31 - ot(t),
                            r = 1 << n;
                        e[n] = -1, t &= ~r
                    }
                }

                function lu(e) {
                    if (0 !== (6 & Ll)) throw Error(a(327));
                    wu();
                    var t = dt(e, 0);
                    if (0 === (1 & t)) return ru(e, $e()), null;
                    var n = mu(e, t);
                    if (0 !== e.tag && 2 === n) {
                        var r = pt(e);
                        0 !== r && (t = r, n = au(e, r))
                    }
                    if (1 === n) throw n = zl, du(e, 0), su(e, t), ru(e, $e()), n;
                    if (6 === n) throw Error(a(345));
                    return e.finishedWork = e.current.alternate, e.finishedLanes = t, _u(e, Ul, Gl), ru(e, $e()), null
                }

                function uu(e, t) {
                    var n = Ll;
                    Ll |= 1;
                    try {
                        return e(t)
                    } finally {
                        0 === (Ll = n) && (Vl = $e() + 500, Bi && Vi())
                    }
                }

                function cu(e) {
                    null !== Yl && 0 === Yl.tag && 0 === (6 & Ll) && wu();
                    var t = Ll;
                    Ll |= 1;
                    var n = Tl.transition,
                        r = xt;
                    try {
                        if (Tl.transition = null, xt = 1, e) return e()
                    } finally {
                        xt = r, Tl.transition = n, 0 === (6 & (Ll = t)) && Vi()
                    }
                }

                function fu() {
                    Rl = Nl.current, ki(Nl)
                }

                function du(e, t) {
                    e.finishedWork = null, e.finishedLanes = 0;
                    var n = e.timeoutHandle;
                    if (-1 !== n && (e.timeoutHandle = -1, ii(n)), null !== Cl)
                        for (n = Cl.return; null !== n;) {
                            var r = n;
                            switch (ta(r), r.tag) {
                                case 1:
                                    null !== (r = r.type.childContextTypes) && void 0 !== r && Ni();
                                    break;
                                case 3:
                                    io(), ki(Ai), ki(Li), co();
                                    break;
                                case 5:
                                    oo(r);
                                    break;
                                case 4:
                                    io();
                                    break;
                                case 13:
                                case 19:
                                    ki(so);
                                    break;
                                case 10:
                                    wa(r.type._context);
                                    break;
                                case 22:
                                case 23:
                                    fu()
                            }
                            n = n.return
                        }
                    if (Al = e, Cl = e = Nu(e.current, null), Pl = Rl = t, Il = 0, zl = null, Fl = Dl = Ol = 0, Ul = Bl = null, null !== Ea) {
                        for (t = 0; t < Ea.length; t++)
                            if (null !== (r = (n = Ea[t]).interleaved)) {
                                n.interleaved = null;
                                var i = r.next,
                                    a = n.pending;
                                if (null !== a) {
                                    var o = a.next;
                                    a.next = i, r.next = o
                                }
                                n.pending = r
                            }
                        Ea = null
                    }
                    return e
                }

                function hu(e, t) {
                    for (;;) {
                        var n = Cl;
                        try {
                            if (_a(), fo.current = os, yo) {
                                for (var r = vo.memoizedState; null !== r;) {
                                    var i = r.queue;
                                    null !== i && (i.pending = null), r = r.next
                                }
                                yo = !1
                            }
                            if (po = 0, go = mo = vo = null, xo = !1, bo = 0, El.current = null, null === n || null === n.return) {
                                Il = 1, zl = t, Cl = null;
                                break
                            }
                            e: {
                                var o = e,
                                    s = n.return,
                                    l = n,
                                    u = t;
                                if (t = Pl, l.flags |= 32768, null !== u && "object" === typeof u && "function" === typeof u.then) {
                                    var c = u,
                                        f = l,
                                        d = f.tag;
                                    if (0 === (1 & f.mode) && (0 === d || 11 === d || 15 === d)) {
                                        var h = f.alternate;
                                        h ? (f.updateQueue = h.updateQueue, f.memoizedState = h.memoizedState, f.lanes = h.lanes) : (f.updateQueue = null, f.memoizedState = null)
                                    }
                                    var p = gs(s);
                                    if (null !== p) {
                                        p.flags &= -257, ys(p, s, l, 0, t), 1 & p.mode && ms(o, c, t), u = c;
                                        var v = (t = p).updateQueue;
                                        if (null === v) {
                                            var m = new Set;
                                            m.add(u), t.updateQueue = m
                                        } else v.add(u);
                                        break e
                                    }
                                    if (0 === (1 & t)) {
                                        ms(o, c, t), vu();
                                        break e
                                    }
                                    u = Error(a(426))
                                } else if (ia && 1 & l.mode) {
                                    var g = gs(s);
                                    if (null !== g) {
                                        0 === (65536 & g.flags) && (g.flags |= 256), ys(g, s, l, 0, t), pa(cs(u, l));
                                        break e
                                    }
                                }
                                o = u = cs(u, l),
                                4 !== Il && (Il = 2),
                                null === Bl ? Bl = [o] : Bl.push(o),
                                o = s;do {
                                    switch (o.tag) {
                                        case 3:
                                            o.flags |= 65536, t &= -t, o.lanes |= t, Oa(o, ps(0, u, t));
                                            break e;
                                        case 1:
                                            l = u;
                                            var y = o.type,
                                                x = o.stateNode;
                                            if (0 === (128 & o.flags) && ("function" === typeof y.getDerivedStateFromError || null !== x && "function" === typeof x.componentDidCatch && (null === ql || !ql.has(x)))) {
                                                o.flags |= 65536, t &= -t, o.lanes |= t, Oa(o, vs(o, l, t));
                                                break e
                                            }
                                    }
                                    o = o.return
                                } while (null !== o)
                            }
                            bu(n)
                        } catch (b) {
                            t = b, Cl === n && null !== n && (Cl = n = n.return);
                            continue
                        }
                        break
                    }
                }

                function pu() {
                    var e = kl.current;
                    return kl.current = os, null === e ? os : e
                }

                function vu() {
                    0 !== Il && 3 !== Il && 2 !== Il || (Il = 4), null === Al || 0 === (268435455 & Ol) && 0 === (268435455 & Dl) || su(Al, Pl)
                }

                function mu(e, t) {
                    var n = Ll;
                    Ll |= 2;
                    var r = pu();
                    for (Al === e && Pl === t || (Gl = null, du(e, t));;) try {
                        gu();
                        break
                    } catch (i) {
                        hu(e, i)
                    }
                    if (_a(), Ll = n, kl.current = r, null !== Cl) throw Error(a(261));
                    return Al = null, Pl = 0, Il
                }

                function gu() {
                    for (; null !== Cl;) xu(Cl)
                }

                function yu() {
                    for (; null !== Cl && !Ze();) xu(Cl)
                }

                function xu(e) {
                    var t = Sl(e.alternate, e, Rl);
                    e.memoizedProps = e.pendingProps, null === t ? bu(e) : Cl = t, El.current = null
                }

                function bu(e) {
                    var t = e;
                    do {
                        var n = t.alternate;
                        if (e = t.return, 0 === (32768 & t.flags)) {
                            if (null !== (n = Xs(n, t, Rl))) return void(Cl = n)
                        } else {
                            if (null !== (n = Ys(n, t))) return n.flags &= 32767, void(Cl = n);
                            if (null === e) return Il = 6, void(Cl = null);
                            e.flags |= 32768, e.subtreeFlags = 0, e.deletions = null
                        }
                        if (null !== (t = t.sibling)) return void(Cl = t);
                        Cl = t = e
                    } while (null !== t);
                    0 === Il && (Il = 5)
                }

                function _u(e, t, n) {
                    var r = xt,
                        i = Tl.transition;
                    try {
                        Tl.transition = null, xt = 1,
                            function(e, t, n, r) {
                                do {
                                    wu()
                                } while (null !== Yl);
                                if (0 !== (6 & Ll)) throw Error(a(327));
                                n = e.finishedWork;
                                var i = e.finishedLanes;
                                if (null === n) return null;
                                if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(a(177));
                                e.callbackNode = null, e.callbackPriority = 0;
                                var o = n.lanes | n.childLanes;
                                if (function(e, t) {
                                        var n = e.pendingLanes & ~t;
                                        e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.expiredLanes &= t, e.mutableReadLanes &= t, e.entangledLanes &= t, t = e.entanglements;
                                        var r = e.eventTimes;
                                        for (e = e.expirationTimes; 0 < n;) {
                                            var i = 31 - ot(n),
                                                a = 1 << i;
                                            t[i] = 0, r[i] = -1, e[i] = -1, n &= ~a
                                        }
                                    }(e, o), e === Al && (Cl = Al = null, Pl = 0), 0 === (2064 & n.subtreeFlags) && 0 === (2064 & n.flags) || Xl || (Xl = !0, Au(tt, (function() {
                                        return wu(), null
                                    }))), o = 0 !== (15990 & n.flags), 0 !== (15990 & n.subtreeFlags) || o) {
                                    o = Tl.transition, Tl.transition = null;
                                    var s = xt;
                                    xt = 1;
                                    var l = Ll;
                                    Ll |= 4, El.current = null,
                                        function(e, t) {
                                            if (ei = Wt, hr(e = dr())) {
                                                if ("selectionStart" in e) var n = {
                                                    start: e.selectionStart,
                                                    end: e.selectionEnd
                                                };
                                                else e: {
                                                    var r = (n = (n = e.ownerDocument) && n.defaultView || window).getSelection && n.getSelection();
                                                    if (r && 0 !== r.rangeCount) {
                                                        n = r.anchorNode;
                                                        var i = r.anchorOffset,
                                                            o = r.focusNode;
                                                        r = r.focusOffset;
                                                        try {
                                                            n.nodeType, o.nodeType
                                                        } catch (_) {
                                                            n = null;
                                                            break e
                                                        }
                                                        var s = 0,
                                                            l = -1,
                                                            u = -1,
                                                            c = 0,
                                                            f = 0,
                                                            d = e,
                                                            h = null;
                                                        t: for (;;) {
                                                            for (var p; d !== n || 0 !== i && 3 !== d.nodeType || (l = s + i), d !== o || 0 !== r && 3 !== d.nodeType || (u = s + r), 3 === d.nodeType && (s += d.nodeValue.length), null !== (p = d.firstChild);) h = d, d = p;
                                                            for (;;) {
                                                                if (d === e) break t;
                                                                if (h === n && ++c === i && (l = s), h === o && ++f === r && (u = s), null !== (p = d.nextSibling)) break;
                                                                h = (d = h).parentNode
                                                            }
                                                            d = p
                                                        }
                                                        n = -1 === l || -1 === u ? null : {
                                                            start: l,
                                                            end: u
                                                        }
                                                    } else n = null
                                                }
                                                n = n || {
                                                    start: 0,
                                                    end: 0
                                                }
                                            } else n = null;
                                            for (ti = {
                                                    focusedElem: e,
                                                    selectionRange: n
                                                }, Wt = !1, Qs = t; null !== Qs;)
                                                if (e = (t = Qs).child, 0 !== (1028 & t.subtreeFlags) && null !== e) e.return = t, Qs = e;
                                                else
                                                    for (; null !== Qs;) {
                                                        t = Qs;
                                                        try {
                                                            var v = t.alternate;
                                                            if (0 !== (1024 & t.flags)) switch (t.tag) {
                                                                case 0:
                                                                case 11:
                                                                case 15:
                                                                case 5:
                                                                case 6:
                                                                case 4:
                                                                case 17:
                                                                    break;
                                                                case 1:
                                                                    if (null !== v) {
                                                                        var m = v.memoizedProps,
                                                                            g = v.memoizedState,
                                                                            y = t.stateNode,
                                                                            x = y.getSnapshotBeforeUpdate(t.elementType === t.type ? m : ma(t.type, m), g);
                                                                        y.__reactInternalSnapshotBeforeUpdate = x
                                                                    }
                                                                    break;
                                                                case 3:
                                                                    var b = t.stateNode.containerInfo;
                                                                    1 === b.nodeType ? b.textContent = "" : 9 === b.nodeType && b.documentElement && b.removeChild(b.documentElement);
                                                                    break;
                                                                default:
                                                                    throw Error(a(163))
                                                            }
                                                        } catch (_) {
                                                            Mu(t, t.return, _)
                                                        }
                                                        if (null !== (e = t.sibling)) {
                                                            e.return = t.return, Qs = e;
                                                            break
                                                        }
                                                        Qs = t.return
                                                    }
                                            v = tl, tl = !1
                                        }(e, n), ml(n, e), pr(ti), Wt = !!ei, ti = ei = null, e.current = n, yl(n, e, i), Je(), Ll = l, xt = s, Tl.transition = o
                                } else e.current = n;
                                if (Xl && (Xl = !1, Yl = e, Zl = i), 0 === (o = e.pendingLanes) && (ql = null), function(e) {
                                        if (at && "function" === typeof at.onCommitFiberRoot) try {
                                            at.onCommitFiberRoot(it, e, void 0, 128 === (128 & e.current.flags))
                                        } catch (t) {}
                                    }(n.stateNode), ru(e, $e()), null !== t)
                                    for (r = e.onRecoverableError, n = 0; n < t.length; n++) r((i = t[n]).value, {
                                        componentStack: i.stack,
                                        digest: i.digest
                                    });
                                if (Wl) throw Wl = !1, e = jl, jl = null, e;
                                0 !== (1 & Zl) && 0 !== e.tag && wu(), 0 !== (1 & (o = e.pendingLanes)) ? e === $l ? Jl++ : (Jl = 0, $l = e) : Jl = 0, Vi()
                            }(e, t, n, r)
                    } finally {
                        Tl.transition = i, xt = r
                    }
                    return null
                }

                function wu() {
                    if (null !== Yl) {
                        var e = bt(Zl),
                            t = Tl.transition,
                            n = xt;
                        try {
                            if (Tl.transition = null, xt = 16 > e ? 16 : e, null === Yl) var r = !1;
                            else {
                                if (e = Yl, Yl = null, Zl = 0, 0 !== (6 & Ll)) throw Error(a(331));
                                var i = Ll;
                                for (Ll |= 4, Qs = e.current; null !== Qs;) {
                                    var o = Qs,
                                        s = o.child;
                                    if (0 !== (16 & Qs.flags)) {
                                        var l = o.deletions;
                                        if (null !== l) {
                                            for (var u = 0; u < l.length; u++) {
                                                var c = l[u];
                                                for (Qs = c; null !== Qs;) {
                                                    var f = Qs;
                                                    switch (f.tag) {
                                                        case 0:
                                                        case 11:
                                                        case 15:
                                                            nl(8, f, o)
                                                    }
                                                    var d = f.child;
                                                    if (null !== d) d.return = f, Qs = d;
                                                    else
                                                        for (; null !== Qs;) {
                                                            var h = (f = Qs).sibling,
                                                                p = f.return;
                                                            if (al(f), f === c) {
                                                                Qs = null;
                                                                break
                                                            }
                                                            if (null !== h) {
                                                                h.return = p, Qs = h;
                                                                break
                                                            }
                                                            Qs = p
                                                        }
                                                }
                                            }
                                            var v = o.alternate;
                                            if (null !== v) {
                                                var m = v.child;
                                                if (null !== m) {
                                                    v.child = null;
                                                    do {
                                                        var g = m.sibling;
                                                        m.sibling = null, m = g
                                                    } while (null !== m)
                                                }
                                            }
                                            Qs = o
                                        }
                                    }
                                    if (0 !== (2064 & o.subtreeFlags) && null !== s) s.return = o, Qs = s;
                                    else e: for (; null !== Qs;) {
                                        if (0 !== (2048 & (o = Qs).flags)) switch (o.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                nl(9, o, o.return)
                                        }
                                        var y = o.sibling;
                                        if (null !== y) {
                                            y.return = o.return, Qs = y;
                                            break e
                                        }
                                        Qs = o.return
                                    }
                                }
                                var x = e.current;
                                for (Qs = x; null !== Qs;) {
                                    var b = (s = Qs).child;
                                    if (0 !== (2064 & s.subtreeFlags) && null !== b) b.return = s, Qs = b;
                                    else e: for (s = x; null !== Qs;) {
                                        if (0 !== (2048 & (l = Qs).flags)) try {
                                            switch (l.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    rl(9, l)
                                            }
                                        } catch (w) {
                                            Mu(l, l.return, w)
                                        }
                                        if (l === s) {
                                            Qs = null;
                                            break e
                                        }
                                        var _ = l.sibling;
                                        if (null !== _) {
                                            _.return = l.return, Qs = _;
                                            break e
                                        }
                                        Qs = l.return
                                    }
                                }
                                if (Ll = i, Vi(), at && "function" === typeof at.onPostCommitFiberRoot) try {
                                    at.onPostCommitFiberRoot(it, e)
                                } catch (w) {}
                                r = !0
                            }
                            return r
                        } finally {
                            xt = n, Tl.transition = t
                        }
                    }
                    return !1
                }

                function Su(e, t, n) {
                    e = Ia(e, t = ps(0, t = cs(n, t), 1), 1), t = eu(), null !== e && (gt(e, 1, t), ru(e, t))
                }

                function Mu(e, t, n) {
                    if (3 === e.tag) Su(e, e, n);
                    else
                        for (; null !== t;) {
                            if (3 === t.tag) {
                                Su(t, e, n);
                                break
                            }
                            if (1 === t.tag) {
                                var r = t.stateNode;
                                if ("function" === typeof t.type.getDerivedStateFromError || "function" === typeof r.componentDidCatch && (null === ql || !ql.has(r))) {
                                    t = Ia(t, e = vs(t, e = cs(n, e), 1), 1), e = eu(), null !== t && (gt(t, 1, e), ru(t, e));
                                    break
                                }
                            }
                            t = t.return
                        }
                }

                function ku(e, t, n) {
                    var r = e.pingCache;
                    null !== r && r.delete(t), t = eu(), e.pingedLanes |= e.suspendedLanes & n, Al === e && (Pl & n) === n && (4 === Il || 3 === Il && (130023424 & Pl) === Pl && 500 > $e() - Hl ? du(e, 0) : Fl |= n), ru(e, t)
                }

                function Eu(e, t) {
                    0 === t && (0 === (1 & e.mode) ? t = 1 : (t = ct, 0 === (130023424 & (ct <<= 1)) && (ct = 4194304)));
                    var n = eu();
                    null !== (e = Aa(e, t)) && (gt(e, t, n), ru(e, n))
                }

                function Tu(e) {
                    var t = e.memoizedState,
                        n = 0;
                    null !== t && (n = t.retryLane), Eu(e, n)
                }

                function Lu(e, t) {
                    var n = 0;
                    switch (e.tag) {
                        case 13:
                            var r = e.stateNode,
                                i = e.memoizedState;
                            null !== i && (n = i.retryLane);
                            break;
                        case 19:
                            r = e.stateNode;
                            break;
                        default:
                            throw Error(a(314))
                    }
                    null !== r && r.delete(t), Eu(e, n)
                }

                function Au(e, t) {
                    return Xe(e, t)
                }

                function Cu(e, t, n, r) {
                    this.tag = e, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = t, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = r, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null
                }

                function Pu(e, t, n, r) {
                    return new Cu(e, t, n, r)
                }

                function Ru(e) {
                    return !(!(e = e.prototype) || !e.isReactComponent)
                }

                function Nu(e, t) {
                    var n = e.alternate;
                    return null === n ? ((n = Pu(e.tag, t, e.key, e.mode)).elementType = e.elementType, n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, n.type = e.type, n.flags = 0, n.subtreeFlags = 0, n.deletions = null), n.flags = 14680064 & e.flags, n.childLanes = e.childLanes, n.lanes = e.lanes, n.child = e.child, n.memoizedProps = e.memoizedProps, n.memoizedState = e.memoizedState, n.updateQueue = e.updateQueue, t = e.dependencies, n.dependencies = null === t ? null : {
                        lanes: t.lanes,
                        firstContext: t.firstContext
                    }, n.sibling = e.sibling, n.index = e.index, n.ref = e.ref, n
                }

                function Iu(e, t, n, r, i, o) {
                    var s = 2;
                    if (r = e, "function" === typeof e) Ru(e) && (s = 1);
                    else if ("string" === typeof e) s = 5;
                    else e: switch (e) {
                        case S:
                            return zu(n.children, i, o, t);
                        case M:
                            s = 8, i |= 8;
                            break;
                        case k:
                            return (e = Pu(12, n, t, 2 | i)).elementType = k, e.lanes = o, e;
                        case A:
                            return (e = Pu(13, n, t, i)).elementType = A, e.lanes = o, e;
                        case C:
                            return (e = Pu(19, n, t, i)).elementType = C, e.lanes = o, e;
                        case N:
                            return Ou(n, i, o, t);
                        default:
                            if ("object" === typeof e && null !== e) switch (e.$$typeof) {
                                case E:
                                    s = 10;
                                    break e;
                                case T:
                                    s = 9;
                                    break e;
                                case L:
                                    s = 11;
                                    break e;
                                case P:
                                    s = 14;
                                    break e;
                                case R:
                                    s = 16, r = null;
                                    break e
                            }
                            throw Error(a(130, null == e ? e : typeof e, ""))
                    }
                    return (t = Pu(s, n, t, i)).elementType = e, t.type = r, t.lanes = o, t
                }

                function zu(e, t, n, r) {
                    return (e = Pu(7, e, r, t)).lanes = n, e
                }

                function Ou(e, t, n, r) {
                    return (e = Pu(22, e, r, t)).elementType = N, e.lanes = n, e.stateNode = {
                        isHidden: !1
                    }, e
                }

                function Du(e, t, n) {
                    return (e = Pu(6, e, null, t)).lanes = n, e
                }

                function Fu(e, t, n) {
                    return (t = Pu(4, null !== e.children ? e.children : [], e.key, t)).lanes = n, t.stateNode = {
                        containerInfo: e.containerInfo,
                        pendingChildren: null,
                        implementation: e.implementation
                    }, t
                }

                function Bu(e, t, n, r, i) {
                    this.tag = t, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = mt(0), this.expirationTimes = mt(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = mt(0), this.identifierPrefix = r, this.onRecoverableError = i, this.mutableSourceEagerHydrationData = null
                }

                function Uu(e, t, n, r, i, a, o, s, l) {
                    return e = new Bu(e, t, n, s, l), 1 === t ? (t = 1, !0 === a && (t |= 8)) : t = 0, a = Pu(3, null, null, t), e.current = a, a.stateNode = e, a.memoizedState = {
                        element: r,
                        isDehydrated: n,
                        cache: null,
                        transitions: null,
                        pendingSuspenseBoundaries: null
                    }, Pa(a), e
                }

                function Hu(e, t, n) {
                    var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                    return {
                        $$typeof: w,
                        key: null == r ? null : "" + r,
                        children: e,
                        containerInfo: t,
                        implementation: n
                    }
                }

                function Vu(e) {
                    if (!e) return Ti;
                    e: {
                        if (Ve(e = e._reactInternals) !== e || 1 !== e.tag) throw Error(a(170));
                        var t = e;do {
                            switch (t.tag) {
                                case 3:
                                    t = t.stateNode.context;
                                    break e;
                                case 1:
                                    if (Ri(t.type)) {
                                        t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                                        break e
                                    }
                            }
                            t = t.return
                        } while (null !== t);
                        throw Error(a(171))
                    }
                    if (1 === e.tag) {
                        var n = e.type;
                        if (Ri(n)) return zi(e, n, t)
                    }
                    return t
                }

                function Gu(e, t, n, r, i, a, o, s, l) {
                    return (e = Uu(n, r, !0, e, 0, a, 0, s, l)).context = Vu(null), n = e.current, (a = Na(r = eu(), i = tu(n))).callback = void 0 !== t && null !== t ? t : null, Ia(n, a, i), e.current.lanes = i, gt(e, i, r), ru(e, r), e
                }

                function Wu(e, t, n, r) {
                    var i = t.current,
                        a = eu(),
                        o = tu(i);
                    return n = Vu(n), null === t.context ? t.context = n : t.pendingContext = n, (t = Na(a, o)).payload = {
                        element: e
                    }, null !== (r = void 0 === r ? null : r) && (t.callback = r), null !== (e = Ia(i, t, o)) && (nu(e, i, o, a), za(e, i, o)), o
                }

                function ju(e) {
                    return (e = e.current).child ? (e.child.tag, e.child.stateNode) : null
                }

                function qu(e, t) {
                    if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
                        var n = e.retryLane;
                        e.retryLane = 0 !== n && n < t ? n : t
                    }
                }

                function Xu(e, t) {
                    qu(e, t), (e = e.alternate) && qu(e, t)
                }
                Sl = function(e, t, n) {
                    if (null !== e)
                        if (e.memoizedProps !== t.pendingProps || Ai.current) bs = !0;
                        else {
                            if (0 === (e.lanes & n) && 0 === (128 & t.flags)) return bs = !1,
                                function(e, t, n) {
                                    switch (t.tag) {
                                        case 3:
                                            Cs(t), ha();
                                            break;
                                        case 5:
                                            ao(t);
                                            break;
                                        case 1:
                                            Ri(t.type) && Oi(t);
                                            break;
                                        case 4:
                                            ro(t, t.stateNode.containerInfo);
                                            break;
                                        case 10:
                                            var r = t.type._context,
                                                i = t.memoizedProps.value;
                                            Ei(ga, r._currentValue), r._currentValue = i;
                                            break;
                                        case 13:
                                            if (null !== (r = t.memoizedState)) return null !== r.dehydrated ? (Ei(so, 1 & so.current), t.flags |= 128, null) : 0 !== (n & t.child.childLanes) ? Ds(e, t, n) : (Ei(so, 1 & so.current), null !== (e = Ws(e, t, n)) ? e.sibling : null);
                                            Ei(so, 1 & so.current);
                                            break;
                                        case 19:
                                            if (r = 0 !== (n & t.childLanes), 0 !== (128 & e.flags)) {
                                                if (r) return Vs(e, t, n);
                                                t.flags |= 128
                                            }
                                            if (null !== (i = t.memoizedState) && (i.rendering = null, i.tail = null, i.lastEffect = null), Ei(so, so.current), r) break;
                                            return null;
                                        case 22:
                                        case 23:
                                            return t.lanes = 0, ks(e, t, n)
                                    }
                                    return Ws(e, t, n)
                                }(e, t, n);
                            bs = 0 !== (131072 & e.flags)
                        }
                    else bs = !1, ia && 0 !== (1048576 & t.flags) && Ki(t, qi, t.index);
                    switch (t.lanes = 0, t.tag) {
                        case 2:
                            var r = t.type;
                            Gs(e, t), e = t.pendingProps;
                            var i = Pi(t, Li.current);
                            Ma(t, n), i = Mo(null, t, r, e, i, n);
                            var o = ko();
                            return t.flags |= 1, "object" === typeof i && null !== i && "function" === typeof i.render && void 0 === i.$$typeof ? (t.tag = 1, t.memoizedState = null, t.updateQueue = null, Ri(r) ? (o = !0, Oi(t)) : o = !1, t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null, Pa(t), i.updater = Ha, t.stateNode = i, i._reactInternals = t, ja(t, r, e, n), t = As(null, t, r, !0, o, n)) : (t.tag = 0, ia && o && ea(t), _s(null, t, i, n), t = t.child), t;
                        case 16:
                            r = t.elementType;
                            e: {
                                switch (Gs(e, t), e = t.pendingProps, r = (i = r._init)(r._payload), t.type = r, i = t.tag = function(e) {
                                    if ("function" === typeof e) return Ru(e) ? 1 : 0;
                                    if (void 0 !== e && null !== e) {
                                        if ((e = e.$$typeof) === L) return 11;
                                        if (e === P) return 14
                                    }
                                    return 2
                                }(r), e = ma(r, e), i) {
                                    case 0:
                                        t = Ts(null, t, r, e, n);
                                        break e;
                                    case 1:
                                        t = Ls(null, t, r, e, n);
                                        break e;
                                    case 11:
                                        t = ws(null, t, r, e, n);
                                        break e;
                                    case 14:
                                        t = Ss(null, t, r, ma(r.type, e), n);
                                        break e
                                }
                                throw Error(a(306, r, ""))
                            }
                            return t;
                        case 0:
                            return r = t.type, i = t.pendingProps, Ts(e, t, r, i = t.elementType === r ? i : ma(r, i), n);
                        case 1:
                            return r = t.type, i = t.pendingProps, Ls(e, t, r, i = t.elementType === r ? i : ma(r, i), n);
                        case 3:
                            e: {
                                if (Cs(t), null === e) throw Error(a(387));r = t.pendingProps,
                                i = (o = t.memoizedState).element,
                                Ra(e, t),
                                Da(t, r, null, n);
                                var s = t.memoizedState;
                                if (r = s.element, o.isDehydrated) {
                                    if (o = {
                                            element: r,
                                            isDehydrated: !1,
                                            cache: s.cache,
                                            pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
                                            transitions: s.transitions
                                        }, t.updateQueue.baseState = o, t.memoizedState = o, 256 & t.flags) {
                                        t = Ps(e, t, r, n, i = cs(Error(a(423)), t));
                                        break e
                                    }
                                    if (r !== i) {
                                        t = Ps(e, t, r, n, i = cs(Error(a(424)), t));
                                        break e
                                    }
                                    for (ra = ui(t.stateNode.containerInfo.firstChild), na = t, ia = !0, aa = null, n = $a(t, null, r, n), t.child = n; n;) n.flags = -3 & n.flags | 4096, n = n.sibling
                                } else {
                                    if (ha(), r === i) {
                                        t = Ws(e, t, n);
                                        break e
                                    }
                                    _s(e, t, r, n)
                                }
                                t = t.child
                            }
                            return t;
                        case 5:
                            return ao(t), null === e && ua(t), r = t.type, i = t.pendingProps, o = null !== e ? e.memoizedProps : null, s = i.children, ni(r, i) ? s = null : null !== o && ni(r, o) && (t.flags |= 32), Es(e, t), _s(e, t, s, n), t.child;
                        case 6:
                            return null === e && ua(t), null;
                        case 13:
                            return Ds(e, t, n);
                        case 4:
                            return ro(t, t.stateNode.containerInfo), r = t.pendingProps, null === e ? t.child = Ja(t, null, r, n) : _s(e, t, r, n), t.child;
                        case 11:
                            return r = t.type, i = t.pendingProps, ws(e, t, r, i = t.elementType === r ? i : ma(r, i), n);
                        case 7:
                            return _s(e, t, t.pendingProps, n), t.child;
                        case 8:
                        case 12:
                            return _s(e, t, t.pendingProps.children, n), t.child;
                        case 10:
                            e: {
                                if (r = t.type._context, i = t.pendingProps, o = t.memoizedProps, s = i.value, Ei(ga, r._currentValue), r._currentValue = s, null !== o)
                                    if (sr(o.value, s)) {
                                        if (o.children === i.children && !Ai.current) {
                                            t = Ws(e, t, n);
                                            break e
                                        }
                                    } else
                                        for (null !== (o = t.child) && (o.return = t); null !== o;) {
                                            var l = o.dependencies;
                                            if (null !== l) {
                                                s = o.child;
                                                for (var u = l.firstContext; null !== u;) {
                                                    if (u.context === r) {
                                                        if (1 === o.tag) {
                                                            (u = Na(-1, n & -n)).tag = 2;
                                                            var c = o.updateQueue;
                                                            if (null !== c) {
                                                                var f = (c = c.shared).pending;
                                                                null === f ? u.next = u : (u.next = f.next, f.next = u), c.pending = u
                                                            }
                                                        }
                                                        o.lanes |= n, null !== (u = o.alternate) && (u.lanes |= n), Sa(o.return, n, t), l.lanes |= n;
                                                        break
                                                    }
                                                    u = u.next
                                                }
                                            } else if (10 === o.tag) s = o.type === t.type ? null : o.child;
                                            else if (18 === o.tag) {
                                                if (null === (s = o.return)) throw Error(a(341));
                                                s.lanes |= n, null !== (l = s.alternate) && (l.lanes |= n), Sa(s, n, t), s = o.sibling
                                            } else s = o.child;
                                            if (null !== s) s.return = o;
                                            else
                                                for (s = o; null !== s;) {
                                                    if (s === t) {
                                                        s = null;
                                                        break
                                                    }
                                                    if (null !== (o = s.sibling)) {
                                                        o.return = s.return, s = o;
                                                        break
                                                    }
                                                    s = s.return
                                                }
                                            o = s
                                        }
                                _s(e, t, i.children, n),
                                t = t.child
                            }
                            return t;
                        case 9:
                            return i = t.type, r = t.pendingProps.children, Ma(t, n), r = r(i = ka(i)), t.flags |= 1, _s(e, t, r, n), t.child;
                        case 14:
                            return i = ma(r = t.type, t.pendingProps), Ss(e, t, r, i = ma(r.type, i), n);
                        case 15:
                            return Ms(e, t, t.type, t.pendingProps, n);
                        case 17:
                            return r = t.type, i = t.pendingProps, i = t.elementType === r ? i : ma(r, i), Gs(e, t), t.tag = 1, Ri(r) ? (e = !0, Oi(t)) : e = !1, Ma(t, n), Ga(t, r, i), ja(t, r, i, n), As(null, t, r, !0, e, n);
                        case 19:
                            return Vs(e, t, n);
                        case 22:
                            return ks(e, t, n)
                    }
                    throw Error(a(156, t.tag))
                };
                var Yu = "function" === typeof reportError ? reportError : function(e) {
                    console.error(e)
                };

                function Zu(e) {
                    this._internalRoot = e
                }

                function Ju(e) {
                    this._internalRoot = e
                }

                function $u(e) {
                    return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
                }

                function Qu(e) {
                    return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
                }

                function Ku() {}

                function ec(e, t, n, r, i) {
                    var a = n._reactRootContainer;
                    if (a) {
                        var o = a;
                        if ("function" === typeof i) {
                            var s = i;
                            i = function() {
                                var e = ju(o);
                                s.call(e)
                            }
                        }
                        Wu(t, o, e, i)
                    } else o = function(e, t, n, r, i) {
                        if (i) {
                            if ("function" === typeof r) {
                                var a = r;
                                r = function() {
                                    var e = ju(o);
                                    a.call(e)
                                }
                            }
                            var o = Gu(t, r, e, 0, null, !1, 0, "", Ku);
                            return e._reactRootContainer = o, e[pi] = o.current, Vr(8 === e.nodeType ? e.parentNode : e), cu(), o
                        }
                        for (; i = e.lastChild;) e.removeChild(i);
                        if ("function" === typeof r) {
                            var s = r;
                            r = function() {
                                var e = ju(l);
                                s.call(e)
                            }
                        }
                        var l = Uu(e, 0, !1, null, 0, !1, 0, "", Ku);
                        return e._reactRootContainer = l, e[pi] = l.current, Vr(8 === e.nodeType ? e.parentNode : e), cu((function() {
                            Wu(t, l, n, r)
                        })), l
                    }(n, t, e, i, r);
                    return ju(o)
                }
                Ju.prototype.render = Zu.prototype.render = function(e) {
                    var t = this._internalRoot;
                    if (null === t) throw Error(a(409));
                    Wu(e, t, null, null)
                }, Ju.prototype.unmount = Zu.prototype.unmount = function() {
                    var e = this._internalRoot;
                    if (null !== e) {
                        this._internalRoot = null;
                        var t = e.containerInfo;
                        cu((function() {
                            Wu(null, e, null, null)
                        })), t[pi] = null
                    }
                }, Ju.prototype.unstable_scheduleHydration = function(e) {
                    if (e) {
                        var t = Mt();
                        e = {
                            blockedOn: null,
                            target: e,
                            priority: t
                        };
                        for (var n = 0; n < Nt.length && 0 !== t && t < Nt[n].priority; n++);
                        Nt.splice(n, 0, e), 0 === n && Dt(e)
                    }
                }, _t = function(e) {
                    switch (e.tag) {
                        case 3:
                            var t = e.stateNode;
                            if (t.current.memoizedState.isDehydrated) {
                                var n = ft(t.pendingLanes);
                                0 !== n && (yt(t, 1 | n), ru(t, $e()), 0 === (6 & Ll) && (Vl = $e() + 500, Vi()))
                            }
                            break;
                        case 13:
                            cu((function() {
                                var t = Aa(e, 1);
                                if (null !== t) {
                                    var n = eu();
                                    nu(t, e, 1, n)
                                }
                            })), Xu(e, 1)
                    }
                }, wt = function(e) {
                    if (13 === e.tag) {
                        var t = Aa(e, 134217728);
                        if (null !== t) nu(t, e, 134217728, eu());
                        Xu(e, 134217728)
                    }
                }, St = function(e) {
                    if (13 === e.tag) {
                        var t = tu(e),
                            n = Aa(e, t);
                        if (null !== n) nu(n, e, t, eu());
                        Xu(e, t)
                    }
                }, Mt = function() {
                    return xt
                }, kt = function(e, t) {
                    var n = xt;
                    try {
                        return xt = e, t()
                    } finally {
                        xt = n
                    }
                }, we = function(e, t, n) {
                    switch (t) {
                        case "input":
                            if (Q(e, n), t = n.name, "radio" === n.type && null != t) {
                                for (n = e; n.parentNode;) n = n.parentNode;
                                for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                                    var r = n[t];
                                    if (r !== e && r.form === e.form) {
                                        var i = _i(r);
                                        if (!i) throw Error(a(90));
                                        X(r), Q(r, i)
                                    }
                                }
                            }
                            break;
                        case "textarea":
                            ae(e, n);
                            break;
                        case "select":
                            null != (t = n.value) && ne(e, !!n.multiple, t, !1)
                    }
                }, Le = uu, Ae = cu;
                var tc = {
                        usingClientEntryPoint: !1,
                        Events: [xi, bi, _i, Ee, Te, uu]
                    },
                    nc = {
                        findFiberByHostInstance: yi,
                        bundleType: 0,
                        version: "18.2.0",
                        rendererPackageName: "react-dom"
                    },
                    rc = {
                        bundleType: nc.bundleType,
                        version: nc.version,
                        rendererPackageName: nc.rendererPackageName,
                        rendererConfig: nc.rendererConfig,
                        overrideHookState: null,
                        overrideHookStateDeletePath: null,
                        overrideHookStateRenamePath: null,
                        overrideProps: null,
                        overridePropsDeletePath: null,
                        overridePropsRenamePath: null,
                        setErrorHandler: null,
                        setSuspenseHandler: null,
                        scheduleUpdate: null,
                        currentDispatcherRef: b.ReactCurrentDispatcher,
                        findHostInstanceByFiber: function(e) {
                            return null === (e = je(e)) ? null : e.stateNode
                        },
                        findFiberByHostInstance: nc.findFiberByHostInstance || function() {
                            return null
                        },
                        findHostInstancesForRefresh: null,
                        scheduleRefresh: null,
                        scheduleRoot: null,
                        setRefreshHandler: null,
                        getCurrentFiber: null,
                        reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
                    };
                if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
                    var ic = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                    if (!ic.isDisabled && ic.supportsFiber) try {
                        it = ic.inject(rc), at = ic
                    } catch (ce) {}
                }
                t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tc, t.createPortal = function(e, t) {
                    var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                    if (!$u(t)) throw Error(a(200));
                    return Hu(e, t, null, n)
                }, t.createRoot = function(e, t) {
                    if (!$u(e)) throw Error(a(299));
                    var n = !1,
                        r = "",
                        i = Yu;
                    return null !== t && void 0 !== t && (!0 === t.unstable_strictMode && (n = !0), void 0 !== t.identifierPrefix && (r = t.identifierPrefix), void 0 !== t.onRecoverableError && (i = t.onRecoverableError)), t = Uu(e, 1, !1, null, 0, n, 0, r, i), e[pi] = t.current, Vr(8 === e.nodeType ? e.parentNode : e), new Zu(t)
                }, t.findDOMNode = function(e) {
                    if (null == e) return null;
                    if (1 === e.nodeType) return e;
                    var t = e._reactInternals;
                    if (void 0 === t) {
                        if ("function" === typeof e.render) throw Error(a(188));
                        throw e = Object.keys(e).join(","), Error(a(268, e))
                    }
                    return e = null === (e = je(t)) ? null : e.stateNode
                }, t.flushSync = function(e) {
                    return cu(e)
                }, t.hydrate = function(e, t, n) {
                    if (!Qu(t)) throw Error(a(200));
                    return ec(null, e, t, !0, n)
                }, t.hydrateRoot = function(e, t, n) {
                    if (!$u(e)) throw Error(a(405));
                    var r = null != n && n.hydratedSources || null,
                        i = !1,
                        o = "",
                        s = Yu;
                    if (null !== n && void 0 !== n && (!0 === n.unstable_strictMode && (i = !0), void 0 !== n.identifierPrefix && (o = n.identifierPrefix), void 0 !== n.onRecoverableError && (s = n.onRecoverableError)), t = Gu(t, null, e, 1, null != n ? n : null, i, 0, o, s), e[pi] = t.current, Vr(e), r)
                        for (e = 0; e < r.length; e++) i = (i = (n = r[e])._getVersion)(n._source), null == t.mutableSourceEagerHydrationData ? t.mutableSourceEagerHydrationData = [n, i] : t.mutableSourceEagerHydrationData.push(n, i);
                    return new Ju(t)
                }, t.render = function(e, t, n) {
                    if (!Qu(t)) throw Error(a(200));
                    return ec(null, e, t, !1, n)
                }, t.unmountComponentAtNode = function(e) {
                    if (!Qu(e)) throw Error(a(40));
                    return !!e._reactRootContainer && (cu((function() {
                        ec(null, null, e, !1, (function() {
                            e._reactRootContainer = null, e[pi] = null
                        }))
                    })), !0)
                }, t.unstable_batchedUpdates = uu, t.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
                    if (!Qu(n)) throw Error(a(200));
                    if (null == e || void 0 === e._reactInternals) throw Error(a(38));
                    return ec(e, t, n, !1, r)
                }, t.version = "18.2.0-next-9e3b772b8-20220608"
            },
            250: function(e, t, n) {
                "use strict";
                var r = n(164);
                t.createRoot = r.createRoot, t.hydrateRoot = r.hydrateRoot
            },
            164: function(e, t, n) {
                "use strict";
                ! function e() {
                    if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) try {
                        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                    } catch (t) {
                        console.error(t)
                    }
                }(), e.exports = n(463)
            },
            374: function(e, t, n) {
                "use strict";
                var r = n(791),
                    i = Symbol.for("react.element"),
                    a = Symbol.for("react.fragment"),
                    o = Object.prototype.hasOwnProperty,
                    s = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
                    l = {
                        key: !0,
                        ref: !0,
                        __self: !0,
                        __source: !0
                    };

                function u(e, t, n) {
                    var r, a = {},
                        u = null,
                        c = null;
                    for (r in void 0 !== n && (u = "" + n), void 0 !== t.key && (u = "" + t.key), void 0 !== t.ref && (c = t.ref), t) o.call(t, r) && !l.hasOwnProperty(r) && (a[r] = t[r]);
                    if (e && e.defaultProps)
                        for (r in t = e.defaultProps) void 0 === a[r] && (a[r] = t[r]);
                    return {
                        $$typeof: i,
                        type: e,
                        key: u,
                        ref: c,
                        props: a,
                        _owner: s.current
                    }
                }
                t.Fragment = a, t.jsx = u, t.jsxs = u
            },
            117: function(e, t) {
                "use strict";
                var n = Symbol.for("react.element"),
                    r = Symbol.for("react.portal"),
                    i = Symbol.for("react.fragment"),
                    a = Symbol.for("react.strict_mode"),
                    o = Symbol.for("react.profiler"),
                    s = Symbol.for("react.provider"),
                    l = Symbol.for("react.context"),
                    u = Symbol.for("react.forward_ref"),
                    c = Symbol.for("react.suspense"),
                    f = Symbol.for("react.memo"),
                    d = Symbol.for("react.lazy"),
                    h = Symbol.iterator;
                var p = {
                        isMounted: function() {
                            return !1
                        },
                        enqueueForceUpdate: function() {},
                        enqueueReplaceState: function() {},
                        enqueueSetState: function() {}
                    },
                    v = Object.assign,
                    m = {};

                function g(e, t, n) {
                    this.props = e, this.context = t, this.refs = m, this.updater = n || p
                }

                function y() {}

                function x(e, t, n) {
                    this.props = e, this.context = t, this.refs = m, this.updater = n || p
                }
                g.prototype.isReactComponent = {}, g.prototype.setState = function(e, t) {
                    if ("object" !== typeof e && "function" !== typeof e && null != e) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                    this.updater.enqueueSetState(this, e, t, "setState")
                }, g.prototype.forceUpdate = function(e) {
                    this.updater.enqueueForceUpdate(this, e, "forceUpdate")
                }, y.prototype = g.prototype;
                var b = x.prototype = new y;
                b.constructor = x, v(b, g.prototype), b.isPureReactComponent = !0;
                var _ = Array.isArray,
                    w = Object.prototype.hasOwnProperty,
                    S = {
                        current: null
                    },
                    M = {
                        key: !0,
                        ref: !0,
                        __self: !0,
                        __source: !0
                    };

                function k(e, t, r) {
                    var i, a = {},
                        o = null,
                        s = null;
                    if (null != t)
                        for (i in void 0 !== t.ref && (s = t.ref), void 0 !== t.key && (o = "" + t.key), t) w.call(t, i) && !M.hasOwnProperty(i) && (a[i] = t[i]);
                    var l = arguments.length - 2;
                    if (1 === l) a.children = r;
                    else if (1 < l) {
                        for (var u = Array(l), c = 0; c < l; c++) u[c] = arguments[c + 2];
                        a.children = u
                    }
                    if (e && e.defaultProps)
                        for (i in l = e.defaultProps) void 0 === a[i] && (a[i] = l[i]);
                    return {
                        $$typeof: n,
                        type: e,
                        key: o,
                        ref: s,
                        props: a,
                        _owner: S.current
                    }
                }

                function E(e) {
                    return "object" === typeof e && null !== e && e.$$typeof === n
                }
                var T = /\/+/g;

                function L(e, t) {
                    return "object" === typeof e && null !== e && null != e.key ? function(e) {
                        var t = {
                            "=": "=0",
                            ":": "=2"
                        };
                        return "$" + e.replace(/[=:]/g, (function(e) {
                            return t[e]
                        }))
                    }("" + e.key) : t.toString(36)
                }

                function A(e, t, i, a, o) {
                    var s = typeof e;
                    "undefined" !== s && "boolean" !== s || (e = null);
                    var l = !1;
                    if (null === e) l = !0;
                    else switch (s) {
                        case "string":
                        case "number":
                            l = !0;
                            break;
                        case "object":
                            switch (e.$$typeof) {
                                case n:
                                case r:
                                    l = !0
                            }
                    }
                    if (l) return o = o(l = e), e = "" === a ? "." + L(l, 0) : a, _(o) ? (i = "", null != e && (i = e.replace(T, "$&/") + "/"), A(o, t, i, "", (function(e) {
                        return e
                    }))) : null != o && (E(o) && (o = function(e, t) {
                        return {
                            $$typeof: n,
                            type: e.type,
                            key: t,
                            ref: e.ref,
                            props: e.props,
                            _owner: e._owner
                        }
                    }(o, i + (!o.key || l && l.key === o.key ? "" : ("" + o.key).replace(T, "$&/") + "/") + e)), t.push(o)), 1;
                    if (l = 0, a = "" === a ? "." : a + ":", _(e))
                        for (var u = 0; u < e.length; u++) {
                            var c = a + L(s = e[u], u);
                            l += A(s, t, i, c, o)
                        } else if (c = function(e) {
                                return null === e || "object" !== typeof e ? null : "function" === typeof(e = h && e[h] || e["@@iterator"]) ? e : null
                            }(e), "function" === typeof c)
                            for (e = c.call(e), u = 0; !(s = e.next()).done;) l += A(s = s.value, t, i, c = a + L(s, u++), o);
                        else if ("object" === s) throw t = String(e), Error("Objects are not valid as a React child (found: " + ("[object Object]" === t ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
                    return l
                }

                function C(e, t, n) {
                    if (null == e) return e;
                    var r = [],
                        i = 0;
                    return A(e, r, "", "", (function(e) {
                        return t.call(n, e, i++)
                    })), r
                }

                function P(e) {
                    if (-1 === e._status) {
                        var t = e._result;
                        (t = t()).then((function(t) {
                            0 !== e._status && -1 !== e._status || (e._status = 1, e._result = t)
                        }), (function(t) {
                            0 !== e._status && -1 !== e._status || (e._status = 2, e._result = t)
                        })), -1 === e._status && (e._status = 0, e._result = t)
                    }
                    if (1 === e._status) return e._result.default;
                    throw e._result
                }
                var R = {
                        current: null
                    },
                    N = {
                        transition: null
                    },
                    I = {
                        ReactCurrentDispatcher: R,
                        ReactCurrentBatchConfig: N,
                        ReactCurrentOwner: S
                    };
                t.Children = {
                    map: C,
                    forEach: function(e, t, n) {
                        C(e, (function() {
                            t.apply(this, arguments)
                        }), n)
                    },
                    count: function(e) {
                        var t = 0;
                        return C(e, (function() {
                            t++
                        })), t
                    },
                    toArray: function(e) {
                        return C(e, (function(e) {
                            return e
                        })) || []
                    },
                    only: function(e) {
                        if (!E(e)) throw Error("React.Children.only expected to receive a single React element child.");
                        return e
                    }
                }, t.Component = g, t.Fragment = i, t.Profiler = o, t.PureComponent = x, t.StrictMode = a, t.Suspense = c, t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = I, t.cloneElement = function(e, t, r) {
                    if (null === e || void 0 === e) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
                    var i = v({}, e.props),
                        a = e.key,
                        o = e.ref,
                        s = e._owner;
                    if (null != t) {
                        if (void 0 !== t.ref && (o = t.ref, s = S.current), void 0 !== t.key && (a = "" + t.key), e.type && e.type.defaultProps) var l = e.type.defaultProps;
                        for (u in t) w.call(t, u) && !M.hasOwnProperty(u) && (i[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u])
                    }
                    var u = arguments.length - 2;
                    if (1 === u) i.children = r;
                    else if (1 < u) {
                        l = Array(u);
                        for (var c = 0; c < u; c++) l[c] = arguments[c + 2];
                        i.children = l
                    }
                    return {
                        $$typeof: n,
                        type: e.type,
                        key: a,
                        ref: o,
                        props: i,
                        _owner: s
                    }
                }, t.createContext = function(e) {
                    return (e = {
                        $$typeof: l,
                        _currentValue: e,
                        _currentValue2: e,
                        _threadCount: 0,
                        Provider: null,
                        Consumer: null,
                        _defaultValue: null,
                        _globalName: null
                    }).Provider = {
                        $$typeof: s,
                        _context: e
                    }, e.Consumer = e
                }, t.createElement = k, t.createFactory = function(e) {
                    var t = k.bind(null, e);
                    return t.type = e, t
                }, t.createRef = function() {
                    return {
                        current: null
                    }
                }, t.forwardRef = function(e) {
                    return {
                        $$typeof: u,
                        render: e
                    }
                }, t.isValidElement = E, t.lazy = function(e) {
                    return {
                        $$typeof: d,
                        _payload: {
                            _status: -1,
                            _result: e
                        },
                        _init: P
                    }
                }, t.memo = function(e, t) {
                    return {
                        $$typeof: f,
                        type: e,
                        compare: void 0 === t ? null : t
                    }
                }, t.startTransition = function(e) {
                    var t = N.transition;
                    N.transition = {};
                    try {
                        e()
                    } finally {
                        N.transition = t
                    }
                }, t.unstable_act = function() {
                    throw Error("act(...) is not supported in production builds of React.")
                }, t.useCallback = function(e, t) {
                    return R.current.useCallback(e, t)
                }, t.useContext = function(e) {
                    return R.current.useContext(e)
                }, t.useDebugValue = function() {}, t.useDeferredValue = function(e) {
                    return R.current.useDeferredValue(e)
                }, t.useEffect = function(e, t) {
                    return R.current.useEffect(e, t)
                }, t.useId = function() {
                    return R.current.useId()
                }, t.useImperativeHandle = function(e, t, n) {
                    return R.current.useImperativeHandle(e, t, n)
                }, t.useInsertionEffect = function(e, t) {
                    return R.current.useInsertionEffect(e, t)
                }, t.useLayoutEffect = function(e, t) {
                    return R.current.useLayoutEffect(e, t)
                }, t.useMemo = function(e, t) {
                    return R.current.useMemo(e, t)
                }, t.useReducer = function(e, t, n) {
                    return R.current.useReducer(e, t, n)
                }, t.useRef = function(e) {
                    return R.current.useRef(e)
                }, t.useState = function(e) {
                    return R.current.useState(e)
                }, t.useSyncExternalStore = function(e, t, n) {
                    return R.current.useSyncExternalStore(e, t, n)
                }, t.useTransition = function() {
                    return R.current.useTransition()
                }, t.version = "18.2.0"
            },
            791: function(e, t, n) {
                "use strict";
                e.exports = n(117)
            },
            184: function(e, t, n) {
                "use strict";
                e.exports = n(374)
            },
            813: function(e, t) {
                "use strict";

                function n(e, t) {
                    var n = e.length;
                    e.push(t);
                    e: for (; 0 < n;) {
                        var r = n - 1 >>> 1,
                            i = e[r];
                        if (!(0 < a(i, t))) break e;
                        e[r] = t, e[n] = i, n = r
                    }
                }

                function r(e) {
                    return 0 === e.length ? null : e[0]
                }

                function i(e) {
                    if (0 === e.length) return null;
                    var t = e[0],
                        n = e.pop();
                    if (n !== t) {
                        e[0] = n;
                        e: for (var r = 0, i = e.length, o = i >>> 1; r < o;) {
                            var s = 2 * (r + 1) - 1,
                                l = e[s],
                                u = s + 1,
                                c = e[u];
                            if (0 > a(l, n)) u < i && 0 > a(c, l) ? (e[r] = c, e[u] = n, r = u) : (e[r] = l, e[s] = n, r = s);
                            else {
                                if (!(u < i && 0 > a(c, n))) break e;
                                e[r] = c, e[u] = n, r = u
                            }
                        }
                    }
                    return t
                }

                function a(e, t) {
                    var n = e.sortIndex - t.sortIndex;
                    return 0 !== n ? n : e.id - t.id
                }
                if ("object" === typeof performance && "function" === typeof performance.now) {
                    var o = performance;
                    t.unstable_now = function() {
                        return o.now()
                    }
                } else {
                    var s = Date,
                        l = s.now();
                    t.unstable_now = function() {
                        return s.now() - l
                    }
                }
                var u = [],
                    c = [],
                    f = 1,
                    d = null,
                    h = 3,
                    p = !1,
                    v = !1,
                    m = !1,
                    g = "function" === typeof setTimeout ? setTimeout : null,
                    y = "function" === typeof clearTimeout ? clearTimeout : null,
                    x = "undefined" !== typeof setImmediate ? setImmediate : null;

                function b(e) {
                    for (var t = r(c); null !== t;) {
                        if (null === t.callback) i(c);
                        else {
                            if (!(t.startTime <= e)) break;
                            i(c), t.sortIndex = t.expirationTime, n(u, t)
                        }
                        t = r(c)
                    }
                }

                function _(e) {
                    if (m = !1, b(e), !v)
                        if (null !== r(u)) v = !0, N(w);
                        else {
                            var t = r(c);
                            null !== t && I(_, t.startTime - e)
                        }
                }

                function w(e, n) {
                    v = !1, m && (m = !1, y(E), E = -1), p = !0;
                    var a = h;
                    try {
                        for (b(n), d = r(u); null !== d && (!(d.expirationTime > n) || e && !A());) {
                            var o = d.callback;
                            if ("function" === typeof o) {
                                d.callback = null, h = d.priorityLevel;
                                var s = o(d.expirationTime <= n);
                                n = t.unstable_now(), "function" === typeof s ? d.callback = s : d === r(u) && i(u), b(n)
                            } else i(u);
                            d = r(u)
                        }
                        if (null !== d) var l = !0;
                        else {
                            var f = r(c);
                            null !== f && I(_, f.startTime - n), l = !1
                        }
                        return l
                    } finally {
                        d = null, h = a, p = !1
                    }
                }
                "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
                var S, M = !1,
                    k = null,
                    E = -1,
                    T = 5,
                    L = -1;

                function A() {
                    return !(t.unstable_now() - L < T)
                }

                function C() {
                    if (null !== k) {
                        var e = t.unstable_now();
                        L = e;
                        var n = !0;
                        try {
                            n = k(!0, e)
                        } finally {
                            n ? S() : (M = !1, k = null)
                        }
                    } else M = !1
                }
                if ("function" === typeof x) S = function() {
                    x(C)
                };
                else if ("undefined" !== typeof MessageChannel) {
                    var P = new MessageChannel,
                        R = P.port2;
                    P.port1.onmessage = C, S = function() {
                        R.postMessage(null)
                    }
                } else S = function() {
                    g(C, 0)
                };

                function N(e) {
                    k = e, M || (M = !0, S())
                }

                function I(e, n) {
                    E = g((function() {
                        e(t.unstable_now())
                    }), n)
                }
                t.unstable_IdlePriority = 5, t.unstable_ImmediatePriority = 1, t.unstable_LowPriority = 4, t.unstable_NormalPriority = 3, t.unstable_Profiling = null, t.unstable_UserBlockingPriority = 2, t.unstable_cancelCallback = function(e) {
                    e.callback = null
                }, t.unstable_continueExecution = function() {
                    v || p || (v = !0, N(w))
                }, t.unstable_forceFrameRate = function(e) {
                    0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : T = 0 < e ? Math.floor(1e3 / e) : 5
                }, t.unstable_getCurrentPriorityLevel = function() {
                    return h
                }, t.unstable_getFirstCallbackNode = function() {
                    return r(u)
                }, t.unstable_next = function(e) {
                    switch (h) {
                        case 1:
                        case 2:
                        case 3:
                            var t = 3;
                            break;
                        default:
                            t = h
                    }
                    var n = h;
                    h = t;
                    try {
                        return e()
                    } finally {
                        h = n
                    }
                }, t.unstable_pauseExecution = function() {}, t.unstable_requestPaint = function() {}, t.unstable_runWithPriority = function(e, t) {
                    switch (e) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        default:
                            e = 3
                    }
                    var n = h;
                    h = e;
                    try {
                        return t()
                    } finally {
                        h = n
                    }
                }, t.unstable_scheduleCallback = function(e, i, a) {
                    var o = t.unstable_now();
                    switch ("object" === typeof a && null !== a ? a = "number" === typeof(a = a.delay) && 0 < a ? o + a : o : a = o, e) {
                        case 1:
                            var s = -1;
                            break;
                        case 2:
                            s = 250;
                            break;
                        case 5:
                            s = 1073741823;
                            break;
                        case 4:
                            s = 1e4;
                            break;
                        default:
                            s = 5e3
                    }
                    return e = {
                        id: f++,
                        callback: i,
                        priorityLevel: e,
                        startTime: a,
                        expirationTime: s = a + s,
                        sortIndex: -1
                    }, a > o ? (e.sortIndex = a, n(c, e), null === r(u) && e === r(c) && (m ? (y(E), E = -1) : m = !0, I(_, a - o))) : (e.sortIndex = s, n(u, e), v || p || (v = !0, N(w))), e
                }, t.unstable_shouldYield = A, t.unstable_wrapCallback = function(e) {
                    var t = h;
                    return function() {
                        var n = h;
                        h = t;
                        try {
                            return e.apply(this, arguments)
                        } finally {
                            h = n
                        }
                    }
                }
            },
            296: function(e, t, n) {
                "use strict";
                e.exports = n(813)
            }
        },
        t = {};

    function n(r) {
        var i = t[r];
        if (void 0 !== i) return i.exports;
        var a = t[r] = {
            exports: {}
        };
        return e[r](a, a.exports, n), a.exports
    }
    n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return n.d(t, {
                a: t
            }), t
        },
        function() {
            var e, t = Object.getPrototypeOf ? function(e) {
                return Object.getPrototypeOf(e)
            } : function(e) {
                return e.__proto__
            };
            n.t = function(r, i) {
                if (1 & i && (r = this(r)), 8 & i) return r;
                if ("object" === typeof r && r) {
                    if (4 & i && r.__esModule) return r;
                    if (16 & i && "function" === typeof r.then) return r
                }
                var a = Object.create(null);
                n.r(a);
                var o = {};
                e = e || [null, t({}), t([]), t(t)];
                for (var s = 2 & i && r;
                    "object" == typeof s && !~e.indexOf(s); s = t(s)) Object.getOwnPropertyNames(s).forEach((function(e) {
                    o[e] = function() {
                        return r[e]
                    }
                }));
                return o.default = function() {
                    return r
                }, n.d(a, o), a
            }
        }(), n.d = function(e, t) {
            for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {
                enumerable: !0,
                get: t[r]
            })
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, n.r = function(e) {
            "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        },
        function() {
            "use strict";
            var e, t = n(791),
                r = n.t(t, 2),
                i = n(250);

            function a(e) {
                if (Array.isArray(e)) return e
            }

            function o(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r
            }

            function s(e, t) {
                if (e) {
                    if ("string" === typeof e) return o(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? o(e, t) : void 0
                }
            }

            function l() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function u(e, t) {
                return a(e) || function(e, t) {
                    var n = null == e ? null : "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var r, i, a = [],
                            o = !0,
                            s = !1;
                        try {
                            for (n = n.call(e); !(o = (r = n.next()).done) && (a.push(r.value), !t || a.length !== t); o = !0);
                        } catch (l) {
                            s = !0, i = l
                        } finally {
                            try {
                                o || null == n.return || n.return()
                            } finally {
                                if (s) throw i
                            }
                        }
                        return a
                    }
                }(e, t) || s(e, t) || l()
            }

            function c(e) {
                if ("undefined" !== typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
            }

            function f(e) {
                return function(e) {
                    if (Array.isArray(e)) return o(e)
                }(e) || c(e) || s(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function d(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }

            function h(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }

            function p(e, t, n) {
                return t && h(e.prototype, t), n && h(e, n), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), e
            }

            function v(e, t) {
                return v = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t, e
                }, v(e, t)
            }

            function m(e, t) {
                if ("function" !== typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), t && v(e, t)
            }

            function g(e) {
                return g = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                }, g(e)
            }

            function y() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (bm) {
                    return !1
                }
            }

            function x(e) {
                return x = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, x(e)
            }

            function b(e) {
                if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }

            function _(e, t) {
                if (t && ("object" === x(t) || "function" === typeof t)) return t;
                if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
                return b(e)
            }

            function w(e) {
                var t = y();
                return function() {
                    var n, r = g(e);
                    if (t) {
                        var i = g(this).constructor;
                        n = Reflect.construct(r, arguments, i)
                    } else n = r.apply(this, arguments);
                    return _(this, n)
                }
            }

            function S(e, t, n) {
                return S = y() ? Reflect.construct.bind() : function(e, t, n) {
                    var r = [null];
                    r.push.apply(r, t);
                    var i = new(Function.bind.apply(e, r));
                    return n && v(i, n.prototype), i
                }, S.apply(null, arguments)
            }

            function M(e) {
                var t = "function" === typeof Map ? new Map : void 0;
                return M = function(e) {
                    if (null === e || (n = e, -1 === Function.toString.call(n).indexOf("[native code]"))) return e;
                    var n;
                    if ("function" !== typeof e) throw new TypeError("Super expression must either be null or a function");
                    if ("undefined" !== typeof t) {
                        if (t.has(e)) return t.get(e);
                        t.set(e, r)
                    }

                    function r() {
                        return S(e, arguments, g(this).constructor)
                    }
                    return r.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: r,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), v(r, e)
                }, M(e)
            }

            function k(e, t) {
                var n = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (!n) {
                    if (Array.isArray(e) || (n = s(e)) || t && e && "number" === typeof e.length) {
                        n && (e = n);
                        var r = 0,
                            i = function() {};
                        return {
                            s: i,
                            n: function() {
                                return r >= e.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: e[r++]
                                }
                            },
                            e: function(e) {
                                throw e
                            },
                            f: i
                        }
                    }
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                var a, o = !0,
                    l = !1;
                return {
                    s: function() {
                        n = n.call(e)
                    },
                    n: function() {
                        var e = n.next();
                        return o = e.done, e
                    },
                    e: function(e) {
                        l = !0, a = e
                    },
                    f: function() {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (l) throw a
                        }
                    }
                }
            }

            function E() {
                return E = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }, E.apply(this, arguments)
            }! function(e) {
                e.Pop = "POP", e.Push = "PUSH", e.Replace = "REPLACE"
            }(e || (e = {}));
            var T, L = "popstate";

            function A(e, t) {
                if (!1 === e || null === e || "undefined" === typeof e) throw new Error(t)
            }

            function C(e, t) {
                if (!e) {
                    "undefined" !== typeof console && console.warn(t);
                    try {
                        throw new Error(t)
                    } catch (bm) {}
                }
            }

            function P(e, t) {
                return {
                    usr: e.state,
                    key: e.key,
                    idx: t
                }
            }

            function R(e, t, n, r) {
                return void 0 === n && (n = null), E({
                    pathname: "string" === typeof e ? e : e.pathname,
                    search: "",
                    hash: ""
                }, "string" === typeof t ? I(t) : t, {
                    state: n,
                    key: t && t.key || r || Math.random().toString(36).substr(2, 8)
                })
            }

            function N(e) {
                var t = e.pathname,
                    n = void 0 === t ? "/" : t,
                    r = e.search,
                    i = void 0 === r ? "" : r,
                    a = e.hash,
                    o = void 0 === a ? "" : a;
                return i && "?" !== i && (n += "?" === i.charAt(0) ? i : "?" + i), o && "#" !== o && (n += "#" === o.charAt(0) ? o : "#" + o), n
            }

            function I(e) {
                var t = {};
                if (e) {
                    var n = e.indexOf("#");
                    n >= 0 && (t.hash = e.substr(n), e = e.substr(0, n));
                    var r = e.indexOf("?");
                    r >= 0 && (t.search = e.substr(r), e = e.substr(0, r)), e && (t.pathname = e)
                }
                return t
            }

            function z(t, n, r, i) {
                void 0 === i && (i = {});
                var a = i,
                    o = a.window,
                    s = void 0 === o ? document.defaultView : o,
                    l = a.v5Compat,
                    u = void 0 !== l && l,
                    c = s.history,
                    f = e.Pop,
                    d = null,
                    h = p();

                function p() {
                    return (c.state || {
                        idx: null
                    }).idx
                }

                function v() {
                    var t = e.Pop,
                        n = p();
                    if (null != n) {
                        var r = n - h;
                        f = t, h = n, d && d({
                            action: f,
                            location: g.location,
                            delta: r
                        })
                    } else C(!1, "You are trying to block a POP navigation to a location that was not created by @remix-run/router. The block will fail silently in production, but in general you should do all navigation with the router (instead of using window.history.pushState directly) to avoid this situation.")
                }

                function m(e) {
                    var t = "null" !== s.location.origin ? s.location.origin : s.location.href,
                        n = "string" === typeof e ? e : N(e);
                    return A(t, "No window.location.(origin|href) available to create URL for href: " + n), new URL(n, t)
                }
                null == h && (h = 0, c.replaceState(E({}, c.state, {
                    idx: h
                }), ""));
                var g = {
                    get action() {
                        return f
                    },
                    get location() {
                        return t(s, c)
                    },
                    listen: function(e) {
                        if (d) throw new Error("A history only accepts one active listener");
                        return s.addEventListener(L, v), d = e,
                            function() {
                                s.removeEventListener(L, v), d = null
                            }
                    },
                    createHref: function(e) {
                        return n(s, e)
                    },
                    createURL: m,
                    encodeLocation: function(e) {
                        var t = m(e);
                        return {
                            pathname: t.pathname,
                            search: t.search,
                            hash: t.hash
                        }
                    },
                    push: function(t, n) {
                        f = e.Push;
                        var i = R(g.location, t, n);
                        r && r(i, t);
                        var a = P(i, h = p() + 1),
                            o = g.createHref(i);
                        try {
                            c.pushState(a, "", o)
                        } catch (l) {
                            s.location.assign(o)
                        }
                        u && d && d({
                            action: f,
                            location: g.location,
                            delta: 1
                        })
                    },
                    replace: function(t, n) {
                        f = e.Replace;
                        var i = R(g.location, t, n);
                        r && r(i, t);
                        var a = P(i, h = p()),
                            o = g.createHref(i);
                        c.replaceState(a, "", o), u && d && d({
                            action: f,
                            location: g.location,
                            delta: 0
                        })
                    },
                    go: function(e) {
                        return c.go(e)
                    }
                };
                return g
            }

            function O(e, t, n) {
                void 0 === n && (n = "/");
                var r = j(("string" === typeof t ? I(t) : t).pathname || "/", n);
                if (null == r) return null;
                var i = D(e);
                ! function(e) {
                    e.sort((function(e, t) {
                        return e.score !== t.score ? t.score - e.score : function(e, t) {
                            var n = e.length === t.length && e.slice(0, -1).every((function(e, n) {
                                return e === t[n]
                            }));
                            return n ? e[e.length - 1] - t[t.length - 1] : 0
                        }(e.routesMeta.map((function(e) {
                            return e.childrenIndex
                        })), t.routesMeta.map((function(e) {
                            return e.childrenIndex
                        })))
                    }))
                }(i);
                for (var a = null, o = 0; null == a && o < i.length; ++o) a = V(i[o], W(r));
                return a
            }

            function D(e, t, n, r) {
                void 0 === t && (t = []), void 0 === n && (n = []), void 0 === r && (r = "");
                var i = function(e, i, a) {
                    var o = {
                        relativePath: void 0 === a ? e.path || "" : a,
                        caseSensitive: !0 === e.caseSensitive,
                        childrenIndex: i,
                        route: e
                    };
                    o.relativePath.startsWith("/") && (A(o.relativePath.startsWith(r), 'Absolute route path "' + o.relativePath + '" nested under path "' + r + '" is not valid. An absolute child route path must start with the combined path of all its parent routes.'), o.relativePath = o.relativePath.slice(r.length));
                    var s = X([r, o.relativePath]),
                        l = n.concat(o);
                    e.children && e.children.length > 0 && (A(!0 !== e.index, 'Index routes must not have child routes. Please remove all child routes from route path "' + s + '".'), D(e.children, t, l, s)), (null != e.path || e.index) && t.push({
                        path: s,
                        score: H(s, e.index),
                        routesMeta: l
                    })
                };
                return e.forEach((function(e, t) {
                    var n;
                    if ("" !== e.path && null != (n = e.path) && n.includes("?")) {
                        var r, a = k(F(e.path));
                        try {
                            for (a.s(); !(r = a.n()).done;) {
                                var o = r.value;
                                i(e, t, o)
                            }
                        } catch (s) {
                            a.e(s)
                        } finally {
                            a.f()
                        }
                    } else i(e, t)
                })), t
            }

            function F(e) {
                var t = e.split("/");
                if (0 === t.length) return [];
                var n, r = a(n = t) || c(n) || s(n) || l(),
                    i = r[0],
                    o = r.slice(1),
                    u = i.endsWith("?"),
                    d = i.replace(/\?$/, "");
                if (0 === o.length) return u ? [d, ""] : [d];
                var h = F(o.join("/")),
                    p = [];
                return p.push.apply(p, f(h.map((function(e) {
                    return "" === e ? d : [d, e].join("/")
                })))), u && p.push.apply(p, f(h)), p.map((function(t) {
                    return e.startsWith("/") && "" === t ? "/" : t
                }))
            }! function(e) {
                e.data = "data", e.deferred = "deferred", e.redirect = "redirect", e.error = "error"
            }(T || (T = {}));
            var B = /^:\w+$/,
                U = function(e) {
                    return "*" === e
                };

            function H(e, t) {
                var n = e.split("/"),
                    r = n.length;
                return n.some(U) && (r += -2), t && (r += 2), n.filter((function(e) {
                    return !U(e)
                })).reduce((function(e, t) {
                    return e + (B.test(t) ? 3 : "" === t ? 1 : 10)
                }), r)
            }

            function V(e, t) {
                for (var n = e.routesMeta, r = {}, i = "/", a = [], o = 0; o < n.length; ++o) {
                    var s = n[o],
                        l = o === n.length - 1,
                        u = "/" === i ? t : t.slice(i.length) || "/",
                        c = G({
                            path: s.relativePath,
                            caseSensitive: s.caseSensitive,
                            end: l
                        }, u);
                    if (!c) return null;
                    Object.assign(r, c.params);
                    var f = s.route;
                    a.push({
                        params: r,
                        pathname: X([i, c.pathname]),
                        pathnameBase: Y(X([i, c.pathnameBase])),
                        route: f
                    }), "/" !== c.pathnameBase && (i = X([i, c.pathnameBase]))
                }
                return a
            }

            function G(e, t) {
                "string" === typeof e && (e = {
                    path: e,
                    caseSensitive: !1,
                    end: !0
                });
                var n = function(e, t, n) {
                        void 0 === t && (t = !1);
                        void 0 === n && (n = !0);
                        q("*" === e || !e.endsWith("*") || e.endsWith("/*"), 'Route path "' + e + '" will be treated as if it were "' + e.replace(/\*$/, "/*") + '" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "' + e.replace(/\*$/, "/*") + '".');
                        var r = [],
                            i = "^" + e.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (function(e, t) {
                                return r.push(t), "/([^\\/]+)"
                            }));
                        e.endsWith("*") ? (r.push("*"), i += "*" === e || "/*" === e ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? i += "\\/*$" : "" !== e && "/" !== e && (i += "(?:(?=\\/|$))");
                        return [new RegExp(i, t ? void 0 : "i"), r]
                    }(e.path, e.caseSensitive, e.end),
                    r = u(n, 2),
                    i = r[0],
                    a = r[1],
                    o = t.match(i);
                if (!o) return null;
                var s = o[0],
                    l = s.replace(/(.)\/+$/, "$1"),
                    c = o.slice(1);
                return {
                    params: a.reduce((function(e, t, n) {
                        if ("*" === t) {
                            var r = c[n] || "";
                            l = s.slice(0, s.length - r.length).replace(/(.)\/+$/, "$1")
                        }
                        return e[t] = function(e, t) {
                            try {
                                return decodeURIComponent(e)
                            } catch (n) {
                                return q(!1, 'The value for the URL param "' + t + '" will not be decoded because the string "' + e + '" is a malformed URL segment. This is probably due to a bad percent encoding (' + n + ")."), e
                            }
                        }(c[n] || "", t), e
                    }), {}),
                    pathname: s,
                    pathnameBase: l,
                    pattern: e
                }
            }

            function W(e) {
                try {
                    return decodeURI(e)
                } catch (t) {
                    return q(!1, 'The URL path "' + e + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (' + t + ")."), e
                }
            }

            function j(e, t) {
                if ("/" === t) return e;
                if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
                var n = t.endsWith("/") ? t.length - 1 : t.length,
                    r = e.charAt(n);
                return r && "/" !== r ? null : e.slice(n) || "/"
            }

            function q(e, t) {
                if (!e) {
                    "undefined" !== typeof console && console.warn(t);
                    try {
                        throw new Error(t)
                    } catch (bm) {}
                }
            }
            var X = function(e) {
                    return e.join("/").replace(/\/\/+/g, "/")
                },
                Y = function(e) {
                    return e.replace(/\/+$/, "").replace(/^\/*/, "/")
                },
                Z = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        return d(this, n), t.apply(this, arguments)
                    }
                    return p(n)
                }(M(Error));
            var J = p((function e(t, n, r, i) {
                d(this, e), void 0 === i && (i = !1), this.status = t, this.statusText = n || "", this.internal = i, r instanceof Error ? (this.data = r.toString(), this.error = r) : this.data = r
            }));

            function $(e) {
                return e instanceof J
            }
            var Q = ["post", "put", "patch", "delete"],
                K = (new Set(Q), ["get"].concat(Q));
            new Set(K), new Set([301, 302, 303, 307, 308]), new Set([307, 308]), "undefined" !== typeof window && "undefined" !== typeof window.document && window.document.createElement;
            Symbol("deferred");

            function ee() {
                return ee = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }, ee.apply(this, arguments)
            }
            var te = "function" === typeof Object.is ? Object.is : function(e, t) {
                    return e === t && (0 !== e || 1 / e === 1 / t) || e !== e && t !== t
                },
                ne = t.useState,
                re = t.useEffect,
                ie = t.useLayoutEffect,
                ae = t.useDebugValue;

            function oe(e) {
                var t = e.getSnapshot,
                    n = e.value;
                try {
                    var r = t();
                    return !te(n, r)
                } catch (i) {
                    return !0
                }
            }
            "undefined" === typeof window || "undefined" === typeof window.document || window.document.createElement, r.useSyncExternalStore;
            var se = t.createContext(null);
            var le = t.createContext(null);
            var ue = t.createContext(null);
            var ce = t.createContext(null);
            var fe = t.createContext(null);
            var de = t.createContext({
                outlet: null,
                matches: []
            });
            var he = t.createContext(null);

            function pe() {
                return null != t.useContext(fe)
            }

            function ve() {
                return pe() || A(!1), t.useContext(fe).location
            }

            function me() {
                var e = function() {
                        var e, n = t.useContext(he),
                            r = we(ye.UseRouteError),
                            i = Se(ye.UseRouteError);
                        if (n) return n;
                        return null == (e = r.errors) ? void 0 : e[i]
                    }(),
                    n = $(e) ? e.status + " " + e.statusText : e instanceof Error ? e.message : JSON.stringify(e),
                    r = e instanceof Error ? e.stack : null,
                    i = "rgba(200,200,200, 0.5)",
                    a = {
                        padding: "0.5rem",
                        backgroundColor: i
                    },
                    o = {
                        padding: "2px 4px",
                        backgroundColor: i
                    };
                return t.createElement(t.Fragment, null, t.createElement("h2", null, "Unhandled Thrown Error!"), t.createElement("h3", {
                    style: {
                        fontStyle: "italic"
                    }
                }, n), r ? t.createElement("pre", {
                    style: a
                }, r) : null, t.createElement("p", null, "\ud83d\udcbf Hey developer \ud83d\udc4b"), t.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own\xa0", t.createElement("code", {
                    style: o
                }, "errorElement"), " props on\xa0", t.createElement("code", {
                    style: o
                }, "<Route>")))
            }
            var ge, ye, xe = function(e) {
                m(r, e);
                var n = w(r);

                function r(e) {
                    var t;
                    return d(this, r), (t = n.call(this, e)).state = {
                        location: e.location,
                        error: e.error
                    }, t
                }
                return p(r, [{
                    key: "componentDidCatch",
                    value: function(e, t) {
                        console.error("React Router caught the following error during render", e, t)
                    }
                }, {
                    key: "render",
                    value: function() {
                        return this.state.error ? t.createElement(de.Provider, {
                            value: this.props.routeContext
                        }, t.createElement(he.Provider, {
                            value: this.state.error,
                            children: this.props.component
                        })) : this.props.children
                    }
                }], [{
                    key: "getDerivedStateFromError",
                    value: function(e) {
                        return {
                            error: e
                        }
                    }
                }, {
                    key: "getDerivedStateFromProps",
                    value: function(e, t) {
                        return t.location !== e.location ? {
                            error: e.error,
                            location: e.location
                        } : {
                            error: e.error || t.error,
                            location: t.location
                        }
                    }
                }]), r
            }(t.Component);

            function be(e) {
                var n = e.routeContext,
                    r = e.match,
                    i = e.children,
                    a = t.useContext(se);
                return a && a.static && a.staticContext && r.route.errorElement && (a.staticContext._deepestRenderedBoundaryId = r.route.id), t.createElement(de.Provider, {
                    value: n
                }, i)
            }

            function _e(e, n, r) {
                if (void 0 === n && (n = []), null == e) {
                    if (null == r || !r.errors) return null;
                    e = r.matches
                }
                var i = e,
                    a = null == r ? void 0 : r.errors;
                if (null != a) {
                    var o = i.findIndex((function(e) {
                        return e.route.id && (null == a ? void 0 : a[e.route.id])
                    }));
                    o >= 0 || A(!1), i = i.slice(0, Math.min(i.length, o + 1))
                }
                return i.reduceRight((function(e, o, s) {
                    var l = o.route.id ? null == a ? void 0 : a[o.route.id] : null,
                        u = r ? o.route.errorElement || t.createElement(me, null) : null,
                        c = n.concat(i.slice(0, s + 1)),
                        f = function() {
                            return t.createElement(be, {
                                match: o,
                                routeContext: {
                                    outlet: e,
                                    matches: c
                                }
                            }, l ? u : void 0 !== o.route.element ? o.route.element : e)
                        };
                    return r && (o.route.errorElement || 0 === s) ? t.createElement(xe, {
                        location: r.location,
                        component: u,
                        error: l,
                        children: f(),
                        routeContext: {
                            outlet: null,
                            matches: c
                        }
                    }) : f()
                }), null)
            }

            function we(e) {
                var n = t.useContext(le);
                return n || A(!1), n
            }

            function Se(e) {
                var n = function(e) {
                        var n = t.useContext(de);
                        return n || A(!1), n
                    }(),
                    r = n.matches[n.matches.length - 1];
                return r.route.id || A(!1), r.route.id
            }! function(e) {
                e.UseBlocker = "useBlocker", e.UseRevalidator = "useRevalidator"
            }(ge || (ge = {})),
            function(e) {
                e.UseLoaderData = "useLoaderData", e.UseActionData = "useActionData", e.UseRouteError = "useRouteError", e.UseNavigation = "useNavigation", e.UseRouteLoaderData = "useRouteLoaderData", e.UseMatches = "useMatches", e.UseRevalidator = "useRevalidator"
            }(ye || (ye = {}));
            var Me;

            function ke(e) {
                A(!1)
            }

            function Ee(n) {
                var r = n.basename,
                    i = void 0 === r ? "/" : r,
                    a = n.children,
                    o = void 0 === a ? null : a,
                    s = n.location,
                    l = n.navigationType,
                    u = void 0 === l ? e.Pop : l,
                    c = n.navigator,
                    f = n.static,
                    d = void 0 !== f && f;
                pe() && A(!1);
                var h = i.replace(/^\/*/, "/"),
                    p = t.useMemo((function() {
                        return {
                            basename: h,
                            navigator: c,
                            static: d
                        }
                    }), [h, c, d]);
                "string" === typeof s && (s = I(s));
                var v = s,
                    m = v.pathname,
                    g = void 0 === m ? "/" : m,
                    y = v.search,
                    x = void 0 === y ? "" : y,
                    b = v.hash,
                    _ = void 0 === b ? "" : b,
                    w = v.state,
                    S = void 0 === w ? null : w,
                    M = v.key,
                    k = void 0 === M ? "default" : M,
                    E = t.useMemo((function() {
                        var e = j(g, h);
                        return null == e ? null : {
                            pathname: e,
                            search: x,
                            hash: _,
                            state: S,
                            key: k
                        }
                    }), [h, g, x, _, S, k]);
                return null == E ? null : t.createElement(ce.Provider, {
                    value: p
                }, t.createElement(fe.Provider, {
                    children: o,
                    value: {
                        location: E,
                        navigationType: u
                    }
                }))
            }

            function Te(n) {
                var r = n.children,
                    i = n.location,
                    a = t.useContext(se);
                return function(n, r) {
                    pe() || A(!1);
                    var i, a = t.useContext(ce).navigator,
                        o = t.useContext(le),
                        s = t.useContext(de).matches,
                        l = s[s.length - 1],
                        u = l ? l.params : {},
                        c = (l && l.pathname, l ? l.pathnameBase : "/"),
                        f = (l && l.route, ve());
                    if (r) {
                        var d, h = "string" === typeof r ? I(r) : r;
                        "/" === c || (null == (d = h.pathname) ? void 0 : d.startsWith(c)) || A(!1), i = h
                    } else i = f;
                    var p = i.pathname || "/",
                        v = O(n, {
                            pathname: "/" === c ? p : p.slice(c.length) || "/"
                        }),
                        m = _e(v && v.map((function(e) {
                            return Object.assign({}, e, {
                                params: Object.assign({}, u, e.params),
                                pathname: X([c, a.encodeLocation ? a.encodeLocation(e.pathname).pathname : e.pathname]),
                                pathnameBase: "/" === e.pathnameBase ? c : X([c, a.encodeLocation ? a.encodeLocation(e.pathnameBase).pathname : e.pathnameBase])
                            })
                        })), s, o || void 0);
                    return r && m ? t.createElement(fe.Provider, {
                        value: {
                            location: ee({
                                pathname: "/",
                                search: "",
                                hash: "",
                                state: null,
                                key: "default"
                            }, i),
                            navigationType: e.Pop
                        }
                    }, m) : m
                }(a && !r ? a.router.routes : Ae(r), i)
            }! function(e) {
                e[e.pending = 0] = "pending", e[e.success = 1] = "success", e[e.error = 2] = "error"
            }(Me || (Me = {}));
            var Le = new Promise((function() {}));
            t.Component;

            function Ae(e, n) {
                void 0 === n && (n = []);
                var r = [];
                return t.Children.forEach(e, (function(e, i) {
                    if (t.isValidElement(e))
                        if (e.type !== t.Fragment) {
                            e.type !== ke && A(!1), e.props.index && e.props.children && A(!1);
                            var a = [].concat(f(n), [i]),
                                o = {
                                    id: e.props.id || a.join("-"),
                                    caseSensitive: e.props.caseSensitive,
                                    element: e.props.element,
                                    index: e.props.index,
                                    path: e.props.path,
                                    loader: e.props.loader,
                                    action: e.props.action,
                                    errorElement: e.props.errorElement,
                                    hasErrorBoundary: null != e.props.errorElement,
                                    shouldRevalidate: e.props.shouldRevalidate,
                                    handle: e.props.handle
                                };
                            e.props.children && (o.children = Ae(e.props.children, a)), r.push(o)
                        } else r.push.apply(r, Ae(e.props.children, n))
                })), r
            }

            function Ce(e) {
                var n, r = e.basename,
                    i = e.children,
                    a = e.window,
                    o = t.useRef();
                null == o.current && (o.current = (void 0 === (n = {
                    window: a,
                    v5Compat: !0
                }) && (n = {}), z((function(e, t) {
                    var n = e.location;
                    return R("", {
                        pathname: n.pathname,
                        search: n.search,
                        hash: n.hash
                    }, t.state && t.state.usr || null, t.state && t.state.key || "default")
                }), (function(e, t) {
                    return "string" === typeof t ? t : N(t)
                }), null, n)));
                var s = o.current,
                    l = u(t.useState({
                        action: s.action,
                        location: s.location
                    }), 2),
                    c = l[0],
                    f = l[1];
                return t.useLayoutEffect((function() {
                    return s.listen(f)
                }), [s]), t.createElement(Ee, {
                    basename: r,
                    children: i,
                    location: c.location,
                    navigationType: c.action,
                    navigator: s
                })
            }
            var Pe, Re;
            (function(e) {
                e.UseScrollRestoration = "useScrollRestoration", e.UseSubmitImpl = "useSubmitImpl", e.UseFetcher = "useFetcher"
            })(Pe || (Pe = {})),
            function(e) {
                e.UseFetchers = "useFetchers", e.UseScrollRestoration = "useScrollRestoration"
            }(Re || (Re = {}));
            var Ne;

            function Ie(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function ze(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function Oe(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? ze(Object(n), !0).forEach((function(t) {
                        Ie(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ze(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }

            function De() {
                De = function() {
                    return e
                };
                var e = {},
                    t = Object.prototype,
                    n = t.hasOwnProperty,
                    r = Object.defineProperty || function(e, t, n) {
                        e[t] = n.value
                    },
                    i = "function" == typeof Symbol ? Symbol : {},
                    a = i.iterator || "@@iterator",
                    o = i.asyncIterator || "@@asyncIterator",
                    s = i.toStringTag || "@@toStringTag";

                function l(e, t, n) {
                    return Object.defineProperty(e, t, {
                        value: n,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t]
                }
                try {
                    l({}, "")
                } catch (A) {
                    l = function(e, t, n) {
                        return e[t] = n
                    }
                }

                function u(e, t, n, i) {
                    var a = t && t.prototype instanceof d ? t : d,
                        o = Object.create(a.prototype),
                        s = new E(i || []);
                    return r(o, "_invoke", {
                        value: w(e, n, s)
                    }), o
                }

                function c(e, t, n) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, n)
                        }
                    } catch (A) {
                        return {
                            type: "throw",
                            arg: A
                        }
                    }
                }
                e.wrap = u;
                var f = {};

                function d() {}

                function h() {}

                function p() {}
                var v = {};
                l(v, a, (function() {
                    return this
                }));
                var m = Object.getPrototypeOf,
                    g = m && m(m(T([])));
                g && g !== t && n.call(g, a) && (v = g);
                var y = p.prototype = d.prototype = Object.create(v);

                function b(e) {
                    ["next", "throw", "return"].forEach((function(t) {
                        l(e, t, (function(e) {
                            return this._invoke(t, e)
                        }))
                    }))
                }

                function _(e, t) {
                    function i(r, a, o, s) {
                        var l = c(e[r], e, a);
                        if ("throw" !== l.type) {
                            var u = l.arg,
                                f = u.value;
                            return f && "object" == x(f) && n.call(f, "__await") ? t.resolve(f.__await).then((function(e) {
                                i("next", e, o, s)
                            }), (function(e) {
                                i("throw", e, o, s)
                            })) : t.resolve(f).then((function(e) {
                                u.value = e, o(u)
                            }), (function(e) {
                                return i("throw", e, o, s)
                            }))
                        }
                        s(l.arg)
                    }
                    var a;
                    r(this, "_invoke", {
                        value: function(e, n) {
                            function r() {
                                return new t((function(t, r) {
                                    i(e, n, t, r)
                                }))
                            }
                            return a = a ? a.then(r, r) : r()
                        }
                    })
                }

                function w(e, t, n) {
                    var r = "suspendedStart";
                    return function(i, a) {
                        if ("executing" === r) throw new Error("Generator is already running");
                        if ("completed" === r) {
                            if ("throw" === i) throw a;
                            return L()
                        }
                        for (n.method = i, n.arg = a;;) {
                            var o = n.delegate;
                            if (o) {
                                var s = S(o, n);
                                if (s) {
                                    if (s === f) continue;
                                    return s
                                }
                            }
                            if ("next" === n.method) n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if ("suspendedStart" === r) throw r = "completed", n.arg;
                                n.dispatchException(n.arg)
                            } else "return" === n.method && n.abrupt("return", n.arg);
                            r = "executing";
                            var l = c(e, t, n);
                            if ("normal" === l.type) {
                                if (r = n.done ? "completed" : "suspendedYield", l.arg === f) continue;
                                return {
                                    value: l.arg,
                                    done: n.done
                                }
                            }
                            "throw" === l.type && (r = "completed", n.method = "throw", n.arg = l.arg)
                        }
                    }
                }

                function S(e, t) {
                    var n = e.iterator[t.method];
                    if (void 0 === n) {
                        if (t.delegate = null, "throw" === t.method) {
                            if (e.iterator.return && (t.method = "return", t.arg = void 0, S(e, t), "throw" === t.method)) return f;
                            t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return f
                    }
                    var r = c(n, e.iterator, t.arg);
                    if ("throw" === r.type) return t.method = "throw", t.arg = r.arg, t.delegate = null, f;
                    var i = r.arg;
                    return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
                }

                function M(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
                }

                function k(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t
                }

                function E(e) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }], e.forEach(M, this), this.reset(!0)
                }

                function T(e) {
                    if (e) {
                        var t = e[a];
                        if (t) return t.call(e);
                        if ("function" == typeof e.next) return e;
                        if (!isNaN(e.length)) {
                            var r = -1,
                                i = function t() {
                                    for (; ++r < e.length;)
                                        if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                    return t.value = void 0, t.done = !0, t
                                };
                            return i.next = i
                        }
                    }
                    return {
                        next: L
                    }
                }

                function L() {
                    return {
                        value: void 0,
                        done: !0
                    }
                }
                return h.prototype = p, r(y, "constructor", {
                    value: p,
                    configurable: !0
                }), r(p, "constructor", {
                    value: h,
                    configurable: !0
                }), h.displayName = l(p, s, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === h || "GeneratorFunction" === (t.displayName || t.name))
                }, e.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, l(e, s, "GeneratorFunction")), e.prototype = Object.create(y), e
                }, e.awrap = function(e) {
                    return {
                        __await: e
                    }
                }, b(_.prototype), l(_.prototype, o, (function() {
                    return this
                })), e.AsyncIterator = _, e.async = function(t, n, r, i, a) {
                    void 0 === a && (a = Promise);
                    var o = new _(u(t, n, r, i), a);
                    return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                        return e.done ? e.value : o.next()
                    }))
                }, b(y), l(y, s, "Generator"), l(y, a, (function() {
                    return this
                })), l(y, "toString", (function() {
                    return "[object Generator]"
                })), e.keys = function(e) {
                    var t = Object(e),
                        n = [];
                    for (var r in t) n.push(r);
                    return n.reverse(),
                        function e() {
                            for (; n.length;) {
                                var r = n.pop();
                                if (r in t) return e.value = r, e.done = !1, e
                            }
                            return e.done = !0, e
                        }
                }, e.values = T, E.prototype = {
                    constructor: E,
                    reset: function(e) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(k), !e)
                            for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(e) {
                        if (this.done) throw e;
                        var t = this;

                        function r(n, r) {
                            return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                        }
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var a = this.tryEntries[i],
                                o = a.completion;
                            if ("root" === a.tryLoc) return r("end");
                            if (a.tryLoc <= this.prev) {
                                var s = n.call(a, "catchLoc"),
                                    l = n.call(a, "finallyLoc");
                                if (s && l) {
                                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                    if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                                } else if (s) {
                                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                                } else {
                                    if (!l) throw new Error("try statement without catch or finally");
                                    if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                            var i = this.tryEntries[r];
                            if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                                var a = i;
                                break
                            }
                        }
                        a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                        var o = a ? a.completion : {};
                        return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), k(n), f
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var n = this.tryEntries[t];
                            if (n.tryLoc === e) {
                                var r = n.completion;
                                if ("throw" === r.type) {
                                    var i = r.arg;
                                    k(n)
                                }
                                return i
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, t, n) {
                        return this.delegate = {
                            iterator: T(e),
                            resultName: t,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = void 0), f
                    }
                }, e
            }

            function Fe(e, t, n, r, i, a, o) {
                try {
                    var s = e[a](o),
                        l = s.value
                } catch (u) {
                    return void n(u)
                }
                s.done ? t(l) : Promise.resolve(l).then(r, i)
            }

            function Be(e, t) {
                for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = g(e)););
                return e
            }

            function Ue() {
                return Ue = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, n) {
                    var r = Be(e, t);
                    if (r) {
                        var i = Object.getOwnPropertyDescriptor(r, t);
                        return i.get ? i.get.call(arguments.length < 3 ? e : n) : i.value
                    }
                }, Ue.apply(this, arguments)
            }
            for (var He = 100, Ve = 301, Ge = 302, We = 303, je = 304, qe = 306, Xe = 307, Ye = 1e3, Ze = 1001, Je = 1002, $e = 1003, Qe = 1004, Ke = 1005, et = 1006, tt = 1008, nt = 1009, rt = 1012, it = 1014, at = 1015, ot = 1016, st = 1020, lt = 1022, ut = 1023, ct = 1026, ft = 1027, dt = 2300, ht = 2301, pt = 2302, vt = 2400, mt = 2401, gt = 2402, yt = 2500, xt = 2501, bt = 3e3, _t = 3001, wt = 3007, St = 3002, Mt = 7680, kt = 35044, Et = 35048, Tt = "300 es", Lt = function() {
                    function e() {
                        d(this, e)
                    }
                    return p(e, [{
                        key: "addEventListener",
                        value: function(e, t) {
                            void 0 === this._listeners && (this._listeners = {});
                            var n = this._listeners;
                            void 0 === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t)
                        }
                    }, {
                        key: "hasEventListener",
                        value: function(e, t) {
                            if (void 0 === this._listeners) return !1;
                            var n = this._listeners;
                            return void 0 !== n[e] && -1 !== n[e].indexOf(t)
                        }
                    }, {
                        key: "removeEventListener",
                        value: function(e, t) {
                            if (void 0 !== this._listeners) {
                                var n = this._listeners[e];
                                if (void 0 !== n) {
                                    var r = n.indexOf(t); - 1 !== r && n.splice(r, 1)
                                }
                            }
                        }
                    }, {
                        key: "dispatchEvent",
                        value: function(e) {
                            if (void 0 !== this._listeners) {
                                var t = this._listeners[e.type];
                                if (void 0 !== t) {
                                    e.target = this;
                                    for (var n = t.slice(0), r = 0, i = n.length; r < i; r++) n[r].call(this, e);
                                    e.target = null
                                }
                            }
                        }
                    }]), e
                }(), At = [], Ct = 0; Ct < 256; Ct++) At[Ct] = (Ct < 16 ? "0" : "") + Ct.toString(16);
            var Pt = Math.PI / 180,
                Rt = 180 / Math.PI;

            function Nt() {
                var e = 4294967295 * Math.random() | 0,
                    t = 4294967295 * Math.random() | 0,
                    n = 4294967295 * Math.random() | 0,
                    r = 4294967295 * Math.random() | 0;
                return (At[255 & e] + At[e >> 8 & 255] + At[e >> 16 & 255] + At[e >> 24 & 255] + "-" + At[255 & t] + At[t >> 8 & 255] + "-" + At[t >> 16 & 15 | 64] + At[t >> 24 & 255] + "-" + At[63 & n | 128] + At[n >> 8 & 255] + "-" + At[n >> 16 & 255] + At[n >> 24 & 255] + At[255 & r] + At[r >> 8 & 255] + At[r >> 16 & 255] + At[r >> 24 & 255]).toUpperCase()
            }

            function It(e, t, n) {
                return Math.max(t, Math.min(n, e))
            }

            function zt(e, t) {
                return (e % t + t) % t
            }

            function Ot(e, t, n) {
                return (1 - n) * e + n * t
            }

            function Dt(e) {
                return 0 === (e & e - 1) && 0 !== e
            }

            function Ft(e) {
                return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
            }
            var Bt = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    d(this, e), this.x = t, this.y = n
                }
                return p(e, [{
                    key: "width",
                    get: function() {
                        return this.x
                    },
                    set: function(e) {
                        this.x = e
                    }
                }, {
                    key: "height",
                    get: function() {
                        return this.y
                    },
                    set: function(e) {
                        this.y = e
                    }
                }, {
                    key: "set",
                    value: function(e, t) {
                        return this.x = e, this.y = t, this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.x = e, this.y = e, this
                    }
                }, {
                    key: "setX",
                    value: function(e) {
                        return this.x = e, this
                    }
                }, {
                    key: "setY",
                    value: function(e) {
                        return this.y = e, this
                    }
                }, {
                    key: "setComponent",
                    value: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                        return this
                    }
                }, {
                    key: "getComponent",
                    value: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.x, this.y)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.x = e.x, this.y = e.y, this
                    }
                }, {
                    key: "add",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.x += e, this.y += e, this
                    }
                }, {
                    key: "addVectors",
                    value: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this
                    }
                }, {
                    key: "addScaledVector",
                    value: function(e, t) {
                        return this.x += e.x * t, this.y += e.y * t, this
                    }
                }, {
                    key: "sub",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
                    }
                }, {
                    key: "subScalar",
                    value: function(e) {
                        return this.x -= e, this.y -= e, this
                    }
                }, {
                    key: "subVectors",
                    value: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.x *= e.x, this.y *= e.y, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.x *= e, this.y *= e, this
                    }
                }, {
                    key: "divide",
                    value: function(e) {
                        return this.x /= e.x, this.y /= e.y, this
                    }
                }, {
                    key: "divideScalar",
                    value: function(e) {
                        return this.multiplyScalar(1 / e)
                    }
                }, {
                    key: "applyMatrix3",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = e.elements;
                        return this.x = r[0] * t + r[3] * n + r[6], this.y = r[1] * t + r[4] * n + r[7], this
                    }
                }, {
                    key: "min",
                    value: function(e) {
                        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this
                    }
                }, {
                    key: "max",
                    value: function(e) {
                        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this
                    }
                }, {
                    key: "clamp",
                    value: function(e, t) {
                        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this
                    }
                }, {
                    key: "clampScalar",
                    value: function(e, t) {
                        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this
                    }
                }, {
                    key: "clampLength",
                    value: function(e, t) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                    }
                }, {
                    key: "floor",
                    value: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
                    }
                }, {
                    key: "ceil",
                    value: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
                    }
                }, {
                    key: "round",
                    value: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this
                    }
                }, {
                    key: "roundToZero",
                    value: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
                    }
                }, {
                    key: "negate",
                    value: function() {
                        return this.x = -this.x, this.y = -this.y, this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this.x * e.x + this.y * e.y
                    }
                }, {
                    key: "cross",
                    value: function(e) {
                        return this.x * e.y - this.y * e.x
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this.x * this.x + this.y * this.y
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y)
                    }
                }, {
                    key: "manhattanLength",
                    value: function() {
                        return Math.abs(this.x) + Math.abs(this.y)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        return this.divideScalar(this.length() || 1)
                    }
                }, {
                    key: "angle",
                    value: function() {
                        var e = Math.atan2(-this.y, -this.x) + Math.PI;
                        return e
                    }
                }, {
                    key: "distanceTo",
                    value: function(e) {
                        return Math.sqrt(this.distanceToSquared(e))
                    }
                }, {
                    key: "distanceToSquared",
                    value: function(e) {
                        var t = this.x - e.x,
                            n = this.y - e.y;
                        return t * t + n * n
                    }
                }, {
                    key: "manhattanDistanceTo",
                    value: function(e) {
                        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
                    }
                }, {
                    key: "setLength",
                    value: function(e) {
                        return this.normalize().multiplyScalar(e)
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
                    }
                }, {
                    key: "lerpVectors",
                    value: function(e, t, n) {
                        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.x === this.x && e.y === this.y
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.x = e[t], this.y = e[t + 1], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.x, e[t + 1] = this.y, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t, n) {
                        return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this
                    }
                }, {
                    key: "rotateAround",
                    value: function(e, t) {
                        var n = Math.cos(t),
                            r = Math.sin(t),
                            i = this.x - e.x,
                            a = this.y - e.y;
                        return this.x = i * n - a * r + e.x, this.y = i * r + a * n + e.y, this
                    }
                }, {
                    key: "random",
                    value: function() {
                        return this.x = Math.random(), this.y = Math.random(), this
                    }
                }]), e
            }();
            Bt.prototype.isVector2 = !0;
            var Ut, Ht = function() {
                function e() {
                    d(this, e), this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
                }
                return p(e, [{
                    key: "set",
                    value: function(e, t, n, r, i, a, o, s, l) {
                        var u = this.elements;
                        return u[0] = e, u[1] = r, u[2] = o, u[3] = t, u[4] = i, u[5] = s, u[6] = n, u[7] = a, u[8] = l, this
                    }
                }, {
                    key: "identity",
                    value: function() {
                        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        var t = this.elements,
                            n = e.elements;
                        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this
                    }
                }, {
                    key: "extractBasis",
                    value: function(e, t, n) {
                        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this
                    }
                }, {
                    key: "setFromMatrix4",
                    value: function(e) {
                        var t = e.elements;
                        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.multiplyMatrices(this, e)
                    }
                }, {
                    key: "premultiply",
                    value: function(e) {
                        return this.multiplyMatrices(e, this)
                    }
                }, {
                    key: "multiplyMatrices",
                    value: function(e, t) {
                        var n = e.elements,
                            r = t.elements,
                            i = this.elements,
                            a = n[0],
                            o = n[3],
                            s = n[6],
                            l = n[1],
                            u = n[4],
                            c = n[7],
                            f = n[2],
                            d = n[5],
                            h = n[8],
                            p = r[0],
                            v = r[3],
                            m = r[6],
                            g = r[1],
                            y = r[4],
                            x = r[7],
                            b = r[2],
                            _ = r[5],
                            w = r[8];
                        return i[0] = a * p + o * g + s * b, i[3] = a * v + o * y + s * _, i[6] = a * m + o * x + s * w, i[1] = l * p + u * g + c * b, i[4] = l * v + u * y + c * _, i[7] = l * m + u * x + c * w, i[2] = f * p + d * g + h * b, i[5] = f * v + d * y + h * _, i[8] = f * m + d * x + h * w, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        var t = this.elements;
                        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
                    }
                }, {
                    key: "determinant",
                    value: function() {
                        var e = this.elements,
                            t = e[0],
                            n = e[1],
                            r = e[2],
                            i = e[3],
                            a = e[4],
                            o = e[5],
                            s = e[6],
                            l = e[7],
                            u = e[8];
                        return t * a * u - t * o * l - n * i * u + n * o * s + r * i * l - r * a * s
                    }
                }, {
                    key: "invert",
                    value: function() {
                        var e = this.elements,
                            t = e[0],
                            n = e[1],
                            r = e[2],
                            i = e[3],
                            a = e[4],
                            o = e[5],
                            s = e[6],
                            l = e[7],
                            u = e[8],
                            c = u * a - o * l,
                            f = o * s - u * i,
                            d = l * i - a * s,
                            h = t * c + n * f + r * d;
                        if (0 === h) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                        var p = 1 / h;
                        return e[0] = c * p, e[1] = (r * l - u * n) * p, e[2] = (o * n - r * a) * p, e[3] = f * p, e[4] = (u * t - r * s) * p, e[5] = (r * i - o * t) * p, e[6] = d * p, e[7] = (n * s - l * t) * p, e[8] = (a * t - n * i) * p, this
                    }
                }, {
                    key: "transpose",
                    value: function() {
                        var e, t = this.elements;
                        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
                    }
                }, {
                    key: "getNormalMatrix",
                    value: function(e) {
                        return this.setFromMatrix4(e).invert().transpose()
                    }
                }, {
                    key: "transposeIntoArray",
                    value: function(e) {
                        var t = this.elements;
                        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
                    }
                }, {
                    key: "setUvTransform",
                    value: function(e, t, n, r, i, a, o) {
                        var s = Math.cos(i),
                            l = Math.sin(i);
                        return this.set(n * s, n * l, -n * (s * a + l * o) + a + e, -r * l, r * s, -r * (-l * a + s * o) + o + t, 0, 0, 1), this
                    }
                }, {
                    key: "scale",
                    value: function(e, t) {
                        var n = this.elements;
                        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this
                    }
                }, {
                    key: "rotate",
                    value: function(e) {
                        var t = Math.cos(e),
                            n = Math.sin(e),
                            r = this.elements,
                            i = r[0],
                            a = r[3],
                            o = r[6],
                            s = r[1],
                            l = r[4],
                            u = r[7];
                        return r[0] = t * i + n * s, r[3] = t * a + n * l, r[6] = t * o + n * u, r[1] = -n * i + t * s, r[4] = -n * a + t * l, r[7] = -n * o + t * u, this
                    }
                }, {
                    key: "translate",
                    value: function(e, t) {
                        var n = this.elements;
                        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                            if (t[r] !== n[r]) return !1;
                        return !0
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = 0; n < 9; n++) this.elements[n] = e[n + t];
                        return this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = this.elements;
                        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).fromArray(this.elements)
                    }
                }]), e
            }();
            Ht.prototype.isMatrix3 = !0;
            var Vt = function() {
                    function e() {
                        d(this, e)
                    }
                    return p(e, null, [{
                        key: "getDataURL",
                        value: function(e) {
                            if (/^data:/i.test(e.src)) return e.src;
                            if ("undefined" == typeof HTMLCanvasElement) return e.src;
                            var t;
                            if (e instanceof HTMLCanvasElement) t = e;
                            else {
                                void 0 === Ut && (Ut = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), Ut.width = e.width, Ut.height = e.height;
                                var n = Ut.getContext("2d");
                                e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = Ut
                            }
                            return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png")
                        }
                    }]), e
                }(),
                Gt = 0,
                Wt = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.DEFAULT_IMAGE,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.DEFAULT_MAPPING,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Ze,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Ze,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : et,
                            l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : tt,
                            u = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : ut,
                            c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : nt,
                            f = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 1,
                            h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : bt;
                        return d(this, n), e = t.call(this), Object.defineProperty(b(e), "id", {
                            value: Gt++
                        }), e.uuid = Nt(), e.name = "", e.image = r, e.mipmaps = [], e.mapping = i, e.wrapS = a, e.wrapT = o, e.magFilter = s, e.minFilter = l, e.anisotropy = f, e.format = u, e.internalFormat = null, e.type = c, e.offset = new Bt(0, 0), e.repeat = new Bt(1, 1), e.center = new Bt(0, 0), e.rotation = 0, e.matrixAutoUpdate = !0, e.matrix = new Ht, e.generateMipmaps = !0, e.premultiplyAlpha = !1, e.flipY = !0, e.unpackAlignment = 4, e.encoding = h, e.version = 0, e.onUpdate = null, e.isRenderTargetTexture = !1, e
                    }
                    return p(n, [{
                        key: "updateMatrix",
                        value: function() {
                            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = void 0 === e || "string" === typeof e;
                            if (!t && void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];
                            var n = {
                                metadata: {
                                    version: 4.5,
                                    type: "Texture",
                                    generator: "Texture.toJSON"
                                },
                                uuid: this.uuid,
                                name: this.name,
                                mapping: this.mapping,
                                repeat: [this.repeat.x, this.repeat.y],
                                offset: [this.offset.x, this.offset.y],
                                center: [this.center.x, this.center.y],
                                rotation: this.rotation,
                                wrap: [this.wrapS, this.wrapT],
                                format: this.format,
                                type: this.type,
                                encoding: this.encoding,
                                minFilter: this.minFilter,
                                magFilter: this.magFilter,
                                anisotropy: this.anisotropy,
                                flipY: this.flipY,
                                premultiplyAlpha: this.premultiplyAlpha,
                                unpackAlignment: this.unpackAlignment
                            };
                            if (void 0 !== this.image) {
                                var r = this.image;
                                if (void 0 === r.uuid && (r.uuid = Nt()), !t && void 0 === e.images[r.uuid]) {
                                    var i;
                                    if (Array.isArray(r)) {
                                        i = [];
                                        for (var a = 0, o = r.length; a < o; a++) r[a].isDataTexture ? i.push(jt(r[a].image)) : i.push(jt(r[a]))
                                    } else i = jt(r);
                                    e.images[r.uuid] = {
                                        uuid: r.uuid,
                                        url: i
                                    }
                                }
                                n.image = r.uuid
                            }
                            return t || (e.textures[this.uuid] = n), n
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }, {
                        key: "transformUv",
                        value: function(e) {
                            if (300 !== this.mapping) return e;
                            if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {
                                case Ye:
                                    e.x = e.x - Math.floor(e.x);
                                    break;
                                case Ze:
                                    e.x = e.x < 0 ? 0 : 1;
                                    break;
                                case Je:
                                    1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                            }
                            if (e.y < 0 || e.y > 1) switch (this.wrapT) {
                                case Ye:
                                    e.y = e.y - Math.floor(e.y);
                                    break;
                                case Ze:
                                    e.y = e.y < 0 ? 0 : 1;
                                    break;
                                case Je:
                                    1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                            }
                            return this.flipY && (e.y = 1 - e.y), e
                        }
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }]), n
                }(Lt);

            function jt(e) {
                return "undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" !== typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && e instanceof ImageBitmap ? Vt.getDataURL(e) : e.data ? {
                    data: Array.prototype.slice.call(e.data),
                    width: e.width,
                    height: e.height,
                    type: e.data.constructor.name
                } : (console.warn("THREE.Texture: Unable to serialize Texture."), {})
            }
            Wt.DEFAULT_IMAGE = void 0, Wt.DEFAULT_MAPPING = 300, Wt.prototype.isTexture = !0;
            var qt = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    d(this, e), this.x = t, this.y = n, this.z = r, this.w = i
                }
                return p(e, [{
                    key: "width",
                    get: function() {
                        return this.z
                    },
                    set: function(e) {
                        this.z = e
                    }
                }, {
                    key: "height",
                    get: function() {
                        return this.w
                    },
                    set: function(e) {
                        this.w = e
                    }
                }, {
                    key: "set",
                    value: function(e, t, n, r) {
                        return this.x = e, this.y = t, this.z = n, this.w = r, this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.x = e, this.y = e, this.z = e, this.w = e, this
                    }
                }, {
                    key: "setX",
                    value: function(e) {
                        return this.x = e, this
                    }
                }, {
                    key: "setY",
                    value: function(e) {
                        return this.y = e, this
                    }
                }, {
                    key: "setZ",
                    value: function(e) {
                        return this.z = e, this
                    }
                }, {
                    key: "setW",
                    value: function(e) {
                        return this.w = e, this
                    }
                }, {
                    key: "setComponent",
                    value: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            case 2:
                                this.z = t;
                                break;
                            case 3:
                                this.w = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                        return this
                    }
                }, {
                    key: "getComponent",
                    value: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            case 3:
                                return this.w;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.x, this.y, this.z, this.w)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
                    }
                }, {
                    key: "add",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.x += e, this.y += e, this.z += e, this.w += e, this
                    }
                }, {
                    key: "addVectors",
                    value: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
                    }
                }, {
                    key: "addScaledVector",
                    value: function(e, t) {
                        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this
                    }
                }, {
                    key: "sub",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
                    }
                }, {
                    key: "subScalar",
                    value: function(e) {
                        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this
                    }
                }, {
                    key: "subVectors",
                    value: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this
                    }
                }, {
                    key: "applyMatrix4",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = this.w,
                            a = e.elements;
                        return this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i, this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i, this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i, this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i, this
                    }
                }, {
                    key: "divideScalar",
                    value: function(e) {
                        return this.multiplyScalar(1 / e)
                    }
                }, {
                    key: "setAxisAngleFromQuaternion",
                    value: function(e) {
                        this.w = 2 * Math.acos(e.w);
                        var t = Math.sqrt(1 - e.w * e.w);
                        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
                    }
                }, {
                    key: "setAxisAngleFromRotationMatrix",
                    value: function(e) {
                        var t, n, r, i, a = .01,
                            o = .1,
                            s = e.elements,
                            l = s[0],
                            u = s[4],
                            c = s[8],
                            f = s[1],
                            d = s[5],
                            h = s[9],
                            p = s[2],
                            v = s[6],
                            m = s[10];
                        if (Math.abs(u - f) < a && Math.abs(c - p) < a && Math.abs(h - v) < a) {
                            if (Math.abs(u + f) < o && Math.abs(c + p) < o && Math.abs(h + v) < o && Math.abs(l + d + m - 3) < o) return this.set(1, 0, 0, 0), this;
                            t = Math.PI;
                            var g = (l + 1) / 2,
                                y = (d + 1) / 2,
                                x = (m + 1) / 2,
                                b = (u + f) / 4,
                                _ = (c + p) / 4,
                                w = (h + v) / 4;
                            return g > y && g > x ? g < a ? (n = 0, r = .707106781, i = .707106781) : (r = b / (n = Math.sqrt(g)), i = _ / n) : y > x ? y < a ? (n = .707106781, r = 0, i = .707106781) : (n = b / (r = Math.sqrt(y)), i = w / r) : x < a ? (n = .707106781, r = .707106781, i = 0) : (n = _ / (i = Math.sqrt(x)), r = w / i), this.set(n, r, i, t), this
                        }
                        var S = Math.sqrt((v - h) * (v - h) + (c - p) * (c - p) + (f - u) * (f - u));
                        return Math.abs(S) < .001 && (S = 1), this.x = (v - h) / S, this.y = (c - p) / S, this.z = (f - u) / S, this.w = Math.acos((l + d + m - 1) / 2), this
                    }
                }, {
                    key: "min",
                    value: function(e) {
                        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this
                    }
                }, {
                    key: "max",
                    value: function(e) {
                        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this
                    }
                }, {
                    key: "clamp",
                    value: function(e, t) {
                        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this
                    }
                }, {
                    key: "clampScalar",
                    value: function(e, t) {
                        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this
                    }
                }, {
                    key: "clampLength",
                    value: function(e, t) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                    }
                }, {
                    key: "floor",
                    value: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
                    }
                }, {
                    key: "ceil",
                    value: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
                    }
                }, {
                    key: "round",
                    value: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
                    }
                }, {
                    key: "roundToZero",
                    value: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
                    }
                }, {
                    key: "negate",
                    value: function() {
                        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                    }
                }, {
                    key: "manhattanLength",
                    value: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        return this.divideScalar(this.length() || 1)
                    }
                }, {
                    key: "setLength",
                    value: function(e) {
                        return this.normalize().multiplyScalar(e)
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
                    }
                }, {
                    key: "lerpVectors",
                    value: function(e, t, n) {
                        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t, n) {
                        return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this
                    }
                }, {
                    key: "random",
                    value: function() {
                        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this
                    }
                }]), e
            }();
            qt.prototype.isVector4 = !0;
            var Xt = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    return d(this, n), (i = t.call(this)).width = e, i.height = r, i.depth = 1, i.scissor = new qt(0, 0, e, r), i.scissorTest = !1, i.viewport = new qt(0, 0, e, r), i.texture = new Wt(void 0, a.mapping, a.wrapS, a.wrapT, a.magFilter, a.minFilter, a.format, a.type, a.anisotropy, a.encoding), i.texture.isRenderTargetTexture = !0, i.texture.image = {
                        width: e,
                        height: r,
                        depth: 1
                    }, i.texture.generateMipmaps = void 0 !== a.generateMipmaps && a.generateMipmaps, i.texture.minFilter = void 0 !== a.minFilter ? a.minFilter : et, i.depthBuffer = void 0 === a.depthBuffer || a.depthBuffer, i.stencilBuffer = void 0 !== a.stencilBuffer && a.stencilBuffer, i.depthTexture = void 0 !== a.depthTexture ? a.depthTexture : null, i
                }
                return p(n, [{
                    key: "setTexture",
                    value: function(e) {
                        e.image = {
                            width: this.width,
                            height: this.height,
                            depth: this.depth
                        }, this.texture = e
                    }
                }, {
                    key: "setSize",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        this.width === e && this.height === t && this.depth === n || (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t)
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).copy(this)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = Oe({}, this.texture.image), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }]), n
            }(Lt);
            Xt.prototype.isWebGLRenderTarget = !0;
            var Yt = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    d(this, n);
                    var o = (a = t.call(this, e, r)).texture;
                    a.texture = [];
                    for (var s = 0; s < i; s++) a.texture[s] = o.clone();
                    return a
                }
                return p(n, [{
                    key: "setSize",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        if (this.width !== e || this.height !== t || this.depth !== n) {
                            this.width = e, this.height = t, this.depth = n;
                            for (var r = 0, i = this.texture.length; r < i; r++) this.texture[r].image.width = e, this.texture[r].image.height = t, this.texture[r].image.depth = n;
                            this.dispose()
                        }
                        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
                        for (var t = 0, n = e.texture.length; t < n; t++) this.texture[t] = e.texture[t].clone();
                        return this
                    }
                }]), n
            }(Xt);
            Yt.prototype.isWebGLMultipleRenderTargets = !0;
            var Zt = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    return d(this, n), (a = t.call(this, e, r, i)).samples = 4, a
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.samples = e.samples, this
                    }
                }]), n
            }(Xt);
            Zt.prototype.isWebGLMultisampleRenderTarget = !0;
            var Jt = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    d(this, e), this._x = t, this._y = n, this._z = r, this._w = i
                }
                return p(e, [{
                    key: "x",
                    get: function() {
                        return this._x
                    },
                    set: function(e) {
                        this._x = e, this._onChangeCallback()
                    }
                }, {
                    key: "y",
                    get: function() {
                        return this._y
                    },
                    set: function(e) {
                        this._y = e, this._onChangeCallback()
                    }
                }, {
                    key: "z",
                    get: function() {
                        return this._z
                    },
                    set: function(e) {
                        this._z = e, this._onChangeCallback()
                    }
                }, {
                    key: "w",
                    get: function() {
                        return this._w
                    },
                    set: function(e) {
                        this._w = e, this._onChangeCallback()
                    }
                }, {
                    key: "set",
                    value: function(e, t, n, r) {
                        return this._x = e, this._y = t, this._z = n, this._w = r, this._onChangeCallback(), this
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this._x, this._y, this._z, this._w)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromEuler",
                    value: function(e, t) {
                        if (!e || !e.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                        var n = e._x,
                            r = e._y,
                            i = e._z,
                            a = e._order,
                            o = Math.cos,
                            s = Math.sin,
                            l = o(n / 2),
                            u = o(r / 2),
                            c = o(i / 2),
                            f = s(n / 2),
                            d = s(r / 2),
                            h = s(i / 2);
                        switch (a) {
                            case "XYZ":
                                this._x = f * u * c + l * d * h, this._y = l * d * c - f * u * h, this._z = l * u * h + f * d * c, this._w = l * u * c - f * d * h;
                                break;
                            case "YXZ":
                                this._x = f * u * c + l * d * h, this._y = l * d * c - f * u * h, this._z = l * u * h - f * d * c, this._w = l * u * c + f * d * h;
                                break;
                            case "ZXY":
                                this._x = f * u * c - l * d * h, this._y = l * d * c + f * u * h, this._z = l * u * h + f * d * c, this._w = l * u * c - f * d * h;
                                break;
                            case "ZYX":
                                this._x = f * u * c - l * d * h, this._y = l * d * c + f * u * h, this._z = l * u * h - f * d * c, this._w = l * u * c + f * d * h;
                                break;
                            case "YZX":
                                this._x = f * u * c + l * d * h, this._y = l * d * c + f * u * h, this._z = l * u * h - f * d * c, this._w = l * u * c - f * d * h;
                                break;
                            case "XZY":
                                this._x = f * u * c - l * d * h, this._y = l * d * c - f * u * h, this._z = l * u * h + f * d * c, this._w = l * u * c + f * d * h;
                                break;
                            default:
                                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + a)
                        }
                        return !1 !== t && this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromAxisAngle",
                    value: function(e, t) {
                        var n = t / 2,
                            r = Math.sin(n);
                        return this._x = e.x * r, this._y = e.y * r, this._z = e.z * r, this._w = Math.cos(n), this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromRotationMatrix",
                    value: function(e) {
                        var t = e.elements,
                            n = t[0],
                            r = t[4],
                            i = t[8],
                            a = t[1],
                            o = t[5],
                            s = t[9],
                            l = t[2],
                            u = t[6],
                            c = t[10],
                            f = n + o + c;
                        if (f > 0) {
                            var d = .5 / Math.sqrt(f + 1);
                            this._w = .25 / d, this._x = (u - s) * d, this._y = (i - l) * d, this._z = (a - r) * d
                        } else if (n > o && n > c) {
                            var h = 2 * Math.sqrt(1 + n - o - c);
                            this._w = (u - s) / h, this._x = .25 * h, this._y = (r + a) / h, this._z = (i + l) / h
                        } else if (o > c) {
                            var p = 2 * Math.sqrt(1 + o - n - c);
                            this._w = (i - l) / p, this._x = (r + a) / p, this._y = .25 * p, this._z = (s + u) / p
                        } else {
                            var v = 2 * Math.sqrt(1 + c - n - o);
                            this._w = (a - r) / v, this._x = (i + l) / v, this._y = (s + u) / v, this._z = .25 * v
                        }
                        return this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromUnitVectors",
                    value: function(e, t) {
                        var n = e.dot(t) + 1;
                        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize()
                    }
                }, {
                    key: "angleTo",
                    value: function(e) {
                        return 2 * Math.acos(Math.abs(It(this.dot(e), -1, 1)))
                    }
                }, {
                    key: "rotateTowards",
                    value: function(e, t) {
                        var n = this.angleTo(e);
                        if (0 === n) return this;
                        var r = Math.min(1, t / n);
                        return this.slerp(e, r), this
                    }
                }, {
                    key: "identity",
                    value: function() {
                        return this.set(0, 0, 0, 1)
                    }
                }, {
                    key: "invert",
                    value: function() {
                        return this.conjugate()
                    }
                }, {
                    key: "conjugate",
                    value: function() {
                        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        var e = this.length();
                        return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this
                    }
                }, {
                    key: "multiply",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
                    }
                }, {
                    key: "premultiply",
                    value: function(e) {
                        return this.multiplyQuaternions(e, this)
                    }
                }, {
                    key: "multiplyQuaternions",
                    value: function(e, t) {
                        var n = e._x,
                            r = e._y,
                            i = e._z,
                            a = e._w,
                            o = t._x,
                            s = t._y,
                            l = t._z,
                            u = t._w;
                        return this._x = n * u + a * o + r * l - i * s, this._y = r * u + a * s + i * o - n * l, this._z = i * u + a * l + n * s - r * o, this._w = a * u - n * o - r * s - i * l, this._onChangeCallback(), this
                    }
                }, {
                    key: "slerp",
                    value: function(e, t) {
                        if (0 === t) return this;
                        if (1 === t) return this.copy(e);
                        var n = this._x,
                            r = this._y,
                            i = this._z,
                            a = this._w,
                            o = a * e._w + n * e._x + r * e._y + i * e._z;
                        if (o < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, o = -o) : this.copy(e), o >= 1) return this._w = a, this._x = n, this._y = r, this._z = i, this;
                        var s = 1 - o * o;
                        if (s <= Number.EPSILON) {
                            var l = 1 - t;
                            return this._w = l * a + t * this._w, this._x = l * n + t * this._x, this._y = l * r + t * this._y, this._z = l * i + t * this._z, this.normalize(), this._onChangeCallback(), this
                        }
                        var u = Math.sqrt(s),
                            c = Math.atan2(u, o),
                            f = Math.sin((1 - t) * c) / u,
                            d = Math.sin(t * c) / u;
                        return this._w = a * f + this._w * d, this._x = n * f + this._x * d, this._y = r * f + this._y * d, this._z = i * f + this._z * d, this._onChangeCallback(), this
                    }
                }, {
                    key: "slerpQuaternions",
                    value: function(e, t, n) {
                        this.copy(e).slerp(t, n)
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t) {
                        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this
                    }
                }, {
                    key: "_onChange",
                    value: function(e) {
                        return this._onChangeCallback = e, this
                    }
                }, {
                    key: "_onChangeCallback",
                    value: function() {}
                }], [{
                    key: "slerp",
                    value: function(e, t, n, r) {
                        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, r)
                    }
                }, {
                    key: "slerpFlat",
                    value: function(e, t, n, r, i, a, o) {
                        var s = n[r + 0],
                            l = n[r + 1],
                            u = n[r + 2],
                            c = n[r + 3],
                            f = i[a + 0],
                            d = i[a + 1],
                            h = i[a + 2],
                            p = i[a + 3];
                        if (0 === o) return e[t + 0] = s, e[t + 1] = l, e[t + 2] = u, void(e[t + 3] = c);
                        if (1 === o) return e[t + 0] = f, e[t + 1] = d, e[t + 2] = h, void(e[t + 3] = p);
                        if (c !== p || s !== f || l !== d || u !== h) {
                            var v = 1 - o,
                                m = s * f + l * d + u * h + c * p,
                                g = m >= 0 ? 1 : -1,
                                y = 1 - m * m;
                            if (y > Number.EPSILON) {
                                var x = Math.sqrt(y),
                                    b = Math.atan2(x, m * g);
                                v = Math.sin(v * b) / x, o = Math.sin(o * b) / x
                            }
                            var _ = o * g;
                            if (s = s * v + f * _, l = l * v + d * _, u = u * v + h * _, c = c * v + p * _, v === 1 - o) {
                                var w = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                                s *= w, l *= w, u *= w, c *= w
                            }
                        }
                        e[t] = s, e[t + 1] = l, e[t + 2] = u, e[t + 3] = c
                    }
                }, {
                    key: "multiplyQuaternionsFlat",
                    value: function(e, t, n, r, i, a) {
                        var o = n[r],
                            s = n[r + 1],
                            l = n[r + 2],
                            u = n[r + 3],
                            c = i[a],
                            f = i[a + 1],
                            d = i[a + 2],
                            h = i[a + 3];
                        return e[t] = o * h + u * c + s * d - l * f, e[t + 1] = s * h + u * f + l * c - o * d, e[t + 2] = l * h + u * d + o * f - s * c, e[t + 3] = u * h - o * c - s * f - l * d, e
                    }
                }]), e
            }();
            Jt.prototype.isQuaternion = !0;
            var $t = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    d(this, e), this.x = t, this.y = n, this.z = r
                }
                return p(e, [{
                    key: "set",
                    value: function(e, t, n) {
                        return void 0 === n && (n = this.z), this.x = e, this.y = t, this.z = n, this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.x = e, this.y = e, this.z = e, this
                    }
                }, {
                    key: "setX",
                    value: function(e) {
                        return this.x = e, this
                    }
                }, {
                    key: "setY",
                    value: function(e) {
                        return this.y = e, this
                    }
                }, {
                    key: "setZ",
                    value: function(e) {
                        return this.z = e, this
                    }
                }, {
                    key: "setComponent",
                    value: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            case 2:
                                this.z = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                        return this
                    }
                }, {
                    key: "getComponent",
                    value: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.x, this.y, this.z)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.x = e.x, this.y = e.y, this.z = e.z, this
                    }
                }, {
                    key: "add",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.x += e, this.y += e, this.z += e, this
                    }
                }, {
                    key: "addVectors",
                    value: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
                    }
                }, {
                    key: "addScaledVector",
                    value: function(e, t) {
                        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this
                    }
                }, {
                    key: "sub",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
                    }
                }, {
                    key: "subScalar",
                    value: function(e) {
                        return this.x -= e, this.y -= e, this.z -= e, this
                    }
                }, {
                    key: "subVectors",
                    value: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
                    }
                }, {
                    key: "multiply",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.x *= e, this.y *= e, this.z *= e, this
                    }
                }, {
                    key: "multiplyVectors",
                    value: function(e, t) {
                        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
                    }
                }, {
                    key: "applyEuler",
                    value: function(e) {
                        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Kt.setFromEuler(e))
                    }
                }, {
                    key: "applyAxisAngle",
                    value: function(e, t) {
                        return this.applyQuaternion(Kt.setFromAxisAngle(e, t))
                    }
                }, {
                    key: "applyMatrix3",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[3] * n + i[6] * r, this.y = i[1] * t + i[4] * n + i[7] * r, this.z = i[2] * t + i[5] * n + i[8] * r, this
                    }
                }, {
                    key: "applyNormalMatrix",
                    value: function(e) {
                        return this.applyMatrix3(e).normalize()
                    }
                }, {
                    key: "applyMatrix4",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.elements,
                            a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                        return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a, this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a, this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a, this
                    }
                }, {
                    key: "applyQuaternion",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.x,
                            a = e.y,
                            o = e.z,
                            s = e.w,
                            l = s * t + a * r - o * n,
                            u = s * n + o * t - i * r,
                            c = s * r + i * n - a * t,
                            f = -i * t - a * n - o * r;
                        return this.x = l * s + f * -i + u * -o - c * -a, this.y = u * s + f * -a + c * -i - l * -o, this.z = c * s + f * -o + l * -a - u * -i, this
                    }
                }, {
                    key: "project",
                    value: function(e) {
                        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
                    }
                }, {
                    key: "unproject",
                    value: function(e) {
                        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
                    }
                }, {
                    key: "transformDirection",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[4] * n + i[8] * r, this.y = i[1] * t + i[5] * n + i[9] * r, this.z = i[2] * t + i[6] * n + i[10] * r, this.normalize()
                    }
                }, {
                    key: "divide",
                    value: function(e) {
                        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
                    }
                }, {
                    key: "divideScalar",
                    value: function(e) {
                        return this.multiplyScalar(1 / e)
                    }
                }, {
                    key: "min",
                    value: function(e) {
                        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this
                    }
                }, {
                    key: "max",
                    value: function(e) {
                        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this
                    }
                }, {
                    key: "clamp",
                    value: function(e, t) {
                        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this
                    }
                }, {
                    key: "clampScalar",
                    value: function(e, t) {
                        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this
                    }
                }, {
                    key: "clampLength",
                    value: function(e, t) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                    }
                }, {
                    key: "floor",
                    value: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
                    }
                }, {
                    key: "ceil",
                    value: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
                    }
                }, {
                    key: "round",
                    value: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
                    }
                }, {
                    key: "roundToZero",
                    value: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
                    }
                }, {
                    key: "negate",
                    value: function() {
                        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this.x * e.x + this.y * e.y + this.z * e.z
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                    }
                }, {
                    key: "manhattanLength",
                    value: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        return this.divideScalar(this.length() || 1)
                    }
                }, {
                    key: "setLength",
                    value: function(e) {
                        return this.normalize().multiplyScalar(e)
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
                    }
                }, {
                    key: "lerpVectors",
                    value: function(e, t, n) {
                        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this
                    }
                }, {
                    key: "cross",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e)
                    }
                }, {
                    key: "crossVectors",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z,
                            a = t.x,
                            o = t.y,
                            s = t.z;
                        return this.x = r * s - i * o, this.y = i * a - n * s, this.z = n * o - r * a, this
                    }
                }, {
                    key: "projectOnVector",
                    value: function(e) {
                        var t = e.lengthSq();
                        if (0 === t) return this.set(0, 0, 0);
                        var n = e.dot(this) / t;
                        return this.copy(e).multiplyScalar(n)
                    }
                }, {
                    key: "projectOnPlane",
                    value: function(e) {
                        return Qt.copy(this).projectOnVector(e), this.sub(Qt)
                    }
                }, {
                    key: "reflect",
                    value: function(e) {
                        return this.sub(Qt.copy(e).multiplyScalar(2 * this.dot(e)))
                    }
                }, {
                    key: "angleTo",
                    value: function(e) {
                        var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                        if (0 === t) return Math.PI / 2;
                        var n = this.dot(e) / t;
                        return Math.acos(It(n, -1, 1))
                    }
                }, {
                    key: "distanceTo",
                    value: function(e) {
                        return Math.sqrt(this.distanceToSquared(e))
                    }
                }, {
                    key: "distanceToSquared",
                    value: function(e) {
                        var t = this.x - e.x,
                            n = this.y - e.y,
                            r = this.z - e.z;
                        return t * t + n * n + r * r
                    }
                }, {
                    key: "manhattanDistanceTo",
                    value: function(e) {
                        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
                    }
                }, {
                    key: "setFromSpherical",
                    value: function(e) {
                        return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
                    }
                }, {
                    key: "setFromSphericalCoords",
                    value: function(e, t, n) {
                        var r = Math.sin(t) * e;
                        return this.x = r * Math.sin(n), this.y = Math.cos(t) * e, this.z = r * Math.cos(n), this
                    }
                }, {
                    key: "setFromCylindrical",
                    value: function(e) {
                        return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
                    }
                }, {
                    key: "setFromCylindricalCoords",
                    value: function(e, t, n) {
                        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this
                    }
                }, {
                    key: "setFromMatrixPosition",
                    value: function(e) {
                        var t = e.elements;
                        return this.x = t[12], this.y = t[13], this.z = t[14], this
                    }
                }, {
                    key: "setFromMatrixScale",
                    value: function(e) {
                        var t = this.setFromMatrixColumn(e, 0).length(),
                            n = this.setFromMatrixColumn(e, 1).length(),
                            r = this.setFromMatrixColumn(e, 2).length();
                        return this.x = t, this.y = n, this.z = r, this
                    }
                }, {
                    key: "setFromMatrixColumn",
                    value: function(e, t) {
                        return this.fromArray(e.elements, 4 * t)
                    }
                }, {
                    key: "setFromMatrix3Column",
                    value: function(e, t) {
                        return this.fromArray(e.elements, 3 * t)
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.x === this.x && e.y === this.y && e.z === this.z
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t, n) {
                        return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this
                    }
                }, {
                    key: "random",
                    value: function() {
                        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this
                    }
                }]), e
            }();
            $t.prototype.isVector3 = !0;
            var Qt = new $t,
                Kt = new Jt,
                en = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t(1 / 0, 1 / 0, 1 / 0),
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t(-1 / 0, -1 / 0, -1 / 0);
                        d(this, e), this.min = t, this.max = n
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.min.copy(e), this.max.copy(t), this
                        }
                    }, {
                        key: "setFromArray",
                        value: function(e) {
                            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.length; s < l; s += 3) {
                                var u = e[s],
                                    c = e[s + 1],
                                    f = e[s + 2];
                                u < t && (t = u), c < n && (n = c), f < r && (r = f), u > i && (i = u), c > a && (a = c), f > o && (o = f)
                            }
                            return this.min.set(t, n, r), this.max.set(i, a, o), this
                        }
                    }, {
                        key: "setFromBufferAttribute",
                        value: function(e) {
                            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, l = e.count; s < l; s++) {
                                var u = e.getX(s),
                                    c = e.getY(s),
                                    f = e.getZ(s);
                                u < t && (t = u), c < n && (n = c), f < r && (r = f), u > i && (i = u), c > a && (a = c), f > o && (o = f)
                            }
                            return this.min.set(t, n, r), this.max.set(i, a, o), this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e) {
                            this.makeEmpty();
                            for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
                            return this
                        }
                    }, {
                        key: "setFromCenterAndSize",
                        value: function(e, t) {
                            var n = nn.copy(t).multiplyScalar(.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                        }
                    }, {
                        key: "setFromObject",
                        value: function(e) {
                            return this.makeEmpty(), this.expandByObject(e)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.min.copy(e.min), this.max.copy(e.max), this
                        }
                    }, {
                        key: "makeEmpty",
                        value: function() {
                            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                        }
                    }, {
                        key: "getCenter",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                        }
                    }, {
                        key: "getSize",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
                        }
                    }, {
                        key: "expandByPoint",
                        value: function(e) {
                            return this.min.min(e), this.max.max(e), this
                        }
                    }, {
                        key: "expandByVector",
                        value: function(e) {
                            return this.min.sub(e), this.max.add(e), this
                        }
                    }, {
                        key: "expandByScalar",
                        value: function(e) {
                            return this.min.addScalar(-e), this.max.addScalar(e), this
                        }
                    }, {
                        key: "expandByObject",
                        value: function(e) {
                            e.updateWorldMatrix(!1, !1);
                            var t = e.geometry;
                            void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(), rn.copy(t.boundingBox), rn.applyMatrix4(e.matrixWorld), this.union(rn));
                            for (var n = e.children, r = 0, i = n.length; r < i; r++) this.expandByObject(n[r]);
                            return this
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
                        }
                    }, {
                        key: "containsBox",
                        value: function(e) {
                            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
                        }
                    }, {
                        key: "getParameter",
                        value: function(e, t) {
                            return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            return this.clampPoint(e.center, nn), nn.distanceToSquared(e.center) <= e.radius * e.radius
                        }
                    }, {
                        key: "intersectsPlane",
                        value: function(e) {
                            var t, n;
                            return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant
                        }
                    }, {
                        key: "intersectsTriangle",
                        value: function(e) {
                            if (this.isEmpty()) return !1;
                            this.getCenter(fn), dn.subVectors(this.max, fn), an.subVectors(e.a, fn), on.subVectors(e.b, fn), sn.subVectors(e.c, fn), ln.subVectors(on, an), un.subVectors(sn, on), cn.subVectors(an, sn);
                            var t = [0, -ln.z, ln.y, 0, -un.z, un.y, 0, -cn.z, cn.y, ln.z, 0, -ln.x, un.z, 0, -un.x, cn.z, 0, -cn.x, -ln.y, ln.x, 0, -un.y, un.x, 0, -cn.y, cn.x, 0];
                            return !!vn(t, an, on, sn, dn) && (!!vn(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], an, on, sn, dn) && (hn.crossVectors(ln, un), vn(t = [hn.x, hn.y, hn.z], an, on, sn, dn)))
                        }
                    }, {
                        key: "clampPoint",
                        value: function(e, t) {
                            return t.copy(e).clamp(this.min, this.max)
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return nn.copy(e).clamp(this.min, this.max).sub(e).length()
                        }
                    }, {
                        key: "getBoundingSphere",
                        value: function(e) {
                            return this.getCenter(e.center), e.radius = .5 * this.getSize(nn).length(), e
                        }
                    }, {
                        key: "intersect",
                        value: function(e) {
                            return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this
                        }
                    }, {
                        key: "union",
                        value: function(e) {
                            return this.min.min(e.min), this.max.max(e.max), this
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.isEmpty() || (tn[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), tn[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), tn[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), tn[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), tn[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), tn[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), tn[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), tn[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(tn)), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.min.add(e), this.max.add(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.min.equals(this.min) && e.max.equals(this.max)
                        }
                    }]), e
                }();
            en.prototype.isBox3 = !0;
            var tn = [new $t, new $t, new $t, new $t, new $t, new $t, new $t, new $t],
                nn = new $t,
                rn = new en,
                an = new $t,
                on = new $t,
                sn = new $t,
                ln = new $t,
                un = new $t,
                cn = new $t,
                fn = new $t,
                dn = new $t,
                hn = new $t,
                pn = new $t;

            function vn(e, t, n, r, i) {
                for (var a = 0, o = e.length - 3; a <= o; a += 3) {
                    pn.fromArray(e, a);
                    var s = i.x * Math.abs(pn.x) + i.y * Math.abs(pn.y) + i.z * Math.abs(pn.z),
                        l = t.dot(pn),
                        u = n.dot(pn),
                        c = r.dot(pn);
                    if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s) return !1
                }
                return !0
            }
            var mn = new en,
                gn = new $t,
                yn = new $t,
                xn = new $t,
                bn = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;
                        d(this, e), this.center = t, this.radius = n
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.center.copy(e), this.radius = t, this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e, t) {
                            var n = this.center;
                            void 0 !== t ? n.copy(t) : mn.setFromPoints(e).getCenter(n);
                            for (var r = 0, i = 0, a = e.length; i < a; i++) r = Math.max(r, n.distanceToSquared(e[i]));
                            return this.radius = Math.sqrt(r), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.center.copy(e.center), this.radius = e.radius, this
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return this.radius < 0
                        }
                    }, {
                        key: "makeEmpty",
                        value: function() {
                            return this.center.set(0, 0, 0), this.radius = -1, this
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            return e.distanceToSquared(this.center) <= this.radius * this.radius
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return e.distanceTo(this.center) - this.radius
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            var t = this.radius + e.radius;
                            return e.center.distanceToSquared(this.center) <= t * t
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return e.intersectsSphere(this)
                        }
                    }, {
                        key: "intersectsPlane",
                        value: function(e) {
                            return Math.abs(e.distanceToPoint(this.center)) <= this.radius
                        }
                    }, {
                        key: "clampPoint",
                        value: function(e, t) {
                            var n = this.center.distanceToSquared(e);
                            return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t
                        }
                    }, {
                        key: "getBoundingBox",
                        value: function(e) {
                            return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.center.add(e), this
                        }
                    }, {
                        key: "expandByPoint",
                        value: function(e) {
                            xn.subVectors(e, this.center);
                            var t = xn.lengthSq();
                            if (t > this.radius * this.radius) {
                                var n = Math.sqrt(t),
                                    r = .5 * (n - this.radius);
                                this.center.add(xn.multiplyScalar(r / n)), this.radius += r
                            }
                            return this
                        }
                    }, {
                        key: "union",
                        value: function(e) {
                            return yn.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(gn.copy(e.center).add(yn)), this.expandByPoint(gn.copy(e.center).sub(yn)), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.center.equals(this.center) && e.radius === this.radius
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                _n = new $t,
                wn = new $t,
                Sn = new $t,
                Mn = new $t,
                kn = new $t,
                En = new $t,
                Tn = new $t,
                Ln = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t(0, 0, -1);
                        d(this, e), this.origin = t, this.direction = n
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.origin.copy(e), this.direction.copy(t), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.origin.copy(e.origin), this.direction.copy(e.direction), this
                        }
                    }, {
                        key: "at",
                        value: function(e, t) {
                            return t.copy(this.direction).multiplyScalar(e).add(this.origin)
                        }
                    }, {
                        key: "lookAt",
                        value: function(e) {
                            return this.direction.copy(e).sub(this.origin).normalize(), this
                        }
                    }, {
                        key: "recast",
                        value: function(e) {
                            return this.origin.copy(this.at(e, _n)), this
                        }
                    }, {
                        key: "closestPointToPoint",
                        value: function(e, t) {
                            t.subVectors(e, this.origin);
                            var n = t.dot(this.direction);
                            return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return Math.sqrt(this.distanceSqToPoint(e))
                        }
                    }, {
                        key: "distanceSqToPoint",
                        value: function(e) {
                            var t = _n.subVectors(e, this.origin).dot(this.direction);
                            return t < 0 ? this.origin.distanceToSquared(e) : (_n.copy(this.direction).multiplyScalar(t).add(this.origin), _n.distanceToSquared(e))
                        }
                    }, {
                        key: "distanceSqToSegment",
                        value: function(e, t, n, r) {
                            wn.copy(e).add(t).multiplyScalar(.5), Sn.copy(t).sub(e).normalize(), Mn.copy(this.origin).sub(wn);
                            var i, a, o, s, l = .5 * e.distanceTo(t),
                                u = -this.direction.dot(Sn),
                                c = Mn.dot(this.direction),
                                f = -Mn.dot(Sn),
                                d = Mn.lengthSq(),
                                h = Math.abs(1 - u * u);
                            if (h > 0)
                                if (a = u * c - f, s = l * h, (i = u * f - c) >= 0)
                                    if (a >= -s)
                                        if (a <= s) {
                                            var p = 1 / h;
                                            o = (i *= p) * (i + u * (a *= p) + 2 * c) + a * (u * i + a + 2 * f) + d
                                        } else a = l, o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * f) + d;
                            else a = -l, o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * f) + d;
                            else a <= -s ? o = -(i = Math.max(0, -(-u * l + c))) * i + (a = i > 0 ? -l : Math.min(Math.max(-l, -f), l)) * (a + 2 * f) + d : a <= s ? (i = 0, o = (a = Math.min(Math.max(-l, -f), l)) * (a + 2 * f) + d) : o = -(i = Math.max(0, -(u * l + c))) * i + (a = i > 0 ? l : Math.min(Math.max(-l, -f), l)) * (a + 2 * f) + d;
                            else a = u > 0 ? -l : l, o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * f) + d;
                            return n && n.copy(this.direction).multiplyScalar(i).add(this.origin), r && r.copy(Sn).multiplyScalar(a).add(wn), o
                        }
                    }, {
                        key: "intersectSphere",
                        value: function(e, t) {
                            _n.subVectors(e.center, this.origin);
                            var n = _n.dot(this.direction),
                                r = _n.dot(_n) - n * n,
                                i = e.radius * e.radius;
                            if (r > i) return null;
                            var a = Math.sqrt(i - r),
                                o = n - a,
                                s = n + a;
                            return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            return this.distanceSqToPoint(e.center) <= e.radius * e.radius
                        }
                    }, {
                        key: "distanceToPlane",
                        value: function(e) {
                            var t = e.normal.dot(this.direction);
                            if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                            var n = -(this.origin.dot(e.normal) + e.constant) / t;
                            return n >= 0 ? n : null
                        }
                    }, {
                        key: "intersectPlane",
                        value: function(e, t) {
                            var n = this.distanceToPlane(e);
                            return null === n ? null : this.at(n, t)
                        }
                    }, {
                        key: "intersectsPlane",
                        value: function(e) {
                            var t = e.distanceToPoint(this.origin);
                            return 0 === t || e.normal.dot(this.direction) * t < 0
                        }
                    }, {
                        key: "intersectBox",
                        value: function(e, t) {
                            var n, r, i, a, o, s, l = 1 / this.direction.x,
                                u = 1 / this.direction.y,
                                c = 1 / this.direction.z,
                                f = this.origin;
                            return l >= 0 ? (n = (e.min.x - f.x) * l, r = (e.max.x - f.x) * l) : (n = (e.max.x - f.x) * l, r = (e.min.x - f.x) * l), u >= 0 ? (i = (e.min.y - f.y) * u, a = (e.max.y - f.y) * u) : (i = (e.max.y - f.y) * u, a = (e.min.y - f.y) * u), n > a || i > r ? null : ((i > n || n !== n) && (n = i), (a < r || r !== r) && (r = a), c >= 0 ? (o = (e.min.z - f.z) * c, s = (e.max.z - f.z) * c) : (o = (e.max.z - f.z) * c, s = (e.min.z - f.z) * c), n > s || o > r ? null : ((o > n || n !== n) && (n = o), (s < r || r !== r) && (r = s), r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return null !== this.intersectBox(e, _n)
                        }
                    }, {
                        key: "intersectTriangle",
                        value: function(e, t, n, r, i) {
                            kn.subVectors(t, e), En.subVectors(n, e), Tn.crossVectors(kn, En);
                            var a, o = this.direction.dot(Tn);
                            if (o > 0) {
                                if (r) return null;
                                a = 1
                            } else {
                                if (!(o < 0)) return null;
                                a = -1, o = -o
                            }
                            Mn.subVectors(this.origin, e);
                            var s = a * this.direction.dot(En.crossVectors(Mn, En));
                            if (s < 0) return null;
                            var l = a * this.direction.dot(kn.cross(Mn));
                            if (l < 0) return null;
                            if (s + l > o) return null;
                            var u = -a * Mn.dot(Tn);
                            return u < 0 ? null : this.at(u / o, i)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                An = function() {
                    function e() {
                        d(this, e), this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t, n, r, i, a, o, s, l, u, c, f, d, h, p, v) {
                            var m = this.elements;
                            return m[0] = e, m[4] = t, m[8] = n, m[12] = r, m[1] = i, m[5] = a, m[9] = o, m[13] = s, m[2] = l, m[6] = u, m[10] = c, m[14] = f, m[3] = d, m[7] = h, m[11] = p, m[15] = v, this
                        }
                    }, {
                        key: "identity",
                        value: function() {
                            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new e).fromArray(this.elements)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            var t = this.elements,
                                n = e.elements;
                            return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this
                        }
                    }, {
                        key: "copyPosition",
                        value: function(e) {
                            var t = this.elements,
                                n = e.elements;
                            return t[12] = n[12], t[13] = n[13], t[14] = n[14], this
                        }
                    }, {
                        key: "setFromMatrix3",
                        value: function(e) {
                            var t = e.elements;
                            return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "extractBasis",
                        value: function(e, t, n) {
                            return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this
                        }
                    }, {
                        key: "makeBasis",
                        value: function(e, t, n) {
                            return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "extractRotation",
                        value: function(e) {
                            var t = this.elements,
                                n = e.elements,
                                r = 1 / Cn.setFromMatrixColumn(e, 0).length(),
                                i = 1 / Cn.setFromMatrixColumn(e, 1).length(),
                                a = 1 / Cn.setFromMatrixColumn(e, 2).length();
                            return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = 0, t[4] = n[4] * i, t[5] = n[5] * i, t[6] = n[6] * i, t[7] = 0, t[8] = n[8] * a, t[9] = n[9] * a, t[10] = n[10] * a, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                        }
                    }, {
                        key: "makeRotationFromEuler",
                        value: function(e) {
                            e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                            var t = this.elements,
                                n = e.x,
                                r = e.y,
                                i = e.z,
                                a = Math.cos(n),
                                o = Math.sin(n),
                                s = Math.cos(r),
                                l = Math.sin(r),
                                u = Math.cos(i),
                                c = Math.sin(i);
                            if ("XYZ" === e.order) {
                                var f = a * u,
                                    d = a * c,
                                    h = o * u,
                                    p = o * c;
                                t[0] = s * u, t[4] = -s * c, t[8] = l, t[1] = d + h * l, t[5] = f - p * l, t[9] = -o * s, t[2] = p - f * l, t[6] = h + d * l, t[10] = a * s
                            } else if ("YXZ" === e.order) {
                                var v = s * u,
                                    m = s * c,
                                    g = l * u,
                                    y = l * c;
                                t[0] = v + y * o, t[4] = g * o - m, t[8] = a * l, t[1] = a * c, t[5] = a * u, t[9] = -o, t[2] = m * o - g, t[6] = y + v * o, t[10] = a * s
                            } else if ("ZXY" === e.order) {
                                var x = s * u,
                                    b = s * c,
                                    _ = l * u,
                                    w = l * c;
                                t[0] = x - w * o, t[4] = -a * c, t[8] = _ + b * o, t[1] = b + _ * o, t[5] = a * u, t[9] = w - x * o, t[2] = -a * l, t[6] = o, t[10] = a * s
                            } else if ("ZYX" === e.order) {
                                var S = a * u,
                                    M = a * c,
                                    k = o * u,
                                    E = o * c;
                                t[0] = s * u, t[4] = k * l - M, t[8] = S * l + E, t[1] = s * c, t[5] = E * l + S, t[9] = M * l - k, t[2] = -l, t[6] = o * s, t[10] = a * s
                            } else if ("YZX" === e.order) {
                                var T = a * s,
                                    L = a * l,
                                    A = o * s,
                                    C = o * l;
                                t[0] = s * u, t[4] = C - T * c, t[8] = A * c + L, t[1] = c, t[5] = a * u, t[9] = -o * u, t[2] = -l * u, t[6] = L * c + A, t[10] = T - C * c
                            } else if ("XZY" === e.order) {
                                var P = a * s,
                                    R = a * l,
                                    N = o * s,
                                    I = o * l;
                                t[0] = s * u, t[4] = -c, t[8] = l * u, t[1] = P * c + I, t[5] = a * u, t[9] = R * c - N, t[2] = N * c - R, t[6] = o * u, t[10] = I * c + P
                            }
                            return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                        }
                    }, {
                        key: "makeRotationFromQuaternion",
                        value: function(e) {
                            return this.compose(Rn, e, Nn)
                        }
                    }, {
                        key: "lookAt",
                        value: function(e, t, n) {
                            var r = this.elements;
                            return On.subVectors(e, t), 0 === On.lengthSq() && (On.z = 1), On.normalize(), In.crossVectors(n, On), 0 === In.lengthSq() && (1 === Math.abs(n.z) ? On.x += 1e-4 : On.z += 1e-4, On.normalize(), In.crossVectors(n, On)), In.normalize(), zn.crossVectors(On, In), r[0] = In.x, r[4] = zn.x, r[8] = On.x, r[1] = In.y, r[5] = zn.y, r[9] = On.y, r[2] = In.z, r[6] = zn.z, r[10] = On.z, this
                        }
                    }, {
                        key: "multiply",
                        value: function(e, t) {
                            return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
                        }
                    }, {
                        key: "premultiply",
                        value: function(e) {
                            return this.multiplyMatrices(e, this)
                        }
                    }, {
                        key: "multiplyMatrices",
                        value: function(e, t) {
                            var n = e.elements,
                                r = t.elements,
                                i = this.elements,
                                a = n[0],
                                o = n[4],
                                s = n[8],
                                l = n[12],
                                u = n[1],
                                c = n[5],
                                f = n[9],
                                d = n[13],
                                h = n[2],
                                p = n[6],
                                v = n[10],
                                m = n[14],
                                g = n[3],
                                y = n[7],
                                x = n[11],
                                b = n[15],
                                _ = r[0],
                                w = r[4],
                                S = r[8],
                                M = r[12],
                                k = r[1],
                                E = r[5],
                                T = r[9],
                                L = r[13],
                                A = r[2],
                                C = r[6],
                                P = r[10],
                                R = r[14],
                                N = r[3],
                                I = r[7],
                                z = r[11],
                                O = r[15];
                            return i[0] = a * _ + o * k + s * A + l * N, i[4] = a * w + o * E + s * C + l * I, i[8] = a * S + o * T + s * P + l * z, i[12] = a * M + o * L + s * R + l * O, i[1] = u * _ + c * k + f * A + d * N, i[5] = u * w + c * E + f * C + d * I, i[9] = u * S + c * T + f * P + d * z, i[13] = u * M + c * L + f * R + d * O, i[2] = h * _ + p * k + v * A + m * N, i[6] = h * w + p * E + v * C + m * I, i[10] = h * S + p * T + v * P + m * z, i[14] = h * M + p * L + v * R + m * O, i[3] = g * _ + y * k + x * A + b * N, i[7] = g * w + y * E + x * C + b * I, i[11] = g * S + y * T + x * P + b * z, i[15] = g * M + y * L + x * R + b * O, this
                        }
                    }, {
                        key: "multiplyScalar",
                        value: function(e) {
                            var t = this.elements;
                            return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
                        }
                    }, {
                        key: "determinant",
                        value: function() {
                            var e = this.elements,
                                t = e[0],
                                n = e[4],
                                r = e[8],
                                i = e[12],
                                a = e[1],
                                o = e[5],
                                s = e[9],
                                l = e[13],
                                u = e[2],
                                c = e[6],
                                f = e[10],
                                d = e[14];
                            return e[3] * (+i * s * c - r * l * c - i * o * f + n * l * f + r * o * d - n * s * d) + e[7] * (+t * s * d - t * l * f + i * a * f - r * a * d + r * l * u - i * s * u) + e[11] * (+t * l * c - t * o * d - i * a * c + n * a * d + i * o * u - n * l * u) + e[15] * (-r * o * u - t * s * c + t * o * f + r * a * c - n * a * f + n * s * u)
                        }
                    }, {
                        key: "transpose",
                        value: function() {
                            var e, t = this.elements;
                            return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this
                        }
                    }, {
                        key: "setPosition",
                        value: function(e, t, n) {
                            var r = this.elements;
                            return e.isVector3 ? (r[12] = e.x, r[13] = e.y, r[14] = e.z) : (r[12] = e, r[13] = t, r[14] = n), this
                        }
                    }, {
                        key: "invert",
                        value: function() {
                            var e = this.elements,
                                t = e[0],
                                n = e[1],
                                r = e[2],
                                i = e[3],
                                a = e[4],
                                o = e[5],
                                s = e[6],
                                l = e[7],
                                u = e[8],
                                c = e[9],
                                f = e[10],
                                d = e[11],
                                h = e[12],
                                p = e[13],
                                v = e[14],
                                m = e[15],
                                g = c * v * l - p * f * l + p * s * d - o * v * d - c * s * m + o * f * m,
                                y = h * f * l - u * v * l - h * s * d + a * v * d + u * s * m - a * f * m,
                                x = u * p * l - h * c * l + h * o * d - a * p * d - u * o * m + a * c * m,
                                b = h * c * s - u * p * s - h * o * f + a * p * f + u * o * v - a * c * v,
                                _ = t * g + n * y + r * x + i * b;
                            if (0 === _) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                            var w = 1 / _;
                            return e[0] = g * w, e[1] = (p * f * i - c * v * i - p * r * d + n * v * d + c * r * m - n * f * m) * w, e[2] = (o * v * i - p * s * i + p * r * l - n * v * l - o * r * m + n * s * m) * w, e[3] = (c * s * i - o * f * i - c * r * l + n * f * l + o * r * d - n * s * d) * w, e[4] = y * w, e[5] = (u * v * i - h * f * i + h * r * d - t * v * d - u * r * m + t * f * m) * w, e[6] = (h * s * i - a * v * i - h * r * l + t * v * l + a * r * m - t * s * m) * w, e[7] = (a * f * i - u * s * i + u * r * l - t * f * l - a * r * d + t * s * d) * w, e[8] = x * w, e[9] = (h * c * i - u * p * i - h * n * d + t * p * d + u * n * m - t * c * m) * w, e[10] = (a * p * i - h * o * i + h * n * l - t * p * l - a * n * m + t * o * m) * w, e[11] = (u * o * i - a * c * i - u * n * l + t * c * l + a * n * d - t * o * d) * w, e[12] = b * w, e[13] = (u * p * r - h * c * r + h * n * f - t * p * f - u * n * v + t * c * v) * w, e[14] = (h * o * r - a * p * r - h * n * s + t * p * s + a * n * v - t * o * v) * w, e[15] = (a * c * r - u * o * r + u * n * s - t * c * s - a * n * f + t * o * f) * w, this
                        }
                    }, {
                        key: "scale",
                        value: function(e) {
                            var t = this.elements,
                                n = e.x,
                                r = e.y,
                                i = e.z;
                            return t[0] *= n, t[4] *= r, t[8] *= i, t[1] *= n, t[5] *= r, t[9] *= i, t[2] *= n, t[6] *= r, t[10] *= i, t[3] *= n, t[7] *= r, t[11] *= i, this
                        }
                    }, {
                        key: "getMaxScaleOnAxis",
                        value: function() {
                            var e = this.elements,
                                t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                                n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                                r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                            return Math.sqrt(Math.max(t, n, r))
                        }
                    }, {
                        key: "makeTranslation",
                        value: function(e, t, n) {
                            return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationX",
                        value: function(e) {
                            var t = Math.cos(e),
                                n = Math.sin(e);
                            return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationY",
                        value: function(e) {
                            var t = Math.cos(e),
                                n = Math.sin(e);
                            return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationZ",
                        value: function(e) {
                            var t = Math.cos(e),
                                n = Math.sin(e);
                            return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationAxis",
                        value: function(e, t) {
                            var n = Math.cos(t),
                                r = Math.sin(t),
                                i = 1 - n,
                                a = e.x,
                                o = e.y,
                                s = e.z,
                                l = i * a,
                                u = i * o;
                            return this.set(l * a + n, l * o - r * s, l * s + r * o, 0, l * o + r * s, u * o + n, u * s - r * a, 0, l * s - r * o, u * s + r * a, i * s * s + n, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeScale",
                        value: function(e, t, n) {
                            return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeShear",
                        value: function(e, t, n, r, i, a) {
                            return this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "compose",
                        value: function(e, t, n) {
                            var r = this.elements,
                                i = t._x,
                                a = t._y,
                                o = t._z,
                                s = t._w,
                                l = i + i,
                                u = a + a,
                                c = o + o,
                                f = i * l,
                                d = i * u,
                                h = i * c,
                                p = a * u,
                                v = a * c,
                                m = o * c,
                                g = s * l,
                                y = s * u,
                                x = s * c,
                                b = n.x,
                                _ = n.y,
                                w = n.z;
                            return r[0] = (1 - (p + m)) * b, r[1] = (d + x) * b, r[2] = (h - y) * b, r[3] = 0, r[4] = (d - x) * _, r[5] = (1 - (f + m)) * _, r[6] = (v + g) * _, r[7] = 0, r[8] = (h + y) * w, r[9] = (v - g) * w, r[10] = (1 - (f + p)) * w, r[11] = 0, r[12] = e.x, r[13] = e.y, r[14] = e.z, r[15] = 1, this
                        }
                    }, {
                        key: "decompose",
                        value: function(e, t, n) {
                            var r = this.elements,
                                i = Cn.set(r[0], r[1], r[2]).length(),
                                a = Cn.set(r[4], r[5], r[6]).length(),
                                o = Cn.set(r[8], r[9], r[10]).length();
                            this.determinant() < 0 && (i = -i), e.x = r[12], e.y = r[13], e.z = r[14], Pn.copy(this);
                            var s = 1 / i,
                                l = 1 / a,
                                u = 1 / o;
                            return Pn.elements[0] *= s, Pn.elements[1] *= s, Pn.elements[2] *= s, Pn.elements[4] *= l, Pn.elements[5] *= l, Pn.elements[6] *= l, Pn.elements[8] *= u, Pn.elements[9] *= u, Pn.elements[10] *= u, t.setFromRotationMatrix(Pn), n.x = i, n.y = a, n.z = o, this
                        }
                    }, {
                        key: "makePerspective",
                        value: function(e, t, n, r, i, a) {
                            void 0 === a && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
                            var o = this.elements,
                                s = 2 * i / (t - e),
                                l = 2 * i / (n - r),
                                u = (t + e) / (t - e),
                                c = (n + r) / (n - r),
                                f = -(a + i) / (a - i),
                                d = -2 * a * i / (a - i);
                            return o[0] = s, o[4] = 0, o[8] = u, o[12] = 0, o[1] = 0, o[5] = l, o[9] = c, o[13] = 0, o[2] = 0, o[6] = 0, o[10] = f, o[14] = d, o[3] = 0, o[7] = 0, o[11] = -1, o[15] = 0, this
                        }
                    }, {
                        key: "makeOrthographic",
                        value: function(e, t, n, r, i, a) {
                            var o = this.elements,
                                s = 1 / (t - e),
                                l = 1 / (n - r),
                                u = 1 / (a - i),
                                c = (t + e) * s,
                                f = (n + r) * l,
                                d = (a + i) * u;
                            return o[0] = 2 * s, o[4] = 0, o[8] = 0, o[12] = -c, o[1] = 0, o[5] = 2 * l, o[9] = 0, o[13] = -f, o[2] = 0, o[6] = 0, o[10] = -2 * u, o[14] = -d, o[3] = 0, o[7] = 0, o[11] = 0, o[15] = 1, this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
                                if (t[r] !== n[r]) return !1;
                            return !0
                        }
                    }, {
                        key: "fromArray",
                        value: function(e) {
                            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = 0; n < 16; n++) this.elements[n] = e[n + t];
                            return this
                        }
                    }, {
                        key: "toArray",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                n = this.elements;
                            return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e
                        }
                    }]), e
                }();
            An.prototype.isMatrix4 = !0;
            var Cn = new $t,
                Pn = new An,
                Rn = new $t(0, 0, 0),
                Nn = new $t(1, 1, 1),
                In = new $t,
                zn = new $t,
                On = new $t,
                Dn = new An,
                Fn = new Jt,
                Bn = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : e.DefaultOrder;
                        d(this, e), this._x = t, this._y = n, this._z = r, this._order = i
                    }
                    return p(e, [{
                        key: "x",
                        get: function() {
                            return this._x
                        },
                        set: function(e) {
                            this._x = e, this._onChangeCallback()
                        }
                    }, {
                        key: "y",
                        get: function() {
                            return this._y
                        },
                        set: function(e) {
                            this._y = e, this._onChangeCallback()
                        }
                    }, {
                        key: "z",
                        get: function() {
                            return this._z
                        },
                        set: function(e) {
                            this._z = e, this._onChangeCallback()
                        }
                    }, {
                        key: "order",
                        get: function() {
                            return this._order
                        },
                        set: function(e) {
                            this._order = e, this._onChangeCallback()
                        }
                    }, {
                        key: "set",
                        value: function(e, t, n) {
                            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this._order;
                            return this._x = e, this._y = t, this._z = n, this._order = r, this._onChangeCallback(), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return new this.constructor(this._x, this._y, this._z, this._order)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this
                        }
                    }, {
                        key: "setFromRotationMatrix",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._order,
                                n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                                r = e.elements,
                                i = r[0],
                                a = r[4],
                                o = r[8],
                                s = r[1],
                                l = r[5],
                                u = r[9],
                                c = r[2],
                                f = r[6],
                                d = r[10];
                            switch (t) {
                                case "XYZ":
                                    this._y = Math.asin(It(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(-u, d), this._z = Math.atan2(-a, i)) : (this._x = Math.atan2(f, l), this._z = 0);
                                    break;
                                case "YXZ":
                                    this._x = Math.asin(-It(u, -1, 1)), Math.abs(u) < .9999999 ? (this._y = Math.atan2(o, d), this._z = Math.atan2(s, l)) : (this._y = Math.atan2(-c, i), this._z = 0);
                                    break;
                                case "ZXY":
                                    this._x = Math.asin(It(f, -1, 1)), Math.abs(f) < .9999999 ? (this._y = Math.atan2(-c, d), this._z = Math.atan2(-a, l)) : (this._y = 0, this._z = Math.atan2(s, i));
                                    break;
                                case "ZYX":
                                    this._y = Math.asin(-It(c, -1, 1)), Math.abs(c) < .9999999 ? (this._x = Math.atan2(f, d), this._z = Math.atan2(s, i)) : (this._x = 0, this._z = Math.atan2(-a, l));
                                    break;
                                case "YZX":
                                    this._z = Math.asin(It(s, -1, 1)), Math.abs(s) < .9999999 ? (this._x = Math.atan2(-u, l), this._y = Math.atan2(-c, i)) : (this._x = 0, this._y = Math.atan2(o, d));
                                    break;
                                case "XZY":
                                    this._z = Math.asin(-It(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(f, l), this._y = Math.atan2(o, i)) : (this._x = Math.atan2(-u, d), this._y = 0);
                                    break;
                                default:
                                    console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t)
                            }
                            return this._order = t, !0 === n && this._onChangeCallback(), this
                        }
                    }, {
                        key: "setFromQuaternion",
                        value: function(e, t, n) {
                            return Dn.makeRotationFromQuaternion(e), this.setFromRotationMatrix(Dn, t, n)
                        }
                    }, {
                        key: "setFromVector3",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._order;
                            return this.set(e.x, e.y, e.z, t)
                        }
                    }, {
                        key: "reorder",
                        value: function(e) {
                            return Fn.setFromEuler(this), this.setFromQuaternion(Fn, e)
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                        }
                    }, {
                        key: "fromArray",
                        value: function(e) {
                            return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this._onChangeCallback(), this
                        }
                    }, {
                        key: "toArray",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e
                        }
                    }, {
                        key: "toVector3",
                        value: function(e) {
                            return e ? e.set(this._x, this._y, this._z) : new $t(this._x, this._y, this._z)
                        }
                    }, {
                        key: "_onChange",
                        value: function(e) {
                            return this._onChangeCallback = e, this
                        }
                    }, {
                        key: "_onChangeCallback",
                        value: function() {}
                    }]), e
                }();
            Bn.prototype.isEuler = !0, Bn.DefaultOrder = "XYZ", Bn.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
            var Un = function() {
                    function e() {
                        d(this, e), this.mask = 1
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e) {
                            this.mask = 1 << e | 0
                        }
                    }, {
                        key: "enable",
                        value: function(e) {
                            this.mask |= 1 << e | 0
                        }
                    }, {
                        key: "enableAll",
                        value: function() {
                            this.mask = -1
                        }
                    }, {
                        key: "toggle",
                        value: function(e) {
                            this.mask ^= 1 << e | 0
                        }
                    }, {
                        key: "disable",
                        value: function(e) {
                            this.mask &= ~(1 << e | 0)
                        }
                    }, {
                        key: "disableAll",
                        value: function() {
                            this.mask = 0
                        }
                    }, {
                        key: "test",
                        value: function(e) {
                            return 0 !== (this.mask & e.mask)
                        }
                    }]), e
                }(),
                Hn = 0,
                Vn = new $t,
                Gn = new Jt,
                Wn = new An,
                jn = new $t,
                qn = new $t,
                Xn = new $t,
                Yn = new Jt,
                Zn = new $t(1, 0, 0),
                Jn = new $t(0, 1, 0),
                $n = new $t(0, 0, 1),
                Qn = {
                    type: "added"
                },
                Kn = {
                    type: "removed"
                },
                er = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        d(this, n), e = t.call(this), Object.defineProperty(b(e), "id", {
                            value: Hn++
                        }), e.uuid = Nt(), e.name = "", e.type = "Object3D", e.parent = null, e.children = [], e.up = n.DefaultUp.clone();
                        var r = new $t,
                            i = new Bn,
                            a = new Jt,
                            o = new $t(1, 1, 1);
                        return i._onChange((function() {
                            a.setFromEuler(i, !1)
                        })), a._onChange((function() {
                            i.setFromQuaternion(a, void 0, !1)
                        })), Object.defineProperties(b(e), {
                            position: {
                                configurable: !0,
                                enumerable: !0,
                                value: r
                            },
                            rotation: {
                                configurable: !0,
                                enumerable: !0,
                                value: i
                            },
                            quaternion: {
                                configurable: !0,
                                enumerable: !0,
                                value: a
                            },
                            scale: {
                                configurable: !0,
                                enumerable: !0,
                                value: o
                            },
                            modelViewMatrix: {
                                value: new An
                            },
                            normalMatrix: {
                                value: new Ht
                            }
                        }), e.matrix = new An, e.matrixWorld = new An, e.matrixAutoUpdate = n.DefaultMatrixAutoUpdate, e.matrixWorldNeedsUpdate = !1, e.layers = new Un, e.visible = !0, e.castShadow = !1, e.receiveShadow = !1, e.frustumCulled = !0, e.renderOrder = 0, e.animations = [], e.userData = {}, e
                    }
                    return p(n, [{
                        key: "onBeforeRender",
                        value: function() {}
                    }, {
                        key: "onAfterRender",
                        value: function() {}
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale)
                        }
                    }, {
                        key: "applyQuaternion",
                        value: function(e) {
                            return this.quaternion.premultiply(e), this
                        }
                    }, {
                        key: "setRotationFromAxisAngle",
                        value: function(e, t) {
                            this.quaternion.setFromAxisAngle(e, t)
                        }
                    }, {
                        key: "setRotationFromEuler",
                        value: function(e) {
                            this.quaternion.setFromEuler(e, !0)
                        }
                    }, {
                        key: "setRotationFromMatrix",
                        value: function(e) {
                            this.quaternion.setFromRotationMatrix(e)
                        }
                    }, {
                        key: "setRotationFromQuaternion",
                        value: function(e) {
                            this.quaternion.copy(e)
                        }
                    }, {
                        key: "rotateOnAxis",
                        value: function(e, t) {
                            return Gn.setFromAxisAngle(e, t), this.quaternion.multiply(Gn), this
                        }
                    }, {
                        key: "rotateOnWorldAxis",
                        value: function(e, t) {
                            return Gn.setFromAxisAngle(e, t), this.quaternion.premultiply(Gn), this
                        }
                    }, {
                        key: "rotateX",
                        value: function(e) {
                            return this.rotateOnAxis(Zn, e)
                        }
                    }, {
                        key: "rotateY",
                        value: function(e) {
                            return this.rotateOnAxis(Jn, e)
                        }
                    }, {
                        key: "rotateZ",
                        value: function(e) {
                            return this.rotateOnAxis($n, e)
                        }
                    }, {
                        key: "translateOnAxis",
                        value: function(e, t) {
                            return Vn.copy(e).applyQuaternion(this.quaternion), this.position.add(Vn.multiplyScalar(t)), this
                        }
                    }, {
                        key: "translateX",
                        value: function(e) {
                            return this.translateOnAxis(Zn, e)
                        }
                    }, {
                        key: "translateY",
                        value: function(e) {
                            return this.translateOnAxis(Jn, e)
                        }
                    }, {
                        key: "translateZ",
                        value: function(e) {
                            return this.translateOnAxis($n, e)
                        }
                    }, {
                        key: "localToWorld",
                        value: function(e) {
                            return e.applyMatrix4(this.matrixWorld)
                        }
                    }, {
                        key: "worldToLocal",
                        value: function(e) {
                            return e.applyMatrix4(Wn.copy(this.matrixWorld).invert())
                        }
                    }, {
                        key: "lookAt",
                        value: function(e, t, n) {
                            e.isVector3 ? jn.copy(e) : jn.set(e, t, n);
                            var r = this.parent;
                            this.updateWorldMatrix(!0, !1), qn.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Wn.lookAt(qn, jn, this.up) : Wn.lookAt(jn, qn, this.up), this.quaternion.setFromRotationMatrix(Wn), r && (Wn.extractRotation(r.matrixWorld), Gn.setFromRotationMatrix(Wn), this.quaternion.premultiply(Gn.invert()))
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            if (arguments.length > 1) {
                                for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
                                return this
                            }
                            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(Qn)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this)
                        }
                    }, {
                        key: "remove",
                        value: function(e) {
                            if (arguments.length > 1) {
                                for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
                                return this
                            }
                            var n = this.children.indexOf(e);
                            return -1 !== n && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(Kn)), this
                        }
                    }, {
                        key: "removeFromParent",
                        value: function() {
                            var e = this.parent;
                            return null !== e && e.remove(this), this
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            for (var e = 0; e < this.children.length; e++) {
                                var t = this.children[e];
                                t.parent = null, t.dispatchEvent(Kn)
                            }
                            return this.children.length = 0, this
                        }
                    }, {
                        key: "attach",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), Wn.copy(this.matrixWorld).invert(), null !== e.parent && (e.parent.updateWorldMatrix(!0, !1), Wn.multiply(e.parent.matrixWorld)), e.applyMatrix4(Wn), this.add(e), e.updateWorldMatrix(!1, !0), this
                        }
                    }, {
                        key: "getObjectById",
                        value: function(e) {
                            return this.getObjectByProperty("id", e)
                        }
                    }, {
                        key: "getObjectByName",
                        value: function(e) {
                            return this.getObjectByProperty("name", e)
                        }
                    }, {
                        key: "getObjectByProperty",
                        value: function(e, t) {
                            if (this[e] === t) return this;
                            for (var n = 0, r = this.children.length; n < r; n++) {
                                var i = this.children[n].getObjectByProperty(e, t);
                                if (void 0 !== i) return i
                            }
                        }
                    }, {
                        key: "getWorldPosition",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld)
                        }
                    }, {
                        key: "getWorldQuaternion",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(qn, e, Xn), e
                        }
                    }, {
                        key: "getWorldScale",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(qn, Yn, e), e
                        }
                    }, {
                        key: "getWorldDirection",
                        value: function(e) {
                            this.updateWorldMatrix(!0, !1);
                            var t = this.matrixWorld.elements;
                            return e.set(t[8], t[9], t[10]).normalize()
                        }
                    }, {
                        key: "raycast",
                        value: function() {}
                    }, {
                        key: "traverse",
                        value: function(e) {
                            e(this);
                            for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverse(e)
                        }
                    }, {
                        key: "traverseVisible",
                        value: function(e) {
                            if (!1 !== this.visible) {
                                e(this);
                                for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverseVisible(e)
                            }
                        }
                    }, {
                        key: "traverseAncestors",
                        value: function(e) {
                            var t = this.parent;
                            null !== t && (e(t), t.traverseAncestors(e))
                        }
                    }, {
                        key: "updateMatrix",
                        value: function() {
                            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "updateMatrixWorld",
                        value: function(e) {
                            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                            for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].updateMatrixWorld(e)
                        }
                    }, {
                        key: "updateWorldMatrix",
                        value: function(e, t) {
                            var n = this.parent;
                            if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), !0 === t)
                                for (var r = this.children, i = 0, a = r.length; i < a; i++) r[i].updateWorldMatrix(!1, !0)
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = void 0 === e || "string" === typeof e,
                                n = {};
                            t && (e = {
                                geometries: {},
                                materials: {},
                                textures: {},
                                images: {},
                                shapes: {},
                                skeletons: {},
                                animations: {}
                            }, n.metadata = {
                                version: 4.5,
                                type: "Object",
                                generator: "Object3D.toJSON"
                            });
                            var r = {};

                            function i(t, n) {
                                return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                            }
                            if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), !0 === this.castShadow && (r.castShadow = !0), !0 === this.receiveShadow && (r.receiveShadow = !0), !1 === this.visible && (r.visible = !1), !1 === this.frustumCulled && (r.frustumCulled = !1), 0 !== this.renderOrder && (r.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), r.layers = this.layers.mask, r.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1), this.isInstancedMesh && (r.type = "InstancedMesh", r.count = this.count, r.instanceMatrix = this.instanceMatrix.toJSON(), null !== this.instanceColor && (r.instanceColor = this.instanceColor.toJSON())), this.isScene) this.background && (this.background.isColor ? r.background = this.background.toJSON() : this.background.isTexture && (r.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (r.environment = this.environment.toJSON(e).uuid);
                            else if (this.isMesh || this.isLine || this.isPoints) {
                                r.geometry = i(e.geometries, this.geometry);
                                var a = this.geometry.parameters;
                                if (void 0 !== a && void 0 !== a.shapes) {
                                    var o = a.shapes;
                                    if (Array.isArray(o))
                                        for (var s = 0, l = o.length; s < l; s++) {
                                            var u = o[s];
                                            i(e.shapes, u)
                                        } else i(e.shapes, o)
                                }
                            }
                            if (this.isSkinnedMesh && (r.bindMode = this.bindMode, r.bindMatrix = this.bindMatrix.toArray(), void 0 !== this.skeleton && (i(e.skeletons, this.skeleton), r.skeleton = this.skeleton.uuid)), void 0 !== this.material)
                                if (Array.isArray(this.material)) {
                                    for (var c = [], f = 0, d = this.material.length; f < d; f++) c.push(i(e.materials, this.material[f]));
                                    r.material = c
                                } else r.material = i(e.materials, this.material);
                            if (this.children.length > 0) {
                                r.children = [];
                                for (var h = 0; h < this.children.length; h++) r.children.push(this.children[h].toJSON(e).object)
                            }
                            if (this.animations.length > 0) {
                                r.animations = [];
                                for (var p = 0; p < this.animations.length; p++) {
                                    var v = this.animations[p];
                                    r.animations.push(i(e.animations, v))
                                }
                            }
                            if (t) {
                                var m = S(e.geometries),
                                    g = S(e.materials),
                                    y = S(e.textures),
                                    x = S(e.images),
                                    b = S(e.shapes),
                                    _ = S(e.skeletons),
                                    w = S(e.animations);
                                m.length > 0 && (n.geometries = m), g.length > 0 && (n.materials = g), y.length > 0 && (n.textures = y), x.length > 0 && (n.images = x), b.length > 0 && (n.shapes = b), _.length > 0 && (n.skeletons = _), w.length > 0 && (n.animations = w)
                            }
                            return n.object = r, n;

                            function S(e) {
                                var t = [];
                                for (var n in e) {
                                    var r = e[n];
                                    delete r.metadata, t.push(r)
                                }
                                return t
                            }
                        }
                    }, {
                        key: "clone",
                        value: function(e) {
                            return (new this.constructor).copy(this, e)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                            if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), !0 === t)
                                for (var n = 0; n < e.children.length; n++) {
                                    var r = e.children[n];
                                    this.add(r.clone())
                                }
                            return this
                        }
                    }]), n
                }(Lt);
            er.DefaultUp = new $t(0, 1, 0), er.DefaultMatrixAutoUpdate = !0, er.prototype.isObject3D = !0;
            var tr = new $t,
                nr = new $t,
                rr = new $t,
                ir = new $t,
                ar = new $t,
                or = new $t,
                sr = new $t,
                lr = new $t,
                ur = new $t,
                cr = new $t,
                fr = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new $t;
                        d(this, e), this.a = t, this.b = n, this.c = r
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t, n) {
                            return this.a.copy(e), this.b.copy(t), this.c.copy(n), this
                        }
                    }, {
                        key: "setFromPointsAndIndices",
                        value: function(e, t, n, r) {
                            return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                        }
                    }, {
                        key: "getArea",
                        value: function() {
                            return tr.subVectors(this.c, this.b), nr.subVectors(this.a, this.b), .5 * tr.cross(nr).length()
                        }
                    }, {
                        key: "getMidpoint",
                        value: function(e) {
                            return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                        }
                    }, {
                        key: "getNormal",
                        value: function(t) {
                            return e.getNormal(this.a, this.b, this.c, t)
                        }
                    }, {
                        key: "getPlane",
                        value: function(e) {
                            return e.setFromCoplanarPoints(this.a, this.b, this.c)
                        }
                    }, {
                        key: "getBarycoord",
                        value: function(t, n) {
                            return e.getBarycoord(t, this.a, this.b, this.c, n)
                        }
                    }, {
                        key: "getUV",
                        value: function(t, n, r, i, a) {
                            return e.getUV(t, this.a, this.b, this.c, n, r, i, a)
                        }
                    }, {
                        key: "containsPoint",
                        value: function(t) {
                            return e.containsPoint(t, this.a, this.b, this.c)
                        }
                    }, {
                        key: "isFrontFacing",
                        value: function(t) {
                            return e.isFrontFacing(this.a, this.b, this.c, t)
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return e.intersectsTriangle(this)
                        }
                    }, {
                        key: "closestPointToPoint",
                        value: function(e, t) {
                            var n, r, i = this.a,
                                a = this.b,
                                o = this.c;
                            ar.subVectors(a, i), or.subVectors(o, i), lr.subVectors(e, i);
                            var s = ar.dot(lr),
                                l = or.dot(lr);
                            if (s <= 0 && l <= 0) return t.copy(i);
                            ur.subVectors(e, a);
                            var u = ar.dot(ur),
                                c = or.dot(ur);
                            if (u >= 0 && c <= u) return t.copy(a);
                            var f = s * c - u * l;
                            if (f <= 0 && s >= 0 && u <= 0) return n = s / (s - u), t.copy(i).addScaledVector(ar, n);
                            cr.subVectors(e, o);
                            var d = ar.dot(cr),
                                h = or.dot(cr);
                            if (h >= 0 && d <= h) return t.copy(o);
                            var p = d * l - s * h;
                            if (p <= 0 && l >= 0 && h <= 0) return r = l / (l - h), t.copy(i).addScaledVector(or, r);
                            var v = u * h - d * c;
                            if (v <= 0 && c - u >= 0 && d - h >= 0) return sr.subVectors(o, a), r = (c - u) / (c - u + (d - h)), t.copy(a).addScaledVector(sr, r);
                            var m = 1 / (v + p + f);
                            return n = p * m, r = f * m, t.copy(i).addScaledVector(ar, n).addScaledVector(or, r)
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                        }
                    }], [{
                        key: "getNormal",
                        value: function(e, t, n, r) {
                            r.subVectors(n, t), tr.subVectors(e, t), r.cross(tr);
                            var i = r.lengthSq();
                            return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
                        }
                    }, {
                        key: "getBarycoord",
                        value: function(e, t, n, r, i) {
                            tr.subVectors(r, t), nr.subVectors(n, t), rr.subVectors(e, t);
                            var a = tr.dot(tr),
                                o = tr.dot(nr),
                                s = tr.dot(rr),
                                l = nr.dot(nr),
                                u = nr.dot(rr),
                                c = a * l - o * o;
                            if (0 === c) return i.set(-2, -1, -1);
                            var f = 1 / c,
                                d = (l * s - o * u) * f,
                                h = (a * u - o * s) * f;
                            return i.set(1 - d - h, h, d)
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e, t, n, r) {
                            return this.getBarycoord(e, t, n, r, ir), ir.x >= 0 && ir.y >= 0 && ir.x + ir.y <= 1
                        }
                    }, {
                        key: "getUV",
                        value: function(e, t, n, r, i, a, o, s) {
                            return this.getBarycoord(e, t, n, r, ir), s.set(0, 0), s.addScaledVector(i, ir.x), s.addScaledVector(a, ir.y), s.addScaledVector(o, ir.z), s
                        }
                    }, {
                        key: "isFrontFacing",
                        value: function(e, t, n, r) {
                            return tr.subVectors(n, t), nr.subVectors(e, t), tr.cross(nr).dot(r) < 0
                        }
                    }]), e
                }(),
                dr = 0,
                hr = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return d(this, n), e = t.call(this), Object.defineProperty(b(e), "id", {
                            value: dr++
                        }), e.uuid = Nt(), e.name = "", e.type = "Material", e.fog = !0, e.blending = 1, e.side = 0, e.vertexColors = !1, e.opacity = 1, e.transparent = !1, e.blendSrc = 204, e.blendDst = 205, e.blendEquation = He, e.blendSrcAlpha = null, e.blendDstAlpha = null, e.blendEquationAlpha = null, e.depthFunc = 3, e.depthTest = !0, e.depthWrite = !0, e.stencilWriteMask = 255, e.stencilFunc = 519, e.stencilRef = 0, e.stencilFuncMask = 255, e.stencilFail = Mt, e.stencilZFail = Mt, e.stencilZPass = Mt, e.stencilWrite = !1, e.clippingPlanes = null, e.clipIntersection = !1, e.clipShadows = !1, e.shadowSide = null, e.colorWrite = !0, e.precision = null, e.polygonOffset = !1, e.polygonOffsetFactor = 0, e.polygonOffsetUnits = 0, e.dithering = !1, e.alphaTest = 0, e.alphaToCoverage = !1, e.premultipliedAlpha = !1, e.visible = !0, e.toneMapped = !0, e.userData = {}, e.version = 0, e
                    }
                    return p(n, [{
                        key: "onBuild",
                        value: function() {}
                    }, {
                        key: "onBeforeCompile",
                        value: function() {}
                    }, {
                        key: "customProgramCacheKey",
                        value: function() {
                            return this.onBeforeCompile.toString()
                        }
                    }, {
                        key: "setValues",
                        value: function(e) {
                            if (void 0 !== e)
                                for (var t in e) {
                                    var n = e[t];
                                    if (void 0 !== n)
                                        if ("shading" !== t) {
                                            var r = this[t];
                                            void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                                        } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === n;
                                    else console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                                }
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = void 0 === e || "string" === typeof e;
                            t && (e = {
                                textures: {},
                                images: {}
                            });
                            var n = {
                                metadata: {
                                    version: 4.5,
                                    type: "Material",
                                    generator: "Material.toJSON"
                                }
                            };

                            function r(e) {
                                var t = [];
                                for (var n in e) {
                                    var r = e[n];
                                    delete r.metadata, t.push(r)
                                }
                                return t
                            }
                            if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), void 0 !== this.specularIntensity && (n.specularIntensity = this.specularIntensity), this.specularTint && this.specularTint.isColor && (n.specularTint = this.specularTint.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularTintMap && this.specularTintMap.isTexture && (n.specularTintMap = this.specularTintMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, void 0 !== this.combine && (n.combine = this.combine)), void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity), void 0 !== this.reflectivity && (n.reflectivity = this.reflectivity), void 0 !== this.refractionRatio && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), void 0 !== this.transmission && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), void 0 !== this.thickness && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), void 0 !== this.attenuationDistance && (n.attenuationDistance = this.attenuationDistance), void 0 !== this.attenuationTint && (n.attenuationTint = this.attenuationTint.getHex()), void 0 !== this.size && (n.size = this.size), null !== this.shadowSide && (n.shadowSide = this.shadowSide), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), 1 !== this.blending && (n.blending = this.blending), 0 !== this.side && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), !0 === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), !0 === this.polygonOffset && (n.polygonOffset = !0), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), void 0 !== this.dashSize && (n.dashSize = this.dashSize), void 0 !== this.gapSize && (n.gapSize = this.gapSize), void 0 !== this.scale && (n.scale = this.scale), !0 === this.dithering && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), !0 === this.alphaToCoverage && (n.alphaToCoverage = this.alphaToCoverage), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), !0 === this.flatShading && (n.flatShading = this.flatShading), !1 === this.visible && (n.visible = !1), !1 === this.toneMapped && (n.toneMapped = !1), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t) {
                                var i = r(e.textures),
                                    a = r(e.images);
                                i.length > 0 && (n.textures = i), a.length > 0 && (n.images = a)
                            }
                            return n
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
                            var t = e.clippingPlanes,
                                n = null;
                            if (null !== t) {
                                var r = t.length;
                                n = new Array(r);
                                for (var i = 0; i !== r; ++i) n[i] = t[i].clone()
                            }
                            return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }]), n
                }(Lt);
            hr.prototype.isMaterial = !0;
            var pr = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    rebeccapurple: 6697881,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074
                },
                vr = {
                    h: 0,
                    s: 0,
                    l: 0
                },
                mr = {
                    h: 0,
                    s: 0,
                    l: 0
                };

            function gr(e, t, n) {
                return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
            }

            function yr(e) {
                return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
            }

            function xr(e) {
                return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
            }
            var br = function() {
                function e(t, n, r) {
                    return d(this, e), void 0 === n && void 0 === r ? this.set(t) : this.setRGB(t, n, r)
                }
                return p(e, [{
                    key: "set",
                    value: function(e) {
                        return e && e.isColor ? this.copy(e) : "number" === typeof e ? this.setHex(e) : "string" === typeof e && this.setStyle(e), this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.r = e, this.g = e, this.b = e, this
                    }
                }, {
                    key: "setHex",
                    value: function(e) {
                        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
                    }
                }, {
                    key: "setRGB",
                    value: function(e, t, n) {
                        return this.r = e, this.g = t, this.b = n, this
                    }
                }, {
                    key: "setHSL",
                    value: function(e, t, n) {
                        if (e = zt(e, 1), t = It(t, 0, 1), n = It(n, 0, 1), 0 === t) this.r = this.g = this.b = n;
                        else {
                            var r = n <= .5 ? n * (1 + t) : n + t - n * t,
                                i = 2 * n - r;
                            this.r = gr(i, r, e + 1 / 3), this.g = gr(i, r, e), this.b = gr(i, r, e - 1 / 3)
                        }
                        return this
                    }
                }, {
                    key: "setStyle",
                    value: function(e) {
                        function t(t) {
                            void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
                        }
                        var n;
                        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
                            var r, i = n[1],
                                a = n[2];
                            switch (i) {
                                case "rgb":
                                case "rgba":
                                    if (r = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return this.r = Math.min(255, parseInt(r[1], 10)) / 255, this.g = Math.min(255, parseInt(r[2], 10)) / 255, this.b = Math.min(255, parseInt(r[3], 10)) / 255, t(r[4]), this;
                                    if (r = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return this.r = Math.min(100, parseInt(r[1], 10)) / 100, this.g = Math.min(100, parseInt(r[2], 10)) / 100, this.b = Math.min(100, parseInt(r[3], 10)) / 100, t(r[4]), this;
                                    break;
                                case "hsl":
                                case "hsla":
                                    if (r = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) {
                                        var o = parseFloat(r[1]) / 360,
                                            s = parseInt(r[2], 10) / 100,
                                            l = parseInt(r[3], 10) / 100;
                                        return t(r[4]), this.setHSL(o, s, l)
                                    }
                            }
                        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
                            var u = n[1],
                                c = u.length;
                            if (3 === c) return this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255, this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255, this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255, this;
                            if (6 === c) return this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255, this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255, this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255, this
                        }
                        return e && e.length > 0 ? this.setColorName(e) : this
                    }
                }, {
                    key: "setColorName",
                    value: function(e) {
                        var t = pr[e.toLowerCase()];
                        return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.r, this.g, this.b)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.r = e.r, this.g = e.g, this.b = e.b, this
                    }
                }, {
                    key: "copyGammaToLinear",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                        return this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this
                    }
                }, {
                    key: "copyLinearToGamma",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2,
                            n = t > 0 ? 1 / t : 1;
                        return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this
                    }
                }, {
                    key: "convertGammaToLinear",
                    value: function(e) {
                        return this.copyGammaToLinear(this, e), this
                    }
                }, {
                    key: "convertLinearToGamma",
                    value: function(e) {
                        return this.copyLinearToGamma(this, e), this
                    }
                }, {
                    key: "copySRGBToLinear",
                    value: function(e) {
                        return this.r = yr(e.r), this.g = yr(e.g), this.b = yr(e.b), this
                    }
                }, {
                    key: "copyLinearToSRGB",
                    value: function(e) {
                        return this.r = xr(e.r), this.g = xr(e.g), this.b = xr(e.b), this
                    }
                }, {
                    key: "convertSRGBToLinear",
                    value: function() {
                        return this.copySRGBToLinear(this), this
                    }
                }, {
                    key: "convertLinearToSRGB",
                    value: function() {
                        return this.copyLinearToSRGB(this), this
                    }
                }, {
                    key: "getHex",
                    value: function() {
                        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                    }
                }, {
                    key: "getHexString",
                    value: function() {
                        return ("000000" + this.getHex().toString(16)).slice(-6)
                    }
                }, {
                    key: "getHSL",
                    value: function(e) {
                        var t, n, r = this.r,
                            i = this.g,
                            a = this.b,
                            o = Math.max(r, i, a),
                            s = Math.min(r, i, a),
                            l = (s + o) / 2;
                        if (s === o) t = 0, n = 0;
                        else {
                            var u = o - s;
                            switch (n = l <= .5 ? u / (o + s) : u / (2 - o - s), o) {
                                case r:
                                    t = (i - a) / u + (i < a ? 6 : 0);
                                    break;
                                case i:
                                    t = (a - r) / u + 2;
                                    break;
                                case a:
                                    t = (r - i) / u + 4
                            }
                            t /= 6
                        }
                        return e.h = t, e.s = n, e.l = l, e
                    }
                }, {
                    key: "getStyle",
                    value: function() {
                        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                    }
                }, {
                    key: "offsetHSL",
                    value: function(e, t, n) {
                        return this.getHSL(vr), vr.h += e, vr.s += t, vr.l += n, this.setHSL(vr.h, vr.s, vr.l), this
                    }
                }, {
                    key: "add",
                    value: function(e) {
                        return this.r += e.r, this.g += e.g, this.b += e.b, this
                    }
                }, {
                    key: "addColors",
                    value: function(e, t) {
                        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.r += e, this.g += e, this.b += e, this
                    }
                }, {
                    key: "sub",
                    value: function(e) {
                        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.r *= e, this.g *= e, this.b *= e, this
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
                    }
                }, {
                    key: "lerpColors",
                    value: function(e, t, n) {
                        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this
                    }
                }, {
                    key: "lerpHSL",
                    value: function(e, t) {
                        this.getHSL(vr), e.getHSL(mr);
                        var n = Ot(vr.h, mr.h, t),
                            r = Ot(vr.s, mr.s, t),
                            i = Ot(vr.l, mr.l, t);
                        return this.setHSL(n, r, i), this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.r === this.r && e.g === this.g && e.b === this.b
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t) {
                        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), !0 === e.normalized && (this.r /= 255, this.g /= 255, this.b /= 255), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.getHex()
                    }
                }]), e
            }();
            br.NAMES = pr, br.prototype.isColor = !0, br.prototype.r = 1, br.prototype.g = 1, br.prototype.b = 1;
            var _r = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "MeshBasicMaterial", r.color = new br(16777215), r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.specularMap = null, r.alphaMap = null, r.envMap = null, r.combine = 0, r.reflectivity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this
                    }
                }]), n
            }(hr);
            _r.prototype.isMeshBasicMaterial = !0;
            var wr = new $t,
                Sr = new Bt,
                Mr = function() {
                    function e(t, n, r) {
                        if (d(this, e), Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                        this.name = "", this.array = t, this.itemSize = n, this.count = void 0 !== t ? t.length / n : 0, this.normalized = !0 === r, this.usage = kt, this.updateRange = {
                            offset: 0,
                            count: -1
                        }, this.version = 0
                    }
                    return p(e, [{
                        key: "onUploadCallback",
                        value: function() {}
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }, {
                        key: "setUsage",
                        value: function(e) {
                            return this.usage = e, this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this
                        }
                    }, {
                        key: "copyAt",
                        value: function(e, t, n) {
                            e *= this.itemSize, n *= t.itemSize;
                            for (var r = 0, i = this.itemSize; r < i; r++) this.array[e + r] = t.array[n + r];
                            return this
                        }
                    }, {
                        key: "copyArray",
                        value: function(e) {
                            return this.array.set(e), this
                        }
                    }, {
                        key: "copyColorsArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r), a = new br), t[n++] = a.r, t[n++] = a.g, t[n++] = a.b
                            }
                            return this
                        }
                    }, {
                        key: "copyVector2sArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r), a = new Bt), t[n++] = a.x, t[n++] = a.y
                            }
                            return this
                        }
                    }, {
                        key: "copyVector3sArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r), a = new $t), t[n++] = a.x, t[n++] = a.y, t[n++] = a.z
                            }
                            return this
                        }
                    }, {
                        key: "copyVector4sArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r), a = new qt), t[n++] = a.x, t[n++] = a.y, t[n++] = a.z, t[n++] = a.w
                            }
                            return this
                        }
                    }, {
                        key: "applyMatrix3",
                        value: function(e) {
                            if (2 === this.itemSize)
                                for (var t = 0, n = this.count; t < n; t++) Sr.fromBufferAttribute(this, t), Sr.applyMatrix3(e), this.setXY(t, Sr.x, Sr.y);
                            else if (3 === this.itemSize)
                                for (var r = 0, i = this.count; r < i; r++) wr.fromBufferAttribute(this, r), wr.applyMatrix3(e), this.setXYZ(r, wr.x, wr.y, wr.z);
                            return this
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) wr.x = this.getX(t), wr.y = this.getY(t), wr.z = this.getZ(t), wr.applyMatrix4(e), this.setXYZ(t, wr.x, wr.y, wr.z);
                            return this
                        }
                    }, {
                        key: "applyNormalMatrix",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) wr.x = this.getX(t), wr.y = this.getY(t), wr.z = this.getZ(t), wr.applyNormalMatrix(e), this.setXYZ(t, wr.x, wr.y, wr.z);
                            return this
                        }
                    }, {
                        key: "transformDirection",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) wr.x = this.getX(t), wr.y = this.getY(t), wr.z = this.getZ(t), wr.transformDirection(e), this.setXYZ(t, wr.x, wr.y, wr.z);
                            return this
                        }
                    }, {
                        key: "set",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return this.array.set(e, t), this
                        }
                    }, {
                        key: "getX",
                        value: function(e) {
                            return this.array[e * this.itemSize]
                        }
                    }, {
                        key: "setX",
                        value: function(e, t) {
                            return this.array[e * this.itemSize] = t, this
                        }
                    }, {
                        key: "getY",
                        value: function(e) {
                            return this.array[e * this.itemSize + 1]
                        }
                    }, {
                        key: "setY",
                        value: function(e, t) {
                            return this.array[e * this.itemSize + 1] = t, this
                        }
                    }, {
                        key: "getZ",
                        value: function(e) {
                            return this.array[e * this.itemSize + 2]
                        }
                    }, {
                        key: "setZ",
                        value: function(e, t) {
                            return this.array[e * this.itemSize + 2] = t, this
                        }
                    }, {
                        key: "getW",
                        value: function(e) {
                            return this.array[e * this.itemSize + 3]
                        }
                    }, {
                        key: "setW",
                        value: function(e, t) {
                            return this.array[e * this.itemSize + 3] = t, this
                        }
                    }, {
                        key: "setXY",
                        value: function(e, t, n) {
                            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this
                        }
                    }, {
                        key: "setXYZ",
                        value: function(e, t, n, r) {
                            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this
                        }
                    }, {
                        key: "setXYZW",
                        value: function(e, t, n, r, i) {
                            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this.array[e + 3] = i, this
                        }
                    }, {
                        key: "onUpload",
                        value: function(e) {
                            return this.onUploadCallback = e, this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return new this.constructor(this.array, this.itemSize).copy(this)
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                itemSize: this.itemSize,
                                type: this.array.constructor.name,
                                array: Array.prototype.slice.call(this.array),
                                normalized: this.normalized
                            };
                            return "" !== this.name && (e.name = this.name), this.usage !== kt && (e.usage = this.usage), 0 === this.updateRange.offset && -1 === this.updateRange.count || (e.updateRange = this.updateRange), e
                        }
                    }]), e
                }();
            Mr.prototype.isBufferAttribute = !0;
            var kr = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return d(this, n), t.call(this, new Uint16Array(e), r, i)
                    }
                    return p(n)
                }(Mr),
                Er = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return d(this, n), t.call(this, new Uint32Array(e), r, i)
                    }
                    return p(n)
                }(Mr);
            (function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    return d(this, n), t.call(this, new Uint16Array(e), r, i)
                }
                return p(n)
            })(Mr).prototype.isFloat16BufferAttribute = !0;
            var Tr = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    return d(this, n), t.call(this, new Float32Array(e), r, i)
                }
                return p(n)
            }(Mr);

            function Lr(e) {
                if (0 === e.length) return -1 / 0;
                for (var t = e[0], n = 1, r = e.length; n < r; ++n) e[n] > t && (t = e[n]);
                return t
            }
            Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array;
            var Ar = 0,
                Cr = new An,
                Pr = new er,
                Rr = new $t,
                Nr = new en,
                Ir = new en,
                zr = new $t,
                Or = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return d(this, n), e = t.call(this), Object.defineProperty(b(e), "id", {
                            value: Ar++
                        }), e.uuid = Nt(), e.name = "", e.type = "BufferGeometry", e.index = null, e.attributes = {}, e.morphAttributes = {}, e.morphTargetsRelative = !1, e.groups = [], e.boundingBox = null, e.boundingSphere = null, e.drawRange = {
                            start: 0,
                            count: 1 / 0
                        }, e.userData = {}, e
                    }
                    return p(n, [{
                        key: "getIndex",
                        value: function() {
                            return this.index
                        }
                    }, {
                        key: "setIndex",
                        value: function(e) {
                            return Array.isArray(e) ? this.index = new(Lr(e) > 65535 ? Er : kr)(e, 1) : this.index = e, this
                        }
                    }, {
                        key: "getAttribute",
                        value: function(e) {
                            return this.attributes[e]
                        }
                    }, {
                        key: "setAttribute",
                        value: function(e, t) {
                            return this.attributes[e] = t, this
                        }
                    }, {
                        key: "deleteAttribute",
                        value: function(e) {
                            return delete this.attributes[e], this
                        }
                    }, {
                        key: "hasAttribute",
                        value: function(e) {
                            return void 0 !== this.attributes[e]
                        }
                    }, {
                        key: "addGroup",
                        value: function(e, t) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                            this.groups.push({
                                start: e,
                                count: t,
                                materialIndex: n
                            })
                        }
                    }, {
                        key: "clearGroups",
                        value: function() {
                            this.groups = []
                        }
                    }, {
                        key: "setDrawRange",
                        value: function(e, t) {
                            this.drawRange.start = e, this.drawRange.count = t
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            var t = this.attributes.position;
                            void 0 !== t && (t.applyMatrix4(e), t.needsUpdate = !0);
                            var n = this.attributes.normal;
                            if (void 0 !== n) {
                                var r = (new Ht).getNormalMatrix(e);
                                n.applyNormalMatrix(r), n.needsUpdate = !0
                            }
                            var i = this.attributes.tangent;
                            return void 0 !== i && (i.transformDirection(e), i.needsUpdate = !0), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
                        }
                    }, {
                        key: "applyQuaternion",
                        value: function(e) {
                            return Cr.makeRotationFromQuaternion(e), this.applyMatrix4(Cr), this
                        }
                    }, {
                        key: "rotateX",
                        value: function(e) {
                            return Cr.makeRotationX(e), this.applyMatrix4(Cr), this
                        }
                    }, {
                        key: "rotateY",
                        value: function(e) {
                            return Cr.makeRotationY(e), this.applyMatrix4(Cr), this
                        }
                    }, {
                        key: "rotateZ",
                        value: function(e) {
                            return Cr.makeRotationZ(e), this.applyMatrix4(Cr), this
                        }
                    }, {
                        key: "translate",
                        value: function(e, t, n) {
                            return Cr.makeTranslation(e, t, n), this.applyMatrix4(Cr), this
                        }
                    }, {
                        key: "scale",
                        value: function(e, t, n) {
                            return Cr.makeScale(e, t, n), this.applyMatrix4(Cr), this
                        }
                    }, {
                        key: "lookAt",
                        value: function(e) {
                            return Pr.lookAt(e), Pr.updateMatrix(), this.applyMatrix4(Pr.matrix), this
                        }
                    }, {
                        key: "center",
                        value: function() {
                            return this.computeBoundingBox(), this.boundingBox.getCenter(Rr).negate(), this.translate(Rr.x, Rr.y, Rr.z), this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e) {
                            for (var t = [], n = 0, r = e.length; n < r; n++) {
                                var i = e[n];
                                t.push(i.x, i.y, i.z || 0)
                            }
                            return this.setAttribute("position", new Tr(t, 3)), this
                        }
                    }, {
                        key: "computeBoundingBox",
                        value: function() {
                            null === this.boundingBox && (this.boundingBox = new en);
                            var e = this.attributes.position,
                                t = this.morphAttributes.position;
                            if (e && e.isGLBufferAttribute) return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), void this.boundingBox.set(new $t(-1 / 0, -1 / 0, -1 / 0), new $t(1 / 0, 1 / 0, 1 / 0));
                            if (void 0 !== e) {
                                if (this.boundingBox.setFromBufferAttribute(e), t)
                                    for (var n = 0, r = t.length; n < r; n++) {
                                        var i = t[n];
                                        Nr.setFromBufferAttribute(i), this.morphTargetsRelative ? (zr.addVectors(this.boundingBox.min, Nr.min), this.boundingBox.expandByPoint(zr), zr.addVectors(this.boundingBox.max, Nr.max), this.boundingBox.expandByPoint(zr)) : (this.boundingBox.expandByPoint(Nr.min), this.boundingBox.expandByPoint(Nr.max))
                                    }
                            } else this.boundingBox.makeEmpty();
                            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                        }
                    }, {
                        key: "computeBoundingSphere",
                        value: function() {
                            null === this.boundingSphere && (this.boundingSphere = new bn);
                            var e = this.attributes.position,
                                t = this.morphAttributes.position;
                            if (e && e.isGLBufferAttribute) return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), void this.boundingSphere.set(new $t, 1 / 0);
                            if (e) {
                                var n = this.boundingSphere.center;
                                if (Nr.setFromBufferAttribute(e), t)
                                    for (var r = 0, i = t.length; r < i; r++) {
                                        var a = t[r];
                                        Ir.setFromBufferAttribute(a), this.morphTargetsRelative ? (zr.addVectors(Nr.min, Ir.min), Nr.expandByPoint(zr), zr.addVectors(Nr.max, Ir.max), Nr.expandByPoint(zr)) : (Nr.expandByPoint(Ir.min), Nr.expandByPoint(Ir.max))
                                    }
                                Nr.getCenter(n);
                                for (var o = 0, s = 0, l = e.count; s < l; s++) zr.fromBufferAttribute(e, s), o = Math.max(o, n.distanceToSquared(zr));
                                if (t)
                                    for (var u = 0, c = t.length; u < c; u++)
                                        for (var f = t[u], d = this.morphTargetsRelative, h = 0, p = f.count; h < p; h++) zr.fromBufferAttribute(f, h), d && (Rr.fromBufferAttribute(e, h), zr.add(Rr)), o = Math.max(o, n.distanceToSquared(zr));
                                this.boundingSphere.radius = Math.sqrt(o), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                            }
                        }
                    }, {
                        key: "computeFaceNormals",
                        value: function() {}
                    }, {
                        key: "computeTangents",
                        value: function() {
                            var e = this.index,
                                t = this.attributes;
                            if (null !== e && void 0 !== t.position && void 0 !== t.normal && void 0 !== t.uv) {
                                var n = e.array,
                                    r = t.position.array,
                                    i = t.normal.array,
                                    a = t.uv.array,
                                    o = r.length / 3;
                                void 0 === t.tangent && this.setAttribute("tangent", new Mr(new Float32Array(4 * o), 4));
                                for (var s = t.tangent.array, l = [], u = [], c = 0; c < o; c++) l[c] = new $t, u[c] = new $t;
                                var f = new $t,
                                    d = new $t,
                                    h = new $t,
                                    p = new Bt,
                                    v = new Bt,
                                    m = new Bt,
                                    g = new $t,
                                    y = new $t,
                                    x = this.groups;
                                0 === x.length && (x = [{
                                    start: 0,
                                    count: n.length
                                }]);
                                for (var b = 0, _ = x.length; b < _; ++b)
                                    for (var w = x[b], S = w.start, M = S, k = S + w.count; M < k; M += 3) O(n[M + 0], n[M + 1], n[M + 2]);
                                for (var E = new $t, T = new $t, L = new $t, A = new $t, C = 0, P = x.length; C < P; ++C)
                                    for (var R = x[C], N = R.start, I = N, z = N + R.count; I < z; I += 3) D(n[I + 0]), D(n[I + 1]), D(n[I + 2])
                            } else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");

                            function O(e, t, n) {
                                f.fromArray(r, 3 * e), d.fromArray(r, 3 * t), h.fromArray(r, 3 * n), p.fromArray(a, 2 * e), v.fromArray(a, 2 * t), m.fromArray(a, 2 * n), d.sub(f), h.sub(f), v.sub(p), m.sub(p);
                                var i = 1 / (v.x * m.y - m.x * v.y);
                                isFinite(i) && (g.copy(d).multiplyScalar(m.y).addScaledVector(h, -v.y).multiplyScalar(i), y.copy(h).multiplyScalar(v.x).addScaledVector(d, -m.x).multiplyScalar(i), l[e].add(g), l[t].add(g), l[n].add(g), u[e].add(y), u[t].add(y), u[n].add(y))
                            }

                            function D(e) {
                                L.fromArray(i, 3 * e), A.copy(L);
                                var t = l[e];
                                E.copy(t), E.sub(L.multiplyScalar(L.dot(t))).normalize(), T.crossVectors(A, t);
                                var n = T.dot(u[e]) < 0 ? -1 : 1;
                                s[4 * e] = E.x, s[4 * e + 1] = E.y, s[4 * e + 2] = E.z, s[4 * e + 3] = n
                            }
                        }
                    }, {
                        key: "computeVertexNormals",
                        value: function() {
                            var e = this.index,
                                t = this.getAttribute("position");
                            if (void 0 !== t) {
                                var n = this.getAttribute("normal");
                                if (void 0 === n) n = new Mr(new Float32Array(3 * t.count), 3), this.setAttribute("normal", n);
                                else
                                    for (var r = 0, i = n.count; r < i; r++) n.setXYZ(r, 0, 0, 0);
                                var a = new $t,
                                    o = new $t,
                                    s = new $t,
                                    l = new $t,
                                    u = new $t,
                                    c = new $t,
                                    f = new $t,
                                    d = new $t;
                                if (e)
                                    for (var h = 0, p = e.count; h < p; h += 3) {
                                        var v = e.getX(h + 0),
                                            m = e.getX(h + 1),
                                            g = e.getX(h + 2);
                                        a.fromBufferAttribute(t, v), o.fromBufferAttribute(t, m), s.fromBufferAttribute(t, g), f.subVectors(s, o), d.subVectors(a, o), f.cross(d), l.fromBufferAttribute(n, v), u.fromBufferAttribute(n, m), c.fromBufferAttribute(n, g), l.add(f), u.add(f), c.add(f), n.setXYZ(v, l.x, l.y, l.z), n.setXYZ(m, u.x, u.y, u.z), n.setXYZ(g, c.x, c.y, c.z)
                                    } else
                                        for (var y = 0, x = t.count; y < x; y += 3) a.fromBufferAttribute(t, y + 0), o.fromBufferAttribute(t, y + 1), s.fromBufferAttribute(t, y + 2), f.subVectors(s, o), d.subVectors(a, o), f.cross(d), n.setXYZ(y + 0, f.x, f.y, f.z), n.setXYZ(y + 1, f.x, f.y, f.z), n.setXYZ(y + 2, f.x, f.y, f.z);
                                this.normalizeNormals(), n.needsUpdate = !0
                            }
                        }
                    }, {
                        key: "merge",
                        value: function(e, t) {
                            if (e && e.isBufferGeometry) {
                                void 0 === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                                var n = this.attributes;
                                for (var r in n)
                                    if (void 0 !== e.attributes[r])
                                        for (var i = n[r].array, a = e.attributes[r], o = a.array, s = a.itemSize * t, l = Math.min(o.length, i.length - s), u = 0, c = s; u < l; u++, c++) i[c] = o[u];
                                return this
                            }
                            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e)
                        }
                    }, {
                        key: "normalizeNormals",
                        value: function() {
                            for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++) zr.fromBufferAttribute(e, t), zr.normalize(), e.setXYZ(t, zr.x, zr.y, zr.z)
                        }
                    }, {
                        key: "toNonIndexed",
                        value: function() {
                            function e(e, t) {
                                for (var n = e.array, r = e.itemSize, i = e.normalized, a = new n.constructor(t.length * r), o = 0, s = 0, l = 0, u = t.length; l < u; l++) {
                                    o = e.isInterleavedBufferAttribute ? t[l] * e.data.stride + e.offset : t[l] * r;
                                    for (var c = 0; c < r; c++) a[s++] = n[o++]
                                }
                                return new Mr(a, r, i)
                            }
                            if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
                            var t = new n,
                                r = this.index.array,
                                i = this.attributes;
                            for (var a in i) {
                                var o = e(i[a], r);
                                t.setAttribute(a, o)
                            }
                            var s = this.morphAttributes;
                            for (var l in s) {
                                for (var u = [], c = s[l], f = 0, d = c.length; f < d; f++) {
                                    var h = e(c[f], r);
                                    u.push(h)
                                }
                                t.morphAttributes[l] = u
                            }
                            t.morphTargetsRelative = this.morphTargetsRelative;
                            for (var p = this.groups, v = 0, m = p.length; v < m; v++) {
                                var g = p[v];
                                t.addGroup(g.start, g.count, g.materialIndex)
                            }
                            return t
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                metadata: {
                                    version: 4.5,
                                    type: "BufferGeometry",
                                    generator: "BufferGeometry.toJSON"
                                }
                            };
                            if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), void 0 !== this.parameters) {
                                var t = this.parameters;
                                for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                                return e
                            }
                            e.data = {
                                attributes: {}
                            };
                            var r = this.index;
                            null !== r && (e.data.index = {
                                type: r.array.constructor.name,
                                array: Array.prototype.slice.call(r.array)
                            });
                            var i = this.attributes;
                            for (var a in i) {
                                var o = i[a];
                                e.data.attributes[a] = o.toJSON(e.data)
                            }
                            var s = {},
                                l = !1;
                            for (var u in this.morphAttributes) {
                                for (var c = this.morphAttributes[u], f = [], d = 0, h = c.length; d < h; d++) {
                                    var p = c[d];
                                    f.push(p.toJSON(e.data))
                                }
                                f.length > 0 && (s[u] = f, l = !0)
                            }
                            l && (e.data.morphAttributes = s, e.data.morphTargetsRelative = this.morphTargetsRelative);
                            var v = this.groups;
                            v.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(v)));
                            var m = this.boundingSphere;
                            return null !== m && (e.data.boundingSphere = {
                                center: m.center.toArray(),
                                radius: m.radius
                            }), e
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new n).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
                            var t = {};
                            this.name = e.name;
                            var n = e.index;
                            null !== n && this.setIndex(n.clone(t));
                            var r = e.attributes;
                            for (var i in r) {
                                var a = r[i];
                                this.setAttribute(i, a.clone(t))
                            }
                            var o = e.morphAttributes;
                            for (var s in o) {
                                for (var l = [], u = o[s], c = 0, f = u.length; c < f; c++) l.push(u[c].clone(t));
                                this.morphAttributes[s] = l
                            }
                            this.morphTargetsRelative = e.morphTargetsRelative;
                            for (var d = e.groups, h = 0, p = d.length; h < p; h++) {
                                var v = d[h];
                                this.addGroup(v.start, v.count, v.materialIndex)
                            }
                            var m = e.boundingBox;
                            null !== m && (this.boundingBox = m.clone());
                            var g = e.boundingSphere;
                            return null !== g && (this.boundingSphere = g.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }]), n
                }(Lt);
            Or.prototype.isBufferGeometry = !0;
            var Dr = new An,
                Fr = new Ln,
                Br = new bn,
                Ur = new $t,
                Hr = new $t,
                Vr = new $t,
                Gr = new $t,
                Wr = new $t,
                jr = new $t,
                qr = new $t,
                Xr = new $t,
                Yr = new $t,
                Zr = new Bt,
                Jr = new Bt,
                $r = new Bt,
                Qr = new $t,
                Kr = new $t,
                ei = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Or,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new _r;
                        return d(this, n), (e = t.call(this)).type = "Mesh", e.geometry = r, e.material = i, e.updateMorphTargets(), e
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry) {
                                var t = e.morphAttributes,
                                    n = Object.keys(t);
                                if (n.length > 0) {
                                    var r = t[n[0]];
                                    if (void 0 !== r) {
                                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                                        for (var i = 0, a = r.length; i < a; i++) {
                                            var o = r[i].name || String(i);
                                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = i
                                        }
                                    }
                                }
                            } else {
                                var s = e.morphTargets;
                                void 0 !== s && s.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n, r = this.geometry,
                                i = this.material,
                                a = this.matrixWorld;
                            if (void 0 !== i && (null === r.boundingSphere && r.computeBoundingSphere(), Br.copy(r.boundingSphere), Br.applyMatrix4(a), !1 !== e.ray.intersectsSphere(Br) && (Dr.copy(a).invert(), Fr.copy(e.ray).applyMatrix4(Dr), null === r.boundingBox || !1 !== Fr.intersectsBox(r.boundingBox))))
                                if (r.isBufferGeometry) {
                                    var o = r.index,
                                        s = r.attributes.position,
                                        l = r.morphAttributes.position,
                                        u = r.morphTargetsRelative,
                                        c = r.attributes.uv,
                                        f = r.attributes.uv2,
                                        d = r.groups,
                                        h = r.drawRange;
                                    if (null !== o)
                                        if (Array.isArray(i))
                                            for (var p = 0, v = d.length; p < v; p++)
                                                for (var m = d[p], g = i[m.materialIndex], y = Math.max(m.start, h.start), x = Math.min(m.start + m.count, h.start + h.count); y < x; y += 3) {
                                                    var b = o.getX(y),
                                                        _ = o.getX(y + 1),
                                                        w = o.getX(y + 2);
                                                    (n = ti(this, g, e, Fr, s, l, u, c, f, b, _, w)) && (n.faceIndex = Math.floor(y / 3), n.face.materialIndex = m.materialIndex, t.push(n))
                                                } else
                                                    for (var S = Math.max(0, h.start), M = Math.min(o.count, h.start + h.count); S < M; S += 3) {
                                                        var k = o.getX(S),
                                                            E = o.getX(S + 1),
                                                            T = o.getX(S + 2);
                                                        (n = ti(this, i, e, Fr, s, l, u, c, f, k, E, T)) && (n.faceIndex = Math.floor(S / 3), t.push(n))
                                                    } else if (void 0 !== s)
                                                        if (Array.isArray(i))
                                                            for (var L = 0, A = d.length; L < A; L++)
                                                                for (var C = d[L], P = i[C.materialIndex], R = Math.max(C.start, h.start), N = Math.min(C.start + C.count, h.start + h.count); R < N; R += 3) {
                                                                    (n = ti(this, P, e, Fr, s, l, u, c, f, R, R + 1, R + 2)) && (n.faceIndex = Math.floor(R / 3), n.face.materialIndex = C.materialIndex, t.push(n))
                                                                } else
                                                                    for (var I = Math.max(0, h.start), z = Math.min(s.count, h.start + h.count); I < z; I += 3) {
                                                                        (n = ti(this, i, e, Fr, s, l, u, c, f, I, I + 1, I + 2)) && (n.faceIndex = Math.floor(I / 3), t.push(n))
                                                                    }
                                } else r.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                        }
                    }]), n
                }(er);

            function ti(e, t, n, r, i, a, o, s, l, u, c, f) {
                Ur.fromBufferAttribute(i, u), Hr.fromBufferAttribute(i, c), Vr.fromBufferAttribute(i, f);
                var d = e.morphTargetInfluences;
                if (a && d) {
                    qr.set(0, 0, 0), Xr.set(0, 0, 0), Yr.set(0, 0, 0);
                    for (var h = 0, p = a.length; h < p; h++) {
                        var v = d[h],
                            m = a[h];
                        0 !== v && (Gr.fromBufferAttribute(m, u), Wr.fromBufferAttribute(m, c), jr.fromBufferAttribute(m, f), o ? (qr.addScaledVector(Gr, v), Xr.addScaledVector(Wr, v), Yr.addScaledVector(jr, v)) : (qr.addScaledVector(Gr.sub(Ur), v), Xr.addScaledVector(Wr.sub(Hr), v), Yr.addScaledVector(jr.sub(Vr), v)))
                    }
                    Ur.add(qr), Hr.add(Xr), Vr.add(Yr)
                }
                e.isSkinnedMesh && (e.boneTransform(u, Ur), e.boneTransform(c, Hr), e.boneTransform(f, Vr));
                var g = function(e, t, n, r, i, a, o, s) {
                    if (null === (1 === t.side ? r.intersectTriangle(o, a, i, !0, s) : r.intersectTriangle(i, a, o, 2 !== t.side, s))) return null;
                    Kr.copy(s), Kr.applyMatrix4(e.matrixWorld);
                    var l = n.ray.origin.distanceTo(Kr);
                    return l < n.near || l > n.far ? null : {
                        distance: l,
                        point: Kr.clone(),
                        object: e
                    }
                }(e, t, n, r, Ur, Hr, Vr, Qr);
                if (g) {
                    s && (Zr.fromBufferAttribute(s, u), Jr.fromBufferAttribute(s, c), $r.fromBufferAttribute(s, f), g.uv = fr.getUV(Qr, Ur, Hr, Vr, Zr, Jr, $r, new Bt)), l && (Zr.fromBufferAttribute(l, u), Jr.fromBufferAttribute(l, c), $r.fromBufferAttribute(l, f), g.uv2 = fr.getUV(Qr, Ur, Hr, Vr, Zr, Jr, $r, new Bt));
                    var y = {
                        a: u,
                        b: c,
                        c: f,
                        normal: new $t,
                        materialIndex: 0
                    };
                    fr.getNormal(Ur, Hr, Vr, y.normal), g.face = y
                }
                return g
            }
            ei.prototype.isMesh = !0;
            var ni = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1,
                        l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1;
                    d(this, n), (e = t.call(this)).type = "BoxGeometry", e.parameters = {
                        width: r,
                        height: i,
                        depth: a,
                        widthSegments: o,
                        heightSegments: s,
                        depthSegments: l
                    };
                    var u = b(e);
                    o = Math.floor(o), s = Math.floor(s), l = Math.floor(l);
                    var c = [],
                        f = [],
                        h = [],
                        p = [],
                        v = 0,
                        m = 0;

                    function g(e, t, n, r, i, a, o, s, l, d, g) {
                        for (var y = a / l, x = o / d, b = a / 2, _ = o / 2, w = s / 2, S = l + 1, M = d + 1, k = 0, E = 0, T = new $t, L = 0; L < M; L++)
                            for (var A = L * x - _, C = 0; C < S; C++) {
                                var P = C * y - b;
                                T[e] = P * r, T[t] = A * i, T[n] = w, f.push(T.x, T.y, T.z), T[e] = 0, T[t] = 0, T[n] = s > 0 ? 1 : -1, h.push(T.x, T.y, T.z), p.push(C / l), p.push(1 - L / d), k += 1
                            }
                        for (var R = 0; R < d; R++)
                            for (var N = 0; N < l; N++) {
                                var I = v + N + S * R,
                                    z = v + N + S * (R + 1),
                                    O = v + (N + 1) + S * (R + 1),
                                    D = v + (N + 1) + S * R;
                                c.push(I, z, D), c.push(z, O, D), E += 6
                            }
                        u.addGroup(m, E, g), m += E, v += k
                    }
                    return g("z", "y", "x", -1, -1, a, i, r, l, s, 0), g("z", "y", "x", 1, -1, a, i, -r, l, s, 1), g("x", "z", "y", 1, 1, r, a, i, o, l, 2), g("x", "z", "y", 1, -1, r, a, -i, o, l, 3), g("x", "y", "z", 1, -1, r, i, a, o, s, 4), g("x", "y", "z", -1, -1, r, i, -a, o, s, 5), e.setIndex(c), e.setAttribute("position", new Tr(f, 3)), e.setAttribute("normal", new Tr(h, 3)), e.setAttribute("uv", new Tr(p, 2)), e
                }
                return p(n, null, [{
                    key: "fromJSON",
                    value: function(e) {
                        return new n(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments)
                    }
                }]), n
            }(Or);

            function ri(e) {
                var t = {};
                for (var n in e)
                    for (var r in t[n] = {}, e[n]) {
                        var i = e[n][r];
                        i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
                    }
                return t
            }

            function ii(e) {
                for (var t = {}, n = 0; n < e.length; n++) {
                    var r = ri(e[n]);
                    for (var i in r) t[i] = r[i]
                }
                return t
            }
            var ai = {
                    clone: ri,
                    merge: ii
                },
                oi = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return d(this, n), (r = t.call(this)).type = "ShaderMaterial", r.defines = {}, r.uniforms = {}, r.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", r.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", r.linewidth = 1, r.wireframe = !1, r.wireframeLinewidth = 1, r.fog = !1, r.lights = !1, r.clipping = !1, r.extensions = {
                            derivatives: !1,
                            fragDepth: !1,
                            drawBuffers: !1,
                            shaderTextureLOD: !1
                        }, r.defaultAttributeValues = {
                            color: [1, 1, 1],
                            uv: [0, 0],
                            uv2: [0, 0]
                        }, r.index0AttributeName = void 0, r.uniformsNeedUpdate = !1, r.glslVersion = null, void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), r.setValues(e)), r
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = ri(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                            for (var r in t.glslVersion = this.glslVersion, t.uniforms = {}, this.uniforms) {
                                var i = this.uniforms[r].value;
                                i && i.isTexture ? t.uniforms[r] = {
                                    type: "t",
                                    value: i.toJSON(e).uuid
                                } : i && i.isColor ? t.uniforms[r] = {
                                    type: "c",
                                    value: i.getHex()
                                } : i && i.isVector2 ? t.uniforms[r] = {
                                    type: "v2",
                                    value: i.toArray()
                                } : i && i.isVector3 ? t.uniforms[r] = {
                                    type: "v3",
                                    value: i.toArray()
                                } : i && i.isVector4 ? t.uniforms[r] = {
                                    type: "v4",
                                    value: i.toArray()
                                } : i && i.isMatrix3 ? t.uniforms[r] = {
                                    type: "m3",
                                    value: i.toArray()
                                } : i && i.isMatrix4 ? t.uniforms[r] = {
                                    type: "m4",
                                    value: i.toArray()
                                } : t.uniforms[r] = {
                                    value: i
                                }
                            }
                            Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
                            var a = {};
                            for (var o in this.extensions) !0 === this.extensions[o] && (a[o] = !0);
                            return Object.keys(a).length > 0 && (t.extensions = a), t
                        }
                    }]), n
                }(hr);
            oi.prototype.isShaderMaterial = !0;
            var si = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return d(this, n), (e = t.call(this)).type = "Camera", e.matrixWorldInverse = new An, e.projectionMatrix = new An, e.projectionMatrixInverse = new An, e
                }
                return p(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return Ue(g(n.prototype), "copy", this).call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this
                    }
                }, {
                    key: "getWorldDirection",
                    value: function(e) {
                        this.updateWorldMatrix(!0, !1);
                        var t = this.matrixWorld.elements;
                        return e.set(-t[8], -t[9], -t[10]).normalize()
                    }
                }, {
                    key: "updateMatrixWorld",
                    value: function(e) {
                        Ue(g(n.prototype), "updateMatrixWorld", this).call(this, e), this.matrixWorldInverse.copy(this.matrixWorld).invert()
                    }
                }, {
                    key: "updateWorldMatrix",
                    value: function(e, t) {
                        Ue(g(n.prototype), "updateWorldMatrix", this).call(this, e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert()
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).copy(this)
                    }
                }]), n
            }(er);
            si.prototype.isCamera = !0;
            var li = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 50,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 2e3;
                    return d(this, n), (e = t.call(this)).type = "PerspectiveCamera", e.fov = r, e.zoom = 1, e.near = a, e.far = o, e.focus = 10, e.aspect = i, e.view = null, e.filmGauge = 35, e.filmOffset = 0, e.updateProjectionMatrix(), e
                }
                return p(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return Ue(g(n.prototype), "copy", this).call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this
                    }
                }, {
                    key: "setFocalLength",
                    value: function(e) {
                        var t = .5 * this.getFilmHeight() / e;
                        this.fov = 2 * Rt * Math.atan(t), this.updateProjectionMatrix()
                    }
                }, {
                    key: "getFocalLength",
                    value: function() {
                        var e = Math.tan(.5 * Pt * this.fov);
                        return .5 * this.getFilmHeight() / e
                    }
                }, {
                    key: "getEffectiveFOV",
                    value: function() {
                        return 2 * Rt * Math.atan(Math.tan(.5 * Pt * this.fov) / this.zoom)
                    }
                }, {
                    key: "getFilmWidth",
                    value: function() {
                        return this.filmGauge * Math.min(this.aspect, 1)
                    }
                }, {
                    key: "getFilmHeight",
                    value: function() {
                        return this.filmGauge / Math.max(this.aspect, 1)
                    }
                }, {
                    key: "setViewOffset",
                    value: function(e, t, n, r, i, a) {
                        this.aspect = e / t, null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = a, this.updateProjectionMatrix()
                    }
                }, {
                    key: "clearViewOffset",
                    value: function() {
                        null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
                    }
                }, {
                    key: "updateProjectionMatrix",
                    value: function() {
                        var e = this.near,
                            t = e * Math.tan(.5 * Pt * this.fov) / this.zoom,
                            n = 2 * t,
                            r = this.aspect * n,
                            i = -.5 * r,
                            a = this.view;
                        if (null !== this.view && this.view.enabled) {
                            var o = a.fullWidth,
                                s = a.fullHeight;
                            i += a.offsetX * r / o, t -= a.offsetY * n / s, r *= a.width / o, n *= a.height / s
                        }
                        var l = this.filmOffset;
                        0 !== l && (i += e * l / this.getFilmWidth()), this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert()
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t
                    }
                }]), n
            }(si);
            li.prototype.isPerspectiveCamera = !0;
            var ui = 90,
                ci = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        if (d(this, n), (a = t.call(this)).type = "CubeCamera", !0 !== i.isWebGLCubeRenderTarget) return console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."), _(a);
                        a.renderTarget = i;
                        var o = new li(ui, 1, e, r);
                        o.layers = a.layers, o.up.set(0, -1, 0), o.lookAt(new $t(1, 0, 0)), a.add(o);
                        var s = new li(ui, 1, e, r);
                        s.layers = a.layers, s.up.set(0, -1, 0), s.lookAt(new $t(-1, 0, 0)), a.add(s);
                        var l = new li(ui, 1, e, r);
                        l.layers = a.layers, l.up.set(0, 0, 1), l.lookAt(new $t(0, 1, 0)), a.add(l);
                        var u = new li(ui, 1, e, r);
                        u.layers = a.layers, u.up.set(0, 0, -1), u.lookAt(new $t(0, -1, 0)), a.add(u);
                        var c = new li(ui, 1, e, r);
                        c.layers = a.layers, c.up.set(0, -1, 0), c.lookAt(new $t(0, 0, 1)), a.add(c);
                        var f = new li(ui, 1, e, r);
                        return f.layers = a.layers, f.up.set(0, -1, 0), f.lookAt(new $t(0, 0, -1)), a.add(f), a
                    }
                    return p(n, [{
                        key: "update",
                        value: function(e, t) {
                            null === this.parent && this.updateMatrixWorld();
                            var n = this.renderTarget,
                                r = u(this.children, 6),
                                i = r[0],
                                a = r[1],
                                o = r[2],
                                s = r[3],
                                l = r[4],
                                c = r[5],
                                f = e.xr.enabled,
                                d = e.getRenderTarget();
                            e.xr.enabled = !1;
                            var h = n.texture.generateMipmaps;
                            n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, a), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, s), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = h, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(d), e.xr.enabled = f
                        }
                    }]), n
                }(er),
                fi = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a, o, s, l, u, c, f) {
                        var h;
                        return d(this, n), e = void 0 !== e ? e : [], r = void 0 !== r ? r : Ve, l = void 0 !== l ? l : lt, (h = t.call(this, e, r, i, a, o, s, l, u, c, f)).flipY = !1, h
                    }
                    return p(n, [{
                        key: "images",
                        get: function() {
                            return this.image
                        },
                        set: function(e) {
                            this.image = e
                        }
                    }]), n
                }(Wt);
            fi.prototype.isCubeTexture = !0;
            var di = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    return d(this, n), Number.isInteger(r) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), r = i), a = t.call(this, e, e, r), r = r || {}, a.texture = new fi(void 0, r.mapping, r.wrapS, r.wrapT, r.magFilter, r.minFilter, r.format, r.type, r.anisotropy, r.encoding), a.texture.isRenderTargetTexture = !0, a.texture.generateMipmaps = void 0 !== r.generateMipmaps && r.generateMipmaps, a.texture.minFilter = void 0 !== r.minFilter ? r.minFilter : et, a.texture._needsFlipEnvMap = !1, a
                }
                return p(n, [{
                    key: "fromEquirectangularTexture",
                    value: function(e, t) {
                        this.texture.type = t.type, this.texture.format = ut, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
                        var n = {
                                tEquirect: {
                                    value: null
                                }
                            },
                            r = "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",
                            i = "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",
                            a = new ni(5, 5, 5),
                            o = new oi({
                                name: "CubemapFromEquirect",
                                uniforms: ri(n),
                                vertexShader: r,
                                fragmentShader: i,
                                side: 1,
                                blending: 0
                            });
                        o.uniforms.tEquirect.value = t;
                        var s = new ei(a, o),
                            l = t.minFilter;
                        return t.minFilter === tt && (t.minFilter = et), new ci(1, 10, this).update(e, s), t.minFilter = l, s.geometry.dispose(), s.material.dispose(), this
                    }
                }, {
                    key: "clear",
                    value: function(e, t, n, r) {
                        for (var i = e.getRenderTarget(), a = 0; a < 6; a++) e.setRenderTarget(this, a), e.clear(t, n, r);
                        e.setRenderTarget(i)
                    }
                }]), n
            }(Xt);
            di.prototype.isWebGLCubeRenderTarget = !0;
            var hi = new $t,
                pi = new $t,
                vi = new Ht,
                mi = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t(1, 0, 0),
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        d(this, e), this.normal = t, this.constant = n
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.normal.copy(e), this.constant = t, this
                        }
                    }, {
                        key: "setComponents",
                        value: function(e, t, n, r) {
                            return this.normal.set(e, t, n), this.constant = r, this
                        }
                    }, {
                        key: "setFromNormalAndCoplanarPoint",
                        value: function(e, t) {
                            return this.normal.copy(e), this.constant = -t.dot(this.normal), this
                        }
                    }, {
                        key: "setFromCoplanarPoints",
                        value: function(e, t, n) {
                            var r = hi.subVectors(n, t).cross(pi.subVectors(e, t)).normalize();
                            return this.setFromNormalAndCoplanarPoint(r, e), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.normal.copy(e.normal), this.constant = e.constant, this
                        }
                    }, {
                        key: "normalize",
                        value: function() {
                            var e = 1 / this.normal.length();
                            return this.normal.multiplyScalar(e), this.constant *= e, this
                        }
                    }, {
                        key: "negate",
                        value: function() {
                            return this.constant *= -1, this.normal.negate(), this
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return this.normal.dot(e) + this.constant
                        }
                    }, {
                        key: "distanceToSphere",
                        value: function(e) {
                            return this.distanceToPoint(e.center) - e.radius
                        }
                    }, {
                        key: "projectPoint",
                        value: function(e, t) {
                            return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
                        }
                    }, {
                        key: "intersectLine",
                        value: function(e, t) {
                            var n = e.delta(hi),
                                r = this.normal.dot(n);
                            if (0 === r) return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : null;
                            var i = -(e.start.dot(this.normal) + this.constant) / r;
                            return i < 0 || i > 1 ? null : t.copy(n).multiplyScalar(i).add(e.start)
                        }
                    }, {
                        key: "intersectsLine",
                        value: function(e) {
                            var t = this.distanceToPoint(e.start),
                                n = this.distanceToPoint(e.end);
                            return t < 0 && n > 0 || n < 0 && t > 0
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return e.intersectsPlane(this)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            return e.intersectsPlane(this)
                        }
                    }, {
                        key: "coplanarPoint",
                        value: function(e) {
                            return e.copy(this.normal).multiplyScalar(-this.constant)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e, t) {
                            var n = t || vi.getNormalMatrix(e),
                                r = this.coplanarPoint(hi).applyMatrix4(e),
                                i = this.normal.applyMatrix3(n).normalize();
                            return this.constant = -r.dot(i), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.constant -= e.dot(this.normal), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.normal.equals(this.normal) && e.constant === this.constant
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }();
            mi.prototype.isPlane = !0;
            var gi = new bn,
                yi = new $t,
                xi = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new mi,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new mi,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new mi,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new mi,
                            a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : new mi,
                            o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : new mi;
                        d(this, e), this.planes = [t, n, r, i, a, o]
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t, n, r, i, a) {
                            var o = this.planes;
                            return o[0].copy(e), o[1].copy(t), o[2].copy(n), o[3].copy(r), o[4].copy(i), o[5].copy(a), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
                            return this
                        }
                    }, {
                        key: "setFromProjectionMatrix",
                        value: function(e) {
                            var t = this.planes,
                                n = e.elements,
                                r = n[0],
                                i = n[1],
                                a = n[2],
                                o = n[3],
                                s = n[4],
                                l = n[5],
                                u = n[6],
                                c = n[7],
                                f = n[8],
                                d = n[9],
                                h = n[10],
                                p = n[11],
                                v = n[12],
                                m = n[13],
                                g = n[14],
                                y = n[15];
                            return t[0].setComponents(o - r, c - s, p - f, y - v).normalize(), t[1].setComponents(o + r, c + s, p + f, y + v).normalize(), t[2].setComponents(o + i, c + l, p + d, y + m).normalize(), t[3].setComponents(o - i, c - l, p - d, y - m).normalize(), t[4].setComponents(o - a, c - u, p - h, y - g).normalize(), t[5].setComponents(o + a, c + u, p + h, y + g).normalize(), this
                        }
                    }, {
                        key: "intersectsObject",
                        value: function(e) {
                            var t = e.geometry;
                            return null === t.boundingSphere && t.computeBoundingSphere(), gi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(gi)
                        }
                    }, {
                        key: "intersectsSprite",
                        value: function(e) {
                            return gi.center.set(0, 0, 0), gi.radius = .7071067811865476, gi.applyMatrix4(e.matrixWorld), this.intersectsSphere(gi)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++) {
                                if (t[i].distanceToPoint(n) < r) return !1
                            }
                            return !0
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            for (var t = this.planes, n = 0; n < 6; n++) {
                                var r = t[n];
                                if (yi.x = r.normal.x > 0 ? e.max.x : e.min.x, yi.y = r.normal.y > 0 ? e.max.y : e.min.y, yi.z = r.normal.z > 0 ? e.max.z : e.min.z, r.distanceToPoint(yi) < 0) return !1
                            }
                            return !0
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            for (var t = this.planes, n = 0; n < 6; n++)
                                if (t[n].distanceToPoint(e) < 0) return !1;
                            return !0
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }();

            function bi() {
                var e = null,
                    t = !1,
                    n = null,
                    r = null;

                function i(t, a) {
                    n(t, a), r = e.requestAnimationFrame(i)
                }
                return {
                    start: function() {
                        !0 !== t && null !== n && (r = e.requestAnimationFrame(i), t = !0)
                    },
                    stop: function() {
                        e.cancelAnimationFrame(r), t = !1
                    },
                    setAnimationLoop: function(e) {
                        n = e
                    },
                    setContext: function(t) {
                        e = t
                    }
                }
            }

            function _i(e, t) {
                var n = t.isWebGL2,
                    r = new WeakMap;
                return {
                    get: function(e) {
                        return e.isInterleavedBufferAttribute && (e = e.data), r.get(e)
                    },
                    remove: function(t) {
                        t.isInterleavedBufferAttribute && (t = t.data);
                        var n = r.get(t);
                        n && (e.deleteBuffer(n.buffer), r.delete(t))
                    },
                    update: function(t, i) {
                        if (t.isGLBufferAttribute) {
                            var a = r.get(t);
                            (!a || a.version < t.version) && r.set(t, {
                                buffer: t.buffer,
                                type: t.type,
                                bytesPerElement: t.elementSize,
                                version: t.version
                            })
                        } else {
                            t.isInterleavedBufferAttribute && (t = t.data);
                            var o = r.get(t);
                            void 0 === o ? r.set(t, function(t, r) {
                                var i = t.array,
                                    a = t.usage,
                                    o = e.createBuffer();
                                e.bindBuffer(r, o), e.bufferData(r, i, a), t.onUploadCallback();
                                var s = 5126;
                                return i instanceof Float32Array ? s = 5126 : i instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : i instanceof Uint16Array ? t.isFloat16BufferAttribute ? n ? s = 5131 : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : s = 5123 : i instanceof Int16Array ? s = 5122 : i instanceof Uint32Array ? s = 5125 : i instanceof Int32Array ? s = 5124 : i instanceof Int8Array ? s = 5120 : (i instanceof Uint8Array || i instanceof Uint8ClampedArray) && (s = 5121), {
                                    buffer: o,
                                    type: s,
                                    bytesPerElement: i.BYTES_PER_ELEMENT,
                                    version: t.version
                                }
                            }(t, i)) : o.version < t.version && (! function(t, r, i) {
                                var a = r.array,
                                    o = r.updateRange;
                                e.bindBuffer(i, t), -1 === o.count ? e.bufferSubData(i, 0, a) : (n ? e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a, o.offset, o.count) : e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a.subarray(o.offset, o.offset + o.count)), o.count = -1)
                            }(o.buffer, t, i), o.version = t.version)
                        }
                    }
                }
            }
            var wi = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                        d(this, n), (e = t.call(this)).type = "PlaneGeometry", e.parameters = {
                            width: r,
                            height: i,
                            widthSegments: a,
                            heightSegments: o
                        };
                        for (var s = r / 2, l = i / 2, u = Math.floor(a), c = Math.floor(o), f = u + 1, h = c + 1, p = r / u, v = i / c, m = [], g = [], y = [], x = [], b = 0; b < h; b++)
                            for (var _ = b * v - l, w = 0; w < f; w++) {
                                var S = w * p - s;
                                g.push(S, -_, 0), y.push(0, 0, 1), x.push(w / u), x.push(1 - b / c)
                            }
                        for (var M = 0; M < c; M++)
                            for (var k = 0; k < u; k++) {
                                var E = k + f * M,
                                    T = k + f * (M + 1),
                                    L = k + 1 + f * (M + 1),
                                    A = k + 1 + f * M;
                                m.push(E, T, A), m.push(T, L, A)
                            }
                        return e.setIndex(m), e.setAttribute("position", new Tr(g, 3)), e.setAttribute("normal", new Tr(y, 3)), e.setAttribute("uv", new Tr(x, 2)), e
                    }
                    return p(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.width, e.height, e.widthSegments, e.heightSegments)
                        }
                    }]), n
                }(Or),
                Si = {
                    alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
                    alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                    alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
                    aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
                    aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                    begin_vertex: "vec3 transformed = vec3( position );",
                    beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
                    bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in vec3 f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn ( f90 - f0 ) * fresnel + f0;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in vec3 f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, vec3( 1.0 ), dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
                    bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
                    clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
                    clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
                    clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
                    clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
                    color_fragment: "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
                    color_pars_fragment: "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
                    color_pars_vertex: "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
                    color_vertex: "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
                    common: "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
                    cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
                    defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
                    displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
                    displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
                    emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
                    emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
                    encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
                    encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
                    envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
                    envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
                    envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
                    envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
                    envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
                    envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
                    fog_vertex: "#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",
                    fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
                    fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
                    fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
                    gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
                    lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
                    lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                    lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
                    lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
                    lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
                    lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
                    lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                    lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
                    lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\t#ifdef SPECULAR\n\t\tvec3 specularIntensityFactor = vec3( specularIntensity );\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularColorF90 = mix( specularIntensityFactor, vec3( 1.0 ), metalnessFactor );\n\t#else\n\t\tvec3 specularIntensityFactor = vec3( 1.0 );\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularColorF90 = vec3( 1.0 );\n\t#endif\n\tmaterial.specularColor = mix( min( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularColorF90 = vec3( 1.0 );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
                    lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\tvec3 specularColorF90;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), vec3( 1.0 ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularColorF90, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
                    lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
                    lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
                    lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
                    logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
                    logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
                    logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
                    logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
                    map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
                    map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
                    map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
                    map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                    metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
                    metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                    morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
                    morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                    morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
                    normal_fragment_begin: "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
                    normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
                    normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",
                    clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
                    clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",
                    clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
                    packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
                    premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
                    project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
                    dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
                    dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
                    roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
                    roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                    shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
                    shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
                    shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
                    shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
                    skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                    skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
                    skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
                    skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
                    specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                    specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                    tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
                    tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
                    transmission_fragment: "#ifdef USE_TRANSMISSION\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n\tvec3 v = normalize( cameraPosition - pos );\n\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\n\t\tnormal, v, roughnessFactor, material.diffuseColor, material.specularColor,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\n#endif",
                    transmission_pars_fragment: "#ifdef USE_TRANSMISSION\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec4 vWorldPosition;\n\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n\t\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\n\t\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\n\t\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\n\t\treturn normalize(refractionVector) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness(float roughness, float ior) {\n\t\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n\t}\n\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n\t\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n\t\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n\t}\n\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n\t\tif (attenuationDistance == 0.0) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n\t\t\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n\t\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n\t\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\n\t}\n#endif",
                    uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
                    uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
                    uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
                    uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                    uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
                    uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
                    worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
                    background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
                    cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
                    depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
                    depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
                    distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
                    distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
                    equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
                    linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                    linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
                    meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
                    meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#ifdef USE_TRANSMISSION\n\tvarying vec4 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition;\n#endif\n}",
                    normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
                    normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
                    points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                    points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
                    shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                    shadow_vert: "#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                    sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
                },
                Mi = {
                    common: {
                        diffuse: {
                            value: new br(16777215)
                        },
                        opacity: {
                            value: 1
                        },
                        map: {
                            value: null
                        },
                        uvTransform: {
                            value: new Ht
                        },
                        uv2Transform: {
                            value: new Ht
                        },
                        alphaMap: {
                            value: null
                        }
                    },
                    specularmap: {
                        specularMap: {
                            value: null
                        }
                    },
                    envmap: {
                        envMap: {
                            value: null
                        },
                        flipEnvMap: {
                            value: -1
                        },
                        reflectivity: {
                            value: 1
                        },
                        refractionRatio: {
                            value: .98
                        },
                        maxMipLevel: {
                            value: 0
                        }
                    },
                    aomap: {
                        aoMap: {
                            value: null
                        },
                        aoMapIntensity: {
                            value: 1
                        }
                    },
                    lightmap: {
                        lightMap: {
                            value: null
                        },
                        lightMapIntensity: {
                            value: 1
                        }
                    },
                    emissivemap: {
                        emissiveMap: {
                            value: null
                        }
                    },
                    bumpmap: {
                        bumpMap: {
                            value: null
                        },
                        bumpScale: {
                            value: 1
                        }
                    },
                    normalmap: {
                        normalMap: {
                            value: null
                        },
                        normalScale: {
                            value: new Bt(1, 1)
                        }
                    },
                    displacementmap: {
                        displacementMap: {
                            value: null
                        },
                        displacementScale: {
                            value: 1
                        },
                        displacementBias: {
                            value: 0
                        }
                    },
                    roughnessmap: {
                        roughnessMap: {
                            value: null
                        }
                    },
                    metalnessmap: {
                        metalnessMap: {
                            value: null
                        }
                    },
                    gradientmap: {
                        gradientMap: {
                            value: null
                        }
                    },
                    fog: {
                        fogDensity: {
                            value: 25e-5
                        },
                        fogNear: {
                            value: 1
                        },
                        fogFar: {
                            value: 2e3
                        },
                        fogColor: {
                            value: new br(16777215)
                        }
                    },
                    lights: {
                        ambientLightColor: {
                            value: []
                        },
                        lightProbe: {
                            value: []
                        },
                        directionalLights: {
                            value: [],
                            properties: {
                                direction: {},
                                color: {}
                            }
                        },
                        directionalLightShadows: {
                            value: [],
                            properties: {
                                shadowBias: {},
                                shadowNormalBias: {},
                                shadowRadius: {},
                                shadowMapSize: {}
                            }
                        },
                        directionalShadowMap: {
                            value: []
                        },
                        directionalShadowMatrix: {
                            value: []
                        },
                        spotLights: {
                            value: [],
                            properties: {
                                color: {},
                                position: {},
                                direction: {},
                                distance: {},
                                coneCos: {},
                                penumbraCos: {},
                                decay: {}
                            }
                        },
                        spotLightShadows: {
                            value: [],
                            properties: {
                                shadowBias: {},
                                shadowNormalBias: {},
                                shadowRadius: {},
                                shadowMapSize: {}
                            }
                        },
                        spotShadowMap: {
                            value: []
                        },
                        spotShadowMatrix: {
                            value: []
                        },
                        pointLights: {
                            value: [],
                            properties: {
                                color: {},
                                position: {},
                                decay: {},
                                distance: {}
                            }
                        },
                        pointLightShadows: {
                            value: [],
                            properties: {
                                shadowBias: {},
                                shadowNormalBias: {},
                                shadowRadius: {},
                                shadowMapSize: {},
                                shadowCameraNear: {},
                                shadowCameraFar: {}
                            }
                        },
                        pointShadowMap: {
                            value: []
                        },
                        pointShadowMatrix: {
                            value: []
                        },
                        hemisphereLights: {
                            value: [],
                            properties: {
                                direction: {},
                                skyColor: {},
                                groundColor: {}
                            }
                        },
                        rectAreaLights: {
                            value: [],
                            properties: {
                                color: {},
                                position: {},
                                width: {},
                                height: {}
                            }
                        },
                        ltc_1: {
                            value: null
                        },
                        ltc_2: {
                            value: null
                        }
                    },
                    points: {
                        diffuse: {
                            value: new br(16777215)
                        },
                        opacity: {
                            value: 1
                        },
                        size: {
                            value: 1
                        },
                        scale: {
                            value: 1
                        },
                        map: {
                            value: null
                        },
                        alphaMap: {
                            value: null
                        },
                        uvTransform: {
                            value: new Ht
                        }
                    },
                    sprite: {
                        diffuse: {
                            value: new br(16777215)
                        },
                        opacity: {
                            value: 1
                        },
                        center: {
                            value: new Bt(.5, .5)
                        },
                        rotation: {
                            value: 0
                        },
                        map: {
                            value: null
                        },
                        alphaMap: {
                            value: null
                        },
                        uvTransform: {
                            value: new Ht
                        }
                    }
                },
                ki = {
                    basic: {
                        uniforms: ii([Mi.common, Mi.specularmap, Mi.envmap, Mi.aomap, Mi.lightmap, Mi.fog]),
                        vertexShader: Si.meshbasic_vert,
                        fragmentShader: Si.meshbasic_frag
                    },
                    lambert: {
                        uniforms: ii([Mi.common, Mi.specularmap, Mi.envmap, Mi.aomap, Mi.lightmap, Mi.emissivemap, Mi.fog, Mi.lights, {
                            emissive: {
                                value: new br(0)
                            }
                        }]),
                        vertexShader: Si.meshlambert_vert,
                        fragmentShader: Si.meshlambert_frag
                    },
                    phong: {
                        uniforms: ii([Mi.common, Mi.specularmap, Mi.envmap, Mi.aomap, Mi.lightmap, Mi.emissivemap, Mi.bumpmap, Mi.normalmap, Mi.displacementmap, Mi.fog, Mi.lights, {
                            emissive: {
                                value: new br(0)
                            },
                            specular: {
                                value: new br(1118481)
                            },
                            shininess: {
                                value: 30
                            }
                        }]),
                        vertexShader: Si.meshphong_vert,
                        fragmentShader: Si.meshphong_frag
                    },
                    standard: {
                        uniforms: ii([Mi.common, Mi.envmap, Mi.aomap, Mi.lightmap, Mi.emissivemap, Mi.bumpmap, Mi.normalmap, Mi.displacementmap, Mi.roughnessmap, Mi.metalnessmap, Mi.fog, Mi.lights, {
                            emissive: {
                                value: new br(0)
                            },
                            roughness: {
                                value: 1
                            },
                            metalness: {
                                value: 0
                            },
                            envMapIntensity: {
                                value: 1
                            }
                        }]),
                        vertexShader: Si.meshphysical_vert,
                        fragmentShader: Si.meshphysical_frag
                    },
                    toon: {
                        uniforms: ii([Mi.common, Mi.aomap, Mi.lightmap, Mi.emissivemap, Mi.bumpmap, Mi.normalmap, Mi.displacementmap, Mi.gradientmap, Mi.fog, Mi.lights, {
                            emissive: {
                                value: new br(0)
                            }
                        }]),
                        vertexShader: Si.meshtoon_vert,
                        fragmentShader: Si.meshtoon_frag
                    },
                    matcap: {
                        uniforms: ii([Mi.common, Mi.bumpmap, Mi.normalmap, Mi.displacementmap, Mi.fog, {
                            matcap: {
                                value: null
                            }
                        }]),
                        vertexShader: Si.meshmatcap_vert,
                        fragmentShader: Si.meshmatcap_frag
                    },
                    points: {
                        uniforms: ii([Mi.points, Mi.fog]),
                        vertexShader: Si.points_vert,
                        fragmentShader: Si.points_frag
                    },
                    dashed: {
                        uniforms: ii([Mi.common, Mi.fog, {
                            scale: {
                                value: 1
                            },
                            dashSize: {
                                value: 1
                            },
                            totalSize: {
                                value: 2
                            }
                        }]),
                        vertexShader: Si.linedashed_vert,
                        fragmentShader: Si.linedashed_frag
                    },
                    depth: {
                        uniforms: ii([Mi.common, Mi.displacementmap]),
                        vertexShader: Si.depth_vert,
                        fragmentShader: Si.depth_frag
                    },
                    normal: {
                        uniforms: ii([Mi.common, Mi.bumpmap, Mi.normalmap, Mi.displacementmap, {
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: Si.normal_vert,
                        fragmentShader: Si.normal_frag
                    },
                    sprite: {
                        uniforms: ii([Mi.sprite, Mi.fog]),
                        vertexShader: Si.sprite_vert,
                        fragmentShader: Si.sprite_frag
                    },
                    background: {
                        uniforms: {
                            uvTransform: {
                                value: new Ht
                            },
                            t2D: {
                                value: null
                            }
                        },
                        vertexShader: Si.background_vert,
                        fragmentShader: Si.background_frag
                    },
                    cube: {
                        uniforms: ii([Mi.envmap, {
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: Si.cube_vert,
                        fragmentShader: Si.cube_frag
                    },
                    equirect: {
                        uniforms: {
                            tEquirect: {
                                value: null
                            }
                        },
                        vertexShader: Si.equirect_vert,
                        fragmentShader: Si.equirect_frag
                    },
                    distanceRGBA: {
                        uniforms: ii([Mi.common, Mi.displacementmap, {
                            referencePosition: {
                                value: new $t
                            },
                            nearDistance: {
                                value: 1
                            },
                            farDistance: {
                                value: 1e3
                            }
                        }]),
                        vertexShader: Si.distanceRGBA_vert,
                        fragmentShader: Si.distanceRGBA_frag
                    },
                    shadow: {
                        uniforms: ii([Mi.lights, Mi.fog, {
                            color: {
                                value: new br(0)
                            },
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: Si.shadow_vert,
                        fragmentShader: Si.shadow_frag
                    }
                };

            function Ei(e, t, n, r, i) {
                var a, o, s = new br(0),
                    l = 0,
                    u = null,
                    c = 0,
                    f = null;

                function d(e, t) {
                    n.buffers.color.setClear(e.r, e.g, e.b, t, i)
                }
                return {
                    getClearColor: function() {
                        return s
                    },
                    setClearColor: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                        s.set(e), d(s, l = t)
                    },
                    getClearAlpha: function() {
                        return l
                    },
                    setClearAlpha: function(e) {
                        d(s, l = e)
                    },
                    render: function(n, i) {
                        var h = !1,
                            p = !0 === i.isScene ? i.background : null;
                        p && p.isTexture && (p = t.get(p));
                        var v = e.xr,
                            m = v.getSession && v.getSession();
                        m && "additive" === m.environmentBlendMode && (p = null), null === p ? d(s, l) : p && p.isColor && (d(p, 1), h = !0), (e.autoClear || h) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), p && (p.isCubeTexture || p.mapping === qe) ? (void 0 === o && ((o = new ei(new ni(1, 1, 1), new oi({
                            name: "BackgroundCubeMaterial",
                            uniforms: ri(ki.cube.uniforms),
                            vertexShader: ki.cube.vertexShader,
                            fragmentShader: ki.cube.fragmentShader,
                            side: 1,
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))).geometry.deleteAttribute("normal"), o.geometry.deleteAttribute("uv"), o.onBeforeRender = function(e, t, n) {
                            this.matrixWorld.copyPosition(n.matrixWorld)
                        }, Object.defineProperty(o.material, "envMap", {
                            get: function() {
                                return this.uniforms.envMap.value
                            }
                        }), r.update(o)), o.material.uniforms.envMap.value = p, o.material.uniforms.flipEnvMap.value = p.isCubeTexture && !1 === p.isRenderTargetTexture ? -1 : 1, u === p && c === p.version && f === e.toneMapping || (o.material.needsUpdate = !0, u = p, c = p.version, f = e.toneMapping), n.unshift(o, o.geometry, o.material, 0, 0, null)) : p && p.isTexture && (void 0 === a && ((a = new ei(new wi(2, 2), new oi({
                            name: "BackgroundMaterial",
                            uniforms: ri(ki.background.uniforms),
                            vertexShader: ki.background.vertexShader,
                            fragmentShader: ki.background.fragmentShader,
                            side: 0,
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))).geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
                            get: function() {
                                return this.uniforms.t2D.value
                            }
                        }), r.update(a)), a.material.uniforms.t2D.value = p, !0 === p.matrixAutoUpdate && p.updateMatrix(), a.material.uniforms.uvTransform.value.copy(p.matrix), u === p && c === p.version && f === e.toneMapping || (a.material.needsUpdate = !0, u = p, c = p.version, f = e.toneMapping), n.unshift(a, a.geometry, a.material, 0, 0, null))
                    }
                }
            }

            function Ti(e, t, n, r) {
                var i = e.getParameter(34921),
                    a = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
                    o = r.isWebGL2 || null !== a,
                    s = {},
                    l = d(null),
                    u = l;

                function c(t) {
                    return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t)
                }

                function f(t) {
                    return r.isWebGL2 ? e.deleteVertexArray(t) : a.deleteVertexArrayOES(t)
                }

                function d(e) {
                    for (var t = [], n = [], r = [], a = 0; a < i; a++) t[a] = 0, n[a] = 0, r[a] = 0;
                    return {
                        geometry: null,
                        program: null,
                        wireframe: !1,
                        newAttributes: t,
                        enabledAttributes: n,
                        attributeDivisors: r,
                        object: e,
                        attributes: {},
                        index: null
                    }
                }

                function h() {
                    for (var e = u.newAttributes, t = 0, n = e.length; t < n; t++) e[t] = 0
                }

                function p(e) {
                    v(e, 0)
                }

                function v(n, i) {
                    var a = u.newAttributes,
                        o = u.enabledAttributes,
                        s = u.attributeDivisors;
                    (a[n] = 1, 0 === o[n] && (e.enableVertexAttribArray(n), o[n] = 1), s[n] !== i) && ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i), s[n] = i)
                }

                function m() {
                    for (var t = u.newAttributes, n = u.enabledAttributes, r = 0, i = n.length; r < i; r++) n[r] !== t[r] && (e.disableVertexAttribArray(r), n[r] = 0)
                }

                function g(t, n, i, a, o, s) {
                    !0 !== r.isWebGL2 || 5124 !== i && 5125 !== i ? e.vertexAttribPointer(t, n, i, a, o, s) : e.vertexAttribIPointer(t, n, i, o, s)
                }

                function y() {
                    x(), u !== l && c((u = l).object)
                }

                function x() {
                    l.geometry = null, l.program = null, l.wireframe = !1
                }
                return {
                    setup: function(i, l, f, y, x) {
                        var b = !1;
                        if (o) {
                            var _ = function(t, n, i) {
                                var o = !0 === i.wireframe,
                                    l = s[t.id];
                                void 0 === l && (l = {}, s[t.id] = l);
                                var u = l[n.id];
                                void 0 === u && (u = {}, l[n.id] = u);
                                var c = u[o];
                                void 0 === c && (c = d(r.isWebGL2 ? e.createVertexArray() : a.createVertexArrayOES()), u[o] = c);
                                return c
                            }(y, f, l);
                            u !== _ && c((u = _).object), b = function(e, t) {
                                var n = u.attributes,
                                    r = e.attributes,
                                    i = 0;
                                for (var a in r) {
                                    var o = n[a],
                                        s = r[a];
                                    if (void 0 === o) return !0;
                                    if (o.attribute !== s) return !0;
                                    if (o.data !== s.data) return !0;
                                    i++
                                }
                                return u.attributesNum !== i || u.index !== t
                            }(y, x), b && function(e, t) {
                                var n = {},
                                    r = e.attributes,
                                    i = 0;
                                for (var a in r) {
                                    var o = r[a],
                                        s = {};
                                    s.attribute = o, o.data && (s.data = o.data), n[a] = s, i++
                                }
                                u.attributes = n, u.attributesNum = i, u.index = t
                            }(y, x)
                        } else {
                            var w = !0 === l.wireframe;
                            u.geometry === y.id && u.program === f.id && u.wireframe === w || (u.geometry = y.id, u.program = f.id, u.wireframe = w, b = !0)
                        }!0 === i.isInstancedMesh && (b = !0), null !== x && n.update(x, 34963), b && (! function(i, a, o, s) {
                            if (!1 === r.isWebGL2 && (i.isInstancedMesh || s.isInstancedBufferGeometry) && null === t.get("ANGLE_instanced_arrays")) return;
                            h();
                            var l = s.attributes,
                                u = o.getAttributes(),
                                c = a.defaultAttributeValues;
                            for (var f in u) {
                                var d = u[f];
                                if (d >= 0) {
                                    var y = l[f];
                                    if (void 0 !== y) {
                                        var x = y.normalized,
                                            b = y.itemSize,
                                            _ = n.get(y);
                                        if (void 0 === _) continue;
                                        var w = _.buffer,
                                            S = _.type,
                                            M = _.bytesPerElement;
                                        if (y.isInterleavedBufferAttribute) {
                                            var k = y.data,
                                                E = k.stride,
                                                T = y.offset;
                                            k && k.isInstancedInterleavedBuffer ? (v(d, k.meshPerAttribute), void 0 === s._maxInstanceCount && (s._maxInstanceCount = k.meshPerAttribute * k.count)) : p(d), e.bindBuffer(34962, w), g(d, b, S, x, E * M, T * M)
                                        } else y.isInstancedBufferAttribute ? (v(d, y.meshPerAttribute), void 0 === s._maxInstanceCount && (s._maxInstanceCount = y.meshPerAttribute * y.count)) : p(d), e.bindBuffer(34962, w), g(d, b, S, x, 0, 0)
                                    } else if ("instanceMatrix" === f) {
                                        var L = n.get(i.instanceMatrix);
                                        if (void 0 === L) continue;
                                        var A = L.buffer,
                                            C = L.type;
                                        v(d + 0, 1), v(d + 1, 1), v(d + 2, 1), v(d + 3, 1), e.bindBuffer(34962, A), e.vertexAttribPointer(d + 0, 4, C, !1, 64, 0), e.vertexAttribPointer(d + 1, 4, C, !1, 64, 16), e.vertexAttribPointer(d + 2, 4, C, !1, 64, 32), e.vertexAttribPointer(d + 3, 4, C, !1, 64, 48)
                                    } else if ("instanceColor" === f) {
                                        var P = n.get(i.instanceColor);
                                        if (void 0 === P) continue;
                                        var R = P.buffer,
                                            N = P.type;
                                        v(d, 1), e.bindBuffer(34962, R), e.vertexAttribPointer(d, 3, N, !1, 12, 0)
                                    } else if (void 0 !== c) {
                                        var I = c[f];
                                        if (void 0 !== I) switch (I.length) {
                                            case 2:
                                                e.vertexAttrib2fv(d, I);
                                                break;
                                            case 3:
                                                e.vertexAttrib3fv(d, I);
                                                break;
                                            case 4:
                                                e.vertexAttrib4fv(d, I);
                                                break;
                                            default:
                                                e.vertexAttrib1fv(d, I)
                                        }
                                    }
                                }
                            }
                            m()
                        }(i, l, f, y), null !== x && e.bindBuffer(34963, n.get(x).buffer))
                    },
                    reset: y,
                    resetDefaultState: x,
                    dispose: function() {
                        for (var e in y(), s) {
                            var t = s[e];
                            for (var n in t) {
                                var r = t[n];
                                for (var i in r) f(r[i].object), delete r[i];
                                delete t[n]
                            }
                            delete s[e]
                        }
                    },
                    releaseStatesOfGeometry: function(e) {
                        if (void 0 !== s[e.id]) {
                            var t = s[e.id];
                            for (var n in t) {
                                var r = t[n];
                                for (var i in r) f(r[i].object), delete r[i];
                                delete t[n]
                            }
                            delete s[e.id]
                        }
                    },
                    releaseStatesOfProgram: function(e) {
                        for (var t in s) {
                            var n = s[t];
                            if (void 0 !== n[e.id]) {
                                var r = n[e.id];
                                for (var i in r) f(r[i].object), delete r[i];
                                delete n[e.id]
                            }
                        }
                    },
                    initAttributes: h,
                    enableAttribute: p,
                    disableUnusedAttributes: m
                }
            }

            function Li(e, t, n, r) {
                var i, a = r.isWebGL2;
                this.setMode = function(e) {
                    i = e
                }, this.render = function(t, r) {
                    e.drawArrays(i, t, r), n.update(r, i, 1)
                }, this.renderInstances = function(r, o, s) {
                    if (0 !== s) {
                        var l, u;
                        if (a) l = e, u = "drawArraysInstanced";
                        else if (u = "drawArraysInstancedANGLE", null === (l = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                        l[u](i, r, o, s), n.update(o, i, s)
                    }
                }
            }

            function Ai(e, t, n) {
                var r;

                function i(t) {
                    if ("highp" === t) {
                        if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
                        t = "mediump"
                    }
                    return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
                }
                var a = "undefined" !== typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" !== typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext,
                    o = void 0 !== n.precision ? n.precision : "highp",
                    s = i(o);
                s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."), o = s);
                var l = a || t.has("WEBGL_draw_buffers"),
                    u = !0 === n.logarithmicDepthBuffer,
                    c = e.getParameter(34930),
                    f = e.getParameter(35660),
                    d = e.getParameter(3379),
                    h = e.getParameter(34076),
                    p = e.getParameter(34921),
                    v = e.getParameter(36347),
                    m = e.getParameter(36348),
                    g = e.getParameter(36349),
                    y = f > 0,
                    x = a || t.has("OES_texture_float");
                return {
                    isWebGL2: a,
                    drawBuffers: l,
                    getMaxAnisotropy: function() {
                        if (void 0 !== r) return r;
                        if (!0 === t.has("EXT_texture_filter_anisotropic")) {
                            var n = t.get("EXT_texture_filter_anisotropic");
                            r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)
                        } else r = 0;
                        return r
                    },
                    getMaxPrecision: i,
                    precision: o,
                    logarithmicDepthBuffer: u,
                    maxTextures: c,
                    maxVertexTextures: f,
                    maxTextureSize: d,
                    maxCubemapSize: h,
                    maxAttributes: p,
                    maxVertexUniforms: v,
                    maxVaryings: m,
                    maxFragmentUniforms: g,
                    vertexTextures: y,
                    floatFragmentTextures: x,
                    floatVertexTextures: y && x,
                    maxSamples: a ? e.getParameter(36183) : 0
                }
            }

            function Ci(e) {
                var t = this,
                    n = null,
                    r = 0,
                    i = !1,
                    a = !1,
                    o = new mi,
                    s = new Ht,
                    l = {
                        value: null,
                        needsUpdate: !1
                    };

                function u() {
                    l.value !== n && (l.value = n, l.needsUpdate = r > 0), t.numPlanes = r, t.numIntersection = 0
                }

                function c(e, n, r, i) {
                    var a = null !== e ? e.length : 0,
                        u = null;
                    if (0 !== a) {
                        if (u = l.value, !0 !== i || null === u) {
                            var c = r + 4 * a,
                                f = n.matrixWorldInverse;
                            s.getNormalMatrix(f), (null === u || u.length < c) && (u = new Float32Array(c));
                            for (var d = 0, h = r; d !== a; ++d, h += 4) o.copy(e[d]).applyMatrix4(f, s), o.normal.toArray(u, h), u[h + 3] = o.constant
                        }
                        l.value = u, l.needsUpdate = !0
                    }
                    return t.numPlanes = a, t.numIntersection = 0, u
                }
                this.uniform = l, this.numPlanes = 0, this.numIntersection = 0, this.init = function(e, t, a) {
                    var o = 0 !== e.length || t || 0 !== r || i;
                    return i = t, n = c(e, a, 0), r = e.length, o
                }, this.beginShadows = function() {
                    a = !0, c(null)
                }, this.endShadows = function() {
                    a = !1, u()
                }, this.setState = function(t, o, s) {
                    var f = t.clippingPlanes,
                        d = t.clipIntersection,
                        h = t.clipShadows,
                        p = e.get(t);
                    if (!i || null === f || 0 === f.length || a && !h) a ? c(null) : u();
                    else {
                        var v = a ? 0 : r,
                            m = 4 * v,
                            g = p.clippingState || null;
                        l.value = g, g = c(f, o, m, s);
                        for (var y = 0; y !== m; ++y) g[y] = n[y];
                        p.clippingState = g, this.numIntersection = d ? this.numPlanes : 0, this.numPlanes += v
                    }
                }
            }

            function Pi(e) {
                var t = new WeakMap;

                function n(e, t) {
                    return t === We ? e.mapping = Ve : t === je && (e.mapping = Ge), e
                }

                function r(e) {
                    var n = e.target;
                    n.removeEventListener("dispose", r);
                    var i = t.get(n);
                    void 0 !== i && (t.delete(n), i.dispose())
                }
                return {
                    get: function(i) {
                        if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
                            var a = i.mapping;
                            if (a === We || a === je) {
                                if (t.has(i)) return n(t.get(i).texture, i.mapping);
                                var o = i.image;
                                if (o && o.height > 0) {
                                    var s = e.getRenderTarget(),
                                        l = new di(o.height / 2);
                                    return l.fromEquirectangularTexture(e, i), t.set(i, l), e.setRenderTarget(s), i.addEventListener("dispose", r), n(l.texture, i.mapping)
                                }
                                return null
                            }
                        }
                        return i
                    },
                    dispose: function() {
                        t = new WeakMap
                    }
                }
            }
            ki.physical = {
                uniforms: ii([ki.standard.uniforms, {
                    clearcoat: {
                        value: 0
                    },
                    clearcoatMap: {
                        value: null
                    },
                    clearcoatRoughness: {
                        value: 0
                    },
                    clearcoatRoughnessMap: {
                        value: null
                    },
                    clearcoatNormalScale: {
                        value: new Bt(1, 1)
                    },
                    clearcoatNormalMap: {
                        value: null
                    },
                    sheen: {
                        value: new br(0)
                    },
                    transmission: {
                        value: 0
                    },
                    transmissionMap: {
                        value: null
                    },
                    transmissionSamplerSize: {
                        value: new Bt
                    },
                    transmissionSamplerMap: {
                        value: null
                    },
                    thickness: {
                        value: 0
                    },
                    thicknessMap: {
                        value: null
                    },
                    attenuationDistance: {
                        value: 0
                    },
                    attenuationTint: {
                        value: new br(0)
                    },
                    specularIntensity: {
                        value: 0
                    },
                    specularIntensityMap: {
                        value: null
                    },
                    specularTint: {
                        value: new br(1, 1, 1)
                    },
                    specularTintMap: {
                        value: null
                    }
                }]),
                vertexShader: Si.meshphysical_vert,
                fragmentShader: Si.meshphysical_frag
            };
            var Ri = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : -1,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : .1,
                        l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2e3;
                    return d(this, n), (e = t.call(this)).type = "OrthographicCamera", e.zoom = 1, e.view = null, e.left = r, e.right = i, e.top = a, e.bottom = o, e.near = s, e.far = l, e.updateProjectionMatrix(), e
                }
                return p(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return Ue(g(n.prototype), "copy", this).call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign({}, e.view), this
                    }
                }, {
                    key: "setViewOffset",
                    value: function(e, t, n, r, i, a) {
                        null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = a, this.updateProjectionMatrix()
                    }
                }, {
                    key: "clearViewOffset",
                    value: function() {
                        null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
                    }
                }, {
                    key: "updateProjectionMatrix",
                    value: function() {
                        var e = (this.right - this.left) / (2 * this.zoom),
                            t = (this.top - this.bottom) / (2 * this.zoom),
                            n = (this.right + this.left) / 2,
                            r = (this.top + this.bottom) / 2,
                            i = n - e,
                            a = n + e,
                            o = r + t,
                            s = r - t;
                        if (null !== this.view && this.view.enabled) {
                            var l = (this.right - this.left) / this.view.fullWidth / this.zoom,
                                u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                            a = (i += l * this.view.offsetX) + l * this.view.width, s = (o -= u * this.view.offsetY) - u * this.view.height
                        }
                        this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert()
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t
                    }
                }]), n
            }(si);
            Ri.prototype.isOrthographicCamera = !0;
            var Ni = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this, e)).type = "RawShaderMaterial", r
                }
                return p(n)
            }(oi);
            Ni.prototype.isRawShaderMaterial = !0;
            var Ii = Math.pow(2, 8),
                zi = [.125, .215, .35, .446, .526, .582],
                Oi = 5 + zi.length,
                Di = 20,
                Fi = (Ie(Ne = {}, bt, 0), Ie(Ne, _t, 1), Ie(Ne, St, 2), Ie(Ne, 3004, 3), Ie(Ne, 3005, 4), Ie(Ne, 3006, 5), Ie(Ne, wt, 6), Ne),
                Bi = new _r({
                    side: 1,
                    depthWrite: !1,
                    depthTest: !1
                }),
                Ui = new ei(new ni, Bi),
                Hi = new Ri,
                Vi = ea(),
                Gi = Vi._lodPlanes,
                Wi = Vi._sizeLods,
                ji = Vi._sigmas,
                qi = new br,
                Xi = null,
                Yi = (1 + Math.sqrt(5)) / 2,
                Zi = 1 / Yi,
                Ji = [new $t(1, 1, 1), new $t(-1, 1, 1), new $t(1, 1, -1), new $t(-1, 1, -1), new $t(0, Yi, Zi), new $t(0, Yi, -Zi), new $t(Zi, 0, Yi), new $t(-Zi, 0, Yi), new $t(Yi, Zi, 0), new $t(-Yi, Zi, 0)];

            function $i(e) {
                var t = Math.max(e.r, e.g, e.b),
                    n = Math.min(Math.max(Math.ceil(Math.log2(t)), -128), 127);
                return e.multiplyScalar(Math.pow(2, -n)), (n + 128) / 255
            }
            var Qi = function() {
                function e(t) {
                    d(this, e), this._renderer = t, this._pingPongRenderTarget = null, this._blurMaterial = function(e) {
                        var t = new Float32Array(e),
                            n = new $t(0, 1, 0);
                        return new Ni({
                            name: "SphericalGaussianBlur",
                            defines: {
                                n: e
                            },
                            uniforms: {
                                envMap: {
                                    value: null
                                },
                                samples: {
                                    value: 1
                                },
                                weights: {
                                    value: t
                                },
                                latitudinal: {
                                    value: !1
                                },
                                dTheta: {
                                    value: 0
                                },
                                mipInt: {
                                    value: 0
                                },
                                poleAxis: {
                                    value: n
                                },
                                inputEncoding: {
                                    value: Fi[3e3]
                                },
                                outputEncoding: {
                                    value: Fi[3e3]
                                }
                            },
                            vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                            fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                            blending: 0,
                            depthTest: !1,
                            depthWrite: !1
                        })
                    }(Di), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial)
                }
                return p(e, [{
                    key: "fromScene",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1,
                            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 100;
                        Xi = this._renderer.getRenderTarget();
                        var i = this._allocateTargets();
                        return this._sceneToCubeUV(e, n, r, i), t > 0 && this._blur(i, 0, 0, t), this._applyPMREM(i), this._cleanup(i), i
                    }
                }, {
                    key: "fromEquirectangular",
                    value: function(e) {
                        return this._fromTexture(e)
                    }
                }, {
                    key: "fromCubemap",
                    value: function(e) {
                        return this._fromTexture(e)
                    }
                }, {
                    key: "compileCubemapShader",
                    value: function() {
                        null === this._cubemapShader && (this._cubemapShader = ia(), this._compileMaterial(this._cubemapShader))
                    }
                }, {
                    key: "compileEquirectangularShader",
                    value: function() {
                        null === this._equirectShader && (this._equirectShader = ra(), this._compileMaterial(this._equirectShader))
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this._blurMaterial.dispose(), null !== this._cubemapShader && this._cubemapShader.dispose(), null !== this._equirectShader && this._equirectShader.dispose();
                        for (var e = 0; e < Gi.length; e++) Gi[e].dispose()
                    }
                }, {
                    key: "_cleanup",
                    value: function(e) {
                        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Xi), e.scissorTest = !1, na(e, 0, 0, e.width, e.height)
                    }
                }, {
                    key: "_fromTexture",
                    value: function(e) {
                        Xi = this._renderer.getRenderTarget();
                        var t = this._allocateTargets(e);
                        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t
                    }
                }, {
                    key: "_allocateTargets",
                    value: function(e) {
                        var t = {
                                magFilter: $e,
                                minFilter: $e,
                                generateMipmaps: !1,
                                type: nt,
                                format: 1023,
                                encoding: Ki(e) ? e.encoding : St,
                                depthBuffer: !1
                            },
                            n = ta(t);
                        return n.depthBuffer = !e, this._pingPongRenderTarget = ta(t), n
                    }
                }, {
                    key: "_compileMaterial",
                    value: function(e) {
                        var t = new ei(Gi[0], e);
                        this._renderer.compile(t, Hi)
                    }
                }, {
                    key: "_sceneToCubeUV",
                    value: function(e, t, n, r) {
                        var i = new li(90, 1, t, n),
                            a = [1, -1, 1, 1, 1, 1],
                            o = [1, 1, 1, -1, -1, -1],
                            s = this._renderer,
                            l = s.autoClear,
                            u = s.outputEncoding,
                            c = s.toneMapping;
                        s.getClearColor(qi), s.toneMapping = 0, s.outputEncoding = bt, s.autoClear = !1;
                        var f = !1,
                            d = e.background;
                        if (d) {
                            if (d.isColor) {
                                Bi.color.copy(d).convertSRGBToLinear(), e.background = null;
                                var h = $i(Bi.color);
                                Bi.opacity = h, f = !0
                            }
                        } else {
                            Bi.color.copy(qi).convertSRGBToLinear();
                            var p = $i(Bi.color);
                            Bi.opacity = p, f = !0
                        }
                        for (var v = 0; v < 6; v++) {
                            var m = v % 3;
                            0 == m ? (i.up.set(0, a[v], 0), i.lookAt(o[v], 0, 0)) : 1 == m ? (i.up.set(0, 0, a[v]), i.lookAt(0, o[v], 0)) : (i.up.set(0, a[v], 0), i.lookAt(0, 0, o[v])), na(r, m * Ii, v > 2 ? Ii : 0, Ii, Ii), s.setRenderTarget(r), f && s.render(Ui, i), s.render(e, i)
                        }
                        s.toneMapping = c, s.outputEncoding = u, s.autoClear = l
                    }
                }, {
                    key: "_textureToCubeUV",
                    value: function(e, t) {
                        var n = this._renderer;
                        e.isCubeTexture ? null == this._cubemapShader && (this._cubemapShader = ia()) : null == this._equirectShader && (this._equirectShader = ra());
                        var r = e.isCubeTexture ? this._cubemapShader : this._equirectShader,
                            i = new ei(Gi[0], r),
                            a = r.uniforms;
                        a.envMap.value = e, e.isCubeTexture || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), a.inputEncoding.value = Fi[e.encoding], a.outputEncoding.value = Fi[t.texture.encoding], na(t, 0, 0, 3 * Ii, 2 * Ii), n.setRenderTarget(t), n.render(i, Hi)
                    }
                }, {
                    key: "_applyPMREM",
                    value: function(e) {
                        var t = this._renderer,
                            n = t.autoClear;
                        t.autoClear = !1;
                        for (var r = 1; r < Oi; r++) {
                            var i = Math.sqrt(ji[r] * ji[r] - ji[r - 1] * ji[r - 1]),
                                a = Ji[(r - 1) % Ji.length];
                            this._blur(e, r - 1, r, i, a)
                        }
                        t.autoClear = n
                    }
                }, {
                    key: "_blur",
                    value: function(e, t, n, r, i) {
                        var a = this._pingPongRenderTarget;
                        this._halfBlur(e, a, t, n, r, "latitudinal", i), this._halfBlur(a, e, n, n, r, "longitudinal", i)
                    }
                }, {
                    key: "_halfBlur",
                    value: function(e, t, n, r, i, a, o) {
                        var s = this._renderer,
                            l = this._blurMaterial;
                        "latitudinal" !== a && "longitudinal" !== a && console.error("blur direction must be either latitudinal or longitudinal!");
                        var u = new ei(Gi[r], l),
                            c = l.uniforms,
                            f = Wi[n] - 1,
                            d = isFinite(i) ? Math.PI / (2 * f) : 2 * Math.PI / 39,
                            h = i / d,
                            p = isFinite(i) ? 1 + Math.floor(3 * h) : Di;
                        p > Di && console.warn("sigmaRadians, ".concat(i, ", is too large and will clip, as it requested ").concat(p, " samples when the maximum is set to ").concat(Di));
                        for (var v = [], m = 0, g = 0; g < Di; ++g) {
                            var y = g / h,
                                x = Math.exp(-y * y / 2);
                            v.push(x), 0 == g ? m += x : g < p && (m += 2 * x)
                        }
                        for (var b = 0; b < v.length; b++) v[b] = v[b] / m;
                        c.envMap.value = e.texture, c.samples.value = p, c.weights.value = v, c.latitudinal.value = "latitudinal" === a, o && (c.poleAxis.value = o), c.dTheta.value = d, c.mipInt.value = 8 - n, c.inputEncoding.value = Fi[e.texture.encoding], c.outputEncoding.value = Fi[e.texture.encoding];
                        var _ = Wi[r];
                        na(t, 3 * Math.max(0, Ii - 2 * _), (0 === r ? 0 : 2 * Ii) + 2 * _ * (r > 4 ? r - 8 + 4 : 0), 3 * _, 2 * _), s.setRenderTarget(t), s.render(u, Hi)
                    }
                }]), e
            }();

            function Ki(e) {
                return void 0 !== e && e.type === nt && (e.encoding === bt || e.encoding === _t || e.encoding === wt)
            }

            function ea() {
                for (var e = [], t = [], n = [], r = 8, i = 0; i < Oi; i++) {
                    var a = Math.pow(2, r);
                    t.push(a);
                    var o = 1 / a;
                    i > 4 ? o = zi[i - 8 + 4 - 1] : 0 == i && (o = 0), n.push(o);
                    for (var s = 1 / (a - 1), l = -s / 2, u = 1 + s / 2, c = [l, l, u, l, u, u, l, l, u, u, l, u], f = new Float32Array(108), d = new Float32Array(72), h = new Float32Array(36), p = 0; p < 6; p++) {
                        var v = p % 3 * 2 / 3 - 1,
                            m = p > 2 ? 0 : -1,
                            g = [v, m, 0, v + 2 / 3, m, 0, v + 2 / 3, m + 1, 0, v, m, 0, v + 2 / 3, m + 1, 0, v, m + 1, 0];
                        f.set(g, 18 * p), d.set(c, 12 * p);
                        var y = [p, p, p, p, p, p];
                        h.set(y, 6 * p)
                    }
                    var x = new Or;
                    x.setAttribute("position", new Mr(f, 3)), x.setAttribute("uv", new Mr(d, 2)), x.setAttribute("faceIndex", new Mr(h, 1)), e.push(x), r > 4 && r--
                }
                return {
                    _lodPlanes: e,
                    _sizeLods: t,
                    _sigmas: n
                }
            }

            function ta(e) {
                var t = new Xt(3 * Ii, 3 * Ii, e);
                return t.texture.mapping = qe, t.texture.name = "PMREM.cubeUv", t.scissorTest = !0, t
            }

            function na(e, t, n, r, i) {
                e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i)
            }

            function ra() {
                var e = new Bt(1, 1);
                return new Ni({
                    name: "EquirectangularToCubeUV",
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        texelSize: {
                            value: e
                        },
                        inputEncoding: {
                            value: Fi[3e3]
                        },
                        outputEncoding: {
                            value: Fi[3e3]
                        }
                    },
                    vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                    fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                })
            }

            function ia() {
                return new Ni({
                    name: "CubemapToCubeUV",
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        inputEncoding: {
                            value: Fi[3e3]
                        },
                        outputEncoding: {
                            value: Fi[3e3]
                        }
                    },
                    vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                    fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                    blending: 0,
                    depthTest: !1,
                    depthWrite: !1
                })
            }

            function aa(e) {
                var t = new WeakMap,
                    n = null;

                function r(e) {
                    var n = e.target;
                    n.removeEventListener("dispose", r);
                    var i = t.get(n);
                    void 0 !== i && (i.delete(n), i.dispose())
                }
                return {
                    get: function(i) {
                        if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
                            var a = i.mapping,
                                o = a === We || a === je,
                                s = a === Ve || a === Ge;
                            if (o || s) {
                                if (t.has(i)) return t.get(i).texture;
                                var l = i.image;
                                if (o && l && l.height > 0 || s && l && function(e) {
                                        for (var t = 0, n = 6, r = 0; r < n; r++) void 0 !== e[r] && t++;
                                        return t === n
                                    }(l)) {
                                    var u = e.getRenderTarget();
                                    null === n && (n = new Qi(e));
                                    var c = o ? n.fromEquirectangular(i) : n.fromCubemap(i);
                                    return t.set(i, c), e.setRenderTarget(u), i.addEventListener("dispose", r), c.texture
                                }
                                return null
                            }
                        }
                        return i
                    },
                    dispose: function() {
                        t = new WeakMap, null !== n && (n.dispose(), n = null)
                    }
                }
            }

            function oa(e) {
                var t = {};

                function n(n) {
                    if (void 0 !== t[n]) return t[n];
                    var r;
                    switch (n) {
                        case "WEBGL_depth_texture":
                            r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        default:
                            r = e.getExtension(n)
                    }
                    return t[n] = r, r
                }
                return {
                    has: function(e) {
                        return null !== n(e)
                    },
                    init: function(e) {
                        e.isWebGL2 ? n("EXT_color_buffer_float") : (n("WEBGL_depth_texture"), n("OES_texture_float"), n("OES_texture_half_float"), n("OES_texture_half_float_linear"), n("OES_standard_derivatives"), n("OES_element_index_uint"), n("OES_vertex_array_object"), n("ANGLE_instanced_arrays")), n("OES_texture_float_linear"), n("EXT_color_buffer_half_float")
                    },
                    get: function(e) {
                        var t = n(e);
                        return null === t && console.warn("THREE.WebGLRenderer: " + e + " extension not supported."), t
                    }
                }
            }

            function sa(e, t, n, r) {
                var i = {},
                    a = new WeakMap;

                function o(e) {
                    var s = e.target;
                    for (var l in null !== s.index && t.remove(s.index), s.attributes) t.remove(s.attributes[l]);
                    s.removeEventListener("dispose", o), delete i[s.id];
                    var u = a.get(s);
                    u && (t.remove(u), a.delete(s)), r.releaseStatesOfGeometry(s), !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount, n.memory.geometries--
                }

                function s(e) {
                    var n = [],
                        r = e.index,
                        i = e.attributes.position,
                        o = 0;
                    if (null !== r) {
                        var s = r.array;
                        o = r.version;
                        for (var l = 0, u = s.length; l < u; l += 3) {
                            var c = s[l + 0],
                                f = s[l + 1],
                                d = s[l + 2];
                            n.push(c, f, f, d, d, c)
                        }
                    } else {
                        var h = i.array;
                        o = i.version;
                        for (var p = 0, v = h.length / 3 - 1; p < v; p += 3) {
                            var m = p + 0,
                                g = p + 1,
                                y = p + 2;
                            n.push(m, g, g, y, y, m)
                        }
                    }
                    var x = new(Lr(n) > 65535 ? Er : kr)(n, 1);
                    x.version = o;
                    var b = a.get(e);
                    b && t.remove(b), a.set(e, x)
                }
                return {
                    get: function(e, t) {
                        return !0 === i[t.id] || (t.addEventListener("dispose", o), i[t.id] = !0, n.memory.geometries++), t
                    },
                    update: function(e) {
                        var n = e.attributes;
                        for (var r in n) t.update(n[r], 34962);
                        var i = e.morphAttributes;
                        for (var a in i)
                            for (var o = i[a], s = 0, l = o.length; s < l; s++) t.update(o[s], 34962)
                    },
                    getWireframeAttribute: function(e) {
                        var t = a.get(e);
                        if (t) {
                            var n = e.index;
                            null !== n && t.version < n.version && s(e)
                        } else s(e);
                        return a.get(e)
                    }
                }
            }

            function la(e, t, n, r) {
                var i, a, o, s = r.isWebGL2;
                this.setMode = function(e) {
                    i = e
                }, this.setIndex = function(e) {
                    a = e.type, o = e.bytesPerElement
                }, this.render = function(t, r) {
                    e.drawElements(i, r, a, t * o), n.update(r, i, 1)
                }, this.renderInstances = function(r, l, u) {
                    if (0 !== u) {
                        var c, f;
                        if (s) c = e, f = "drawElementsInstanced";
                        else if (f = "drawElementsInstancedANGLE", null === (c = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                        c[f](i, l, a, r * o, u), n.update(l, i, u)
                    }
                }
            }

            function ua(e) {
                var t = {
                    frame: 0,
                    calls: 0,
                    triangles: 0,
                    points: 0,
                    lines: 0
                };
                return {
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    render: t,
                    programs: null,
                    autoReset: !0,
                    reset: function() {
                        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0
                    },
                    update: function(e, n, r) {
                        switch (t.calls++, n) {
                            case 4:
                                t.triangles += r * (e / 3);
                                break;
                            case 1:
                                t.lines += r * (e / 2);
                                break;
                            case 3:
                                t.lines += r * (e - 1);
                                break;
                            case 2:
                                t.lines += r * e;
                                break;
                            case 0:
                                t.points += r * e;
                                break;
                            default:
                                console.error("THREE.WebGLInfo: Unknown draw mode:", n)
                        }
                    }
                }
            }

            function ca(e, t) {
                return e[0] - t[0]
            }

            function fa(e, t) {
                return Math.abs(t[1]) - Math.abs(e[1])
            }

            function da(e) {
                for (var t = {}, n = new Float32Array(8), r = [], i = 0; i < 8; i++) r[i] = [i, 0];
                return {
                    update: function(i, a, o, s) {
                        var l = i.morphTargetInfluences,
                            u = void 0 === l ? 0 : l.length,
                            c = t[a.id];
                        if (void 0 === c || c.length !== u) {
                            c = [];
                            for (var f = 0; f < u; f++) c[f] = [f, 0];
                            t[a.id] = c
                        }
                        for (var d = 0; d < u; d++) {
                            var h = c[d];
                            h[0] = d, h[1] = l[d]
                        }
                        c.sort(fa);
                        for (var p = 0; p < 8; p++) p < u && c[p][1] ? (r[p][0] = c[p][0], r[p][1] = c[p][1]) : (r[p][0] = Number.MAX_SAFE_INTEGER, r[p][1] = 0);
                        r.sort(ca);
                        for (var v = a.morphAttributes.position, m = a.morphAttributes.normal, g = 0, y = 0; y < 8; y++) {
                            var x = r[y],
                                b = x[0],
                                _ = x[1];
                            b !== Number.MAX_SAFE_INTEGER && _ ? (v && a.getAttribute("morphTarget" + y) !== v[b] && a.setAttribute("morphTarget" + y, v[b]), m && a.getAttribute("morphNormal" + y) !== m[b] && a.setAttribute("morphNormal" + y, m[b]), n[y] = _, g += _) : (v && !0 === a.hasAttribute("morphTarget" + y) && a.deleteAttribute("morphTarget" + y), m && !0 === a.hasAttribute("morphNormal" + y) && a.deleteAttribute("morphNormal" + y), n[y] = 0)
                        }
                        var w = a.morphTargetsRelative ? 1 : 1 - g;
                        s.getUniforms().setValue(e, "morphTargetBaseInfluence", w), s.getUniforms().setValue(e, "morphTargetInfluences", n)
                    }
                }
            }

            function ha(e, t, n, r) {
                var i = new WeakMap;

                function a(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", a), n.remove(t.instanceMatrix), null !== t.instanceColor && n.remove(t.instanceColor)
                }
                return {
                    update: function(e) {
                        var o = r.render.frame,
                            s = e.geometry,
                            l = t.get(e, s);
                        return i.get(l) !== o && (t.update(l), i.set(l, o)), e.isInstancedMesh && (!1 === e.hasEventListener("dispose", a) && e.addEventListener("dispose", a), n.update(e.instanceMatrix, 34962), null !== e.instanceColor && n.update(e.instanceColor, 34962)), l
                    },
                    dispose: function() {
                        i = new WeakMap
                    }
                }
            }
            var pa = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return d(this, n), (e = t.call(this, null)).image = {
                        data: r,
                        width: i,
                        height: a,
                        depth: o
                    }, e.magFilter = $e, e.minFilter = $e, e.wrapR = Ze, e.generateMipmaps = !1, e.flipY = !1, e.unpackAlignment = 1, e.needsUpdate = !0, e
                }
                return p(n)
            }(Wt);
            pa.prototype.isDataTexture2DArray = !0;
            var va = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return d(this, n), (e = t.call(this, null)).image = {
                        data: r,
                        width: i,
                        height: a,
                        depth: o
                    }, e.magFilter = $e, e.minFilter = $e, e.wrapR = Ze, e.generateMipmaps = !1, e.flipY = !1, e.unpackAlignment = 1, e.needsUpdate = !0, e
                }
                return p(n)
            }(Wt);
            va.prototype.isDataTexture3D = !0;
            var ma = new Wt,
                ga = new pa,
                ya = new va,
                xa = new fi,
                ba = [],
                _a = [],
                wa = new Float32Array(16),
                Sa = new Float32Array(9),
                Ma = new Float32Array(4);

            function ka(e, t, n) {
                var r = e[0];
                if (r <= 0 || r > 0) return e;
                var i = t * n,
                    a = ba[i];
                if (void 0 === a && (a = new Float32Array(i), ba[i] = a), 0 !== t) {
                    r.toArray(a, 0);
                    for (var o = 1, s = 0; o !== t; ++o) s += n, e[o].toArray(a, s)
                }
                return a
            }

            function Ea(e, t) {
                if (e.length !== t.length) return !1;
                for (var n = 0, r = e.length; n < r; n++)
                    if (e[n] !== t[n]) return !1;
                return !0
            }

            function Ta(e, t) {
                for (var n = 0, r = t.length; n < r; n++) e[n] = t[n]
            }

            function La(e, t) {
                var n = _a[t];
                void 0 === n && (n = new Int32Array(t), _a[t] = n);
                for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
                return n
            }

            function Aa(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t)
            }

            function Ca(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y);
                else {
                    if (Ea(n, t)) return;
                    e.uniform2fv(this.addr, t), Ta(n, t)
                }
            }

            function Pa(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z);
                else if (void 0 !== t.r) n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b);
                else {
                    if (Ea(n, t)) return;
                    e.uniform3fv(this.addr, t), Ta(n, t)
                }
            }

            function Ra(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w);
                else {
                    if (Ea(n, t)) return;
                    e.uniform4fv(this.addr, t), Ta(n, t)
                }
            }

            function Na(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (Ea(n, t)) return;
                    e.uniformMatrix2fv(this.addr, !1, t), Ta(n, t)
                } else {
                    if (Ea(n, r)) return;
                    Ma.set(r), e.uniformMatrix2fv(this.addr, !1, Ma), Ta(n, r)
                }
            }

            function Ia(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (Ea(n, t)) return;
                    e.uniformMatrix3fv(this.addr, !1, t), Ta(n, t)
                } else {
                    if (Ea(n, r)) return;
                    Sa.set(r), e.uniformMatrix3fv(this.addr, !1, Sa), Ta(n, r)
                }
            }

            function za(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (Ea(n, t)) return;
                    e.uniformMatrix4fv(this.addr, !1, t), Ta(n, t)
                } else {
                    if (Ea(n, r)) return;
                    wa.set(r), e.uniformMatrix4fv(this.addr, !1, wa), Ta(n, r)
                }
            }

            function Oa(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t)
            }

            function Da(e, t) {
                var n = this.cache;
                Ea(n, t) || (e.uniform2iv(this.addr, t), Ta(n, t))
            }

            function Fa(e, t) {
                var n = this.cache;
                Ea(n, t) || (e.uniform3iv(this.addr, t), Ta(n, t))
            }

            function Ba(e, t) {
                var n = this.cache;
                Ea(n, t) || (e.uniform4iv(this.addr, t), Ta(n, t))
            }

            function Ua(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1ui(this.addr, t), n[0] = t)
            }

            function Ha(e, t) {
                var n = this.cache;
                Ea(n, t) || (e.uniform2uiv(this.addr, t), Ta(n, t))
            }

            function Va(e, t) {
                var n = this.cache;
                Ea(n, t) || (e.uniform3uiv(this.addr, t), Ta(n, t))
            }

            function Ga(e, t) {
                var n = this.cache;
                Ea(n, t) || (e.uniform4uiv(this.addr, t), Ta(n, t))
            }

            function Wa(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTexture2D(t || ma, i)
            }

            function ja(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture3D(t || ya, i)
            }

            function qa(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTextureCube(t || xa, i)
            }

            function Xa(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture2DArray(t || ga, i)
            }

            function Ya(e, t) {
                e.uniform1fv(this.addr, t)
            }

            function Za(e, t) {
                var n = ka(t, this.size, 2);
                e.uniform2fv(this.addr, n)
            }

            function Ja(e, t) {
                var n = ka(t, this.size, 3);
                e.uniform3fv(this.addr, n)
            }

            function $a(e, t) {
                var n = ka(t, this.size, 4);
                e.uniform4fv(this.addr, n)
            }

            function Qa(e, t) {
                var n = ka(t, this.size, 4);
                e.uniformMatrix2fv(this.addr, !1, n)
            }

            function Ka(e, t) {
                var n = ka(t, this.size, 9);
                e.uniformMatrix3fv(this.addr, !1, n)
            }

            function eo(e, t) {
                var n = ka(t, this.size, 16);
                e.uniformMatrix4fv(this.addr, !1, n)
            }

            function to(e, t) {
                e.uniform1iv(this.addr, t)
            }

            function no(e, t) {
                e.uniform2iv(this.addr, t)
            }

            function ro(e, t) {
                e.uniform3iv(this.addr, t)
            }

            function io(e, t) {
                e.uniform4iv(this.addr, t)
            }

            function ao(e, t) {
                e.uniform1uiv(this.addr, t)
            }

            function oo(e, t) {
                e.uniform2uiv(this.addr, t)
            }

            function so(e, t) {
                e.uniform3uiv(this.addr, t)
            }

            function lo(e, t) {
                e.uniform4uiv(this.addr, t)
            }

            function uo(e, t, n) {
                var r = t.length,
                    i = La(n, r);
                e.uniform1iv(this.addr, i);
                for (var a = 0; a !== r; ++a) n.safeSetTexture2D(t[a] || ma, i[a])
            }

            function co(e, t, n) {
                var r = t.length,
                    i = La(n, r);
                e.uniform1iv(this.addr, i);
                for (var a = 0; a !== r; ++a) n.safeSetTextureCube(t[a] || xa, i[a])
            }

            function fo(e, t, n) {
                this.id = e, this.addr = n, this.cache = [], this.setValue = function(e) {
                    switch (e) {
                        case 5126:
                            return Aa;
                        case 35664:
                            return Ca;
                        case 35665:
                            return Pa;
                        case 35666:
                            return Ra;
                        case 35674:
                            return Na;
                        case 35675:
                            return Ia;
                        case 35676:
                            return za;
                        case 5124:
                        case 35670:
                            return Oa;
                        case 35667:
                        case 35671:
                            return Da;
                        case 35668:
                        case 35672:
                            return Fa;
                        case 35669:
                        case 35673:
                            return Ba;
                        case 5125:
                            return Ua;
                        case 36294:
                            return Ha;
                        case 36295:
                            return Va;
                        case 36296:
                            return Ga;
                        case 35678:
                        case 36198:
                        case 36298:
                        case 36306:
                        case 35682:
                            return Wa;
                        case 35679:
                        case 36299:
                        case 36307:
                            return ja;
                        case 35680:
                        case 36300:
                        case 36308:
                        case 36293:
                            return qa;
                        case 36289:
                        case 36303:
                        case 36311:
                        case 36292:
                            return Xa
                    }
                }(t.type)
            }

            function ho(e, t, n) {
                this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = function(e) {
                    switch (e) {
                        case 5126:
                            return Ya;
                        case 35664:
                            return Za;
                        case 35665:
                            return Ja;
                        case 35666:
                            return $a;
                        case 35674:
                            return Qa;
                        case 35675:
                            return Ka;
                        case 35676:
                            return eo;
                        case 5124:
                        case 35670:
                            return to;
                        case 35667:
                        case 35671:
                            return no;
                        case 35668:
                        case 35672:
                            return ro;
                        case 35669:
                        case 35673:
                            return io;
                        case 5125:
                            return ao;
                        case 36294:
                            return oo;
                        case 36295:
                            return so;
                        case 36296:
                            return lo;
                        case 35678:
                        case 36198:
                        case 36298:
                        case 36306:
                        case 35682:
                            return uo;
                        case 35680:
                        case 36300:
                        case 36308:
                        case 36293:
                            return co
                    }
                }(t.type)
            }

            function po(e) {
                this.id = e, this.seq = [], this.map = {}
            }
            ho.prototype.updateCache = function(e) {
                var t = this.cache;
                e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)), Ta(t, e)
            }, po.prototype.setValue = function(e, t, n) {
                for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
                    var o = r[i];
                    o.setValue(e, t[o.id], n)
                }
            };
            var vo = /(\w+)(\])?(\[|\.)?/g;

            function mo(e, t) {
                e.seq.push(t), e.map[t.id] = t
            }

            function go(e, t, n) {
                var r = e.name,
                    i = r.length;
                for (vo.lastIndex = 0;;) {
                    var a = vo.exec(r),
                        o = vo.lastIndex,
                        s = a[1],
                        l = "]" === a[2],
                        u = a[3];
                    if (l && (s |= 0), void 0 === u || "[" === u && o + 2 === i) {
                        mo(n, void 0 === u ? new fo(s, e, t) : new ho(s, e, t));
                        break
                    }
                    var c = n.map[s];
                    void 0 === c && mo(n, c = new po(s)), n = c
                }
            }

            function yo(e, t) {
                this.seq = [], this.map = {};
                for (var n = e.getProgramParameter(t, 35718), r = 0; r < n; ++r) {
                    var i = e.getActiveUniform(t, r);
                    go(i, e.getUniformLocation(t, i.name), this)
                }
            }

            function xo(e, t, n) {
                var r = e.createShader(t);
                return e.shaderSource(r, n), e.compileShader(r), r
            }
            yo.prototype.setValue = function(e, t, n, r) {
                var i = this.map[t];
                void 0 !== i && i.setValue(e, n, r)
            }, yo.prototype.setOptional = function(e, t, n) {
                var r = t[n];
                void 0 !== r && this.setValue(e, n, r)
            }, yo.upload = function(e, t, n, r) {
                for (var i = 0, a = t.length; i !== a; ++i) {
                    var o = t[i],
                        s = n[o.id];
                    !1 !== s.needsUpdate && o.setValue(e, s.value, r)
                }
            }, yo.seqWithValue = function(e, t) {
                for (var n = [], r = 0, i = e.length; r !== i; ++r) {
                    var a = e[r];
                    a.id in t && n.push(a)
                }
                return n
            };
            var bo = 0;

            function _o(e) {
                switch (e) {
                    case bt:
                        return ["Linear", "( value )"];
                    case _t:
                        return ["sRGB", "( value )"];
                    case St:
                        return ["RGBE", "( value )"];
                    case 3004:
                        return ["RGBM", "( value, 7.0 )"];
                    case 3005:
                        return ["RGBM", "( value, 16.0 )"];
                    case 3006:
                        return ["RGBD", "( value, 256.0 )"];
                    case wt:
                        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                    case 3003:
                        return ["LogLuv", "( value )"];
                    default:
                        return console.warn("THREE.WebGLProgram: Unsupported encoding:", e), ["Linear", "( value )"]
                }
            }

            function wo(e, t, n) {
                var r = e.getShaderParameter(t, 35713),
                    i = e.getShaderInfoLog(t).trim();
                return r && "" === i ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + i + function(e) {
                    for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
                    return t.join("\n")
                }(e.getShaderSource(t))
            }

            function So(e, t) {
                var n = _o(t);
                return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
            }

            function Mo(e, t) {
                var n = _o(t);
                return "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
            }

            function ko(e, t) {
                var n;
                switch (t) {
                    case 1:
                        n = "Linear";
                        break;
                    case 2:
                        n = "Reinhard";
                        break;
                    case 3:
                        n = "OptimizedCineon";
                        break;
                    case 4:
                        n = "ACESFilmic";
                        break;
                    case 5:
                        n = "Custom";
                        break;
                    default:
                        console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t), n = "Linear"
                }
                return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
            }

            function Eo(e) {
                return "" !== e
            }

            function To(e, t) {
                return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
            }

            function Lo(e, t) {
                return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
            }
            var Ao = /^[ \t]*#include +<([\w\d./]+)>/gm;

            function Co(e) {
                return e.replace(Ao, Po)
            }

            function Po(e, t) {
                var n = Si[t];
                if (void 0 === n) throw new Error("Can not resolve #include <" + t + ">");
                return Co(n)
            }
            var Ro = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
                No = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;

            function Io(e) {
                return e.replace(No, Oo).replace(Ro, zo)
            }

            function zo(e, t, n, r) {
                return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), Oo(e, t, n, r)
            }

            function Oo(e, t, n, r) {
                for (var i = "", a = parseInt(t); a < parseInt(n); a++) i += r.replace(/\[\s*i\s*\]/g, "[ " + a + " ]").replace(/UNROLLED_LOOP_INDEX/g, a);
                return i
            }

            function Do(e) {
                var t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
                return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"), t
            }

            function Fo(e, t, n, r) {
                var i, a, o = e.getContext(),
                    s = n.defines,
                    l = n.vertexShader,
                    u = n.fragmentShader,
                    c = function(e) {
                        var t = "SHADOWMAP_TYPE_BASIC";
                        return 1 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF" : 2 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF_SOFT" : 3 === e.shadowMapType && (t = "SHADOWMAP_TYPE_VSM"), t
                    }(n),
                    f = function(e) {
                        var t = "ENVMAP_TYPE_CUBE";
                        if (e.envMap) switch (e.envMapMode) {
                            case Ve:
                            case Ge:
                                t = "ENVMAP_TYPE_CUBE";
                                break;
                            case qe:
                            case Xe:
                                t = "ENVMAP_TYPE_CUBE_UV"
                        }
                        return t
                    }(n),
                    d = function(e) {
                        var t = "ENVMAP_MODE_REFLECTION";
                        if (e.envMap) switch (e.envMapMode) {
                            case Ge:
                            case Xe:
                                t = "ENVMAP_MODE_REFRACTION"
                        }
                        return t
                    }(n),
                    h = function(e) {
                        var t = "ENVMAP_BLENDING_NONE";
                        if (e.envMap) switch (e.combine) {
                            case 0:
                                t = "ENVMAP_BLENDING_MULTIPLY";
                                break;
                            case 1:
                                t = "ENVMAP_BLENDING_MIX";
                                break;
                            case 2:
                                t = "ENVMAP_BLENDING_ADD"
                        }
                        return t
                    }(n),
                    p = e.gammaFactor > 0 ? e.gammaFactor : 1,
                    v = n.isWebGL2 ? "" : function(e) {
                        return [e.extensionDerivatives || e.envMapCubeUV || e.bumpMap || e.tangentSpaceNormalMap || e.clearcoatNormalMap || e.flatShading || "physical" === e.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.extensionFragDepth || e.logarithmicDepthBuffer) && e.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", e.extensionDrawBuffers && e.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (e.extensionShaderTextureLOD || e.envMap || e.transmission > 0) && e.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Eo).join("\n")
                    }(n),
                    m = function(e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            !1 !== r && t.push("#define " + n + " " + r)
                        }
                        return t.join("\n")
                    }(s),
                    g = o.createProgram(),
                    y = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
                n.isRawShaderMaterial ? ((i = [m].filter(Eo).join("\n")).length > 0 && (i += "\n"), (a = [v, m].filter(Eo).join("\n")).length > 0 && (a += "\n")) : (i = [Do(n), "#define SHADER_NAME " + n.shaderName, m, n.instancing ? "#define USE_INSTANCING" : "", n.instancingColor ? "#define USE_INSTANCING_COLOR" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + p, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + d : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", n.specularTintMap ? "#define USE_SPECULARTINTMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", "\tattribute mat4 instanceMatrix;", "#endif", "#ifdef USE_INSTANCING_COLOR", "\tattribute vec3 instanceColor;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#if defined( USE_COLOR_ALPHA )", "\tattribute vec4 color;", "#elif defined( USE_COLOR )", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Eo).join("\n"), a = [v, Do(n), "#define SHADER_NAME " + n.shaderName, m, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + p, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + f : "", n.envMap ? "#define " + d : "", n.envMap ? "#define " + h : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", n.specularTintMap ? "#define USE_SPECULARTINTMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", 0 !== n.toneMapping ? "#define TONE_MAPPING" : "", 0 !== n.toneMapping ? Si.tonemapping_pars_fragment : "", 0 !== n.toneMapping ? ko("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", Si.encodings_pars_fragment, n.map ? So("mapTexelToLinear", n.mapEncoding) : "", n.matcap ? So("matcapTexelToLinear", n.matcapEncoding) : "", n.envMap ? So("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMap ? So("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.specularTintMap ? So("specularTintMapTexelToLinear", n.specularTintMapEncoding) : "", n.lightMap ? So("lightMapTexelToLinear", n.lightMapEncoding) : "", Mo("linearToOutputTexel", n.outputEncoding), n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(Eo).join("\n")), l = Lo(l = To(l = Co(l), n), n), u = Lo(u = To(u = Co(u), n), n), l = Io(l), u = Io(u), n.isWebGL2 && !0 !== n.isRawShaderMaterial && (y = "#version 300 es\n", i = ["#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + i, a = ["#define varying in", n.glslVersion === Tt ? "" : "out highp vec4 pc_fragColor;", n.glslVersion === Tt ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + a);
                var x, b, _ = y + a + u,
                    w = xo(o, 35633, y + i + l),
                    S = xo(o, 35632, _);
                if (o.attachShader(g, w), o.attachShader(g, S), void 0 !== n.index0AttributeName ? o.bindAttribLocation(g, 0, n.index0AttributeName) : !0 === n.morphTargets && o.bindAttribLocation(g, 0, "position"), o.linkProgram(g), e.debug.checkShaderErrors) {
                    var M = o.getProgramInfoLog(g).trim(),
                        k = o.getShaderInfoLog(w).trim(),
                        E = o.getShaderInfoLog(S).trim(),
                        T = !0,
                        L = !0;
                    if (!1 === o.getProgramParameter(g, 35714)) {
                        T = !1;
                        var A = wo(o, w, "vertex"),
                            C = wo(o, S, "fragment");
                        console.error("THREE.WebGLProgram: shader error: ", o.getError(), "35715", o.getProgramParameter(g, 35715), "gl.getProgramInfoLog", M, A, C)
                    } else "" !== M ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", M) : "" !== k && "" !== E || (L = !1);
                    L && (this.diagnostics = {
                        runnable: T,
                        programLog: M,
                        vertexShader: {
                            log: k,
                            prefix: i
                        },
                        fragmentShader: {
                            log: E,
                            prefix: a
                        }
                    })
                }
                return o.deleteShader(w), o.deleteShader(S), this.getUniforms = function() {
                    return void 0 === x && (x = new yo(o, g)), x
                }, this.getAttributes = function() {
                    return void 0 === b && (b = function(e, t) {
                        for (var n = {}, r = e.getProgramParameter(t, 35721), i = 0; i < r; i++) {
                            var a = e.getActiveAttrib(t, i).name;
                            n[a] = e.getAttribLocation(t, a)
                        }
                        return n
                    }(o, g)), b
                }, this.destroy = function() {
                    r.releaseStatesOfProgram(this), o.deleteProgram(g), this.program = void 0
                }, this.name = n.shaderName, this.id = bo++, this.cacheKey = t, this.usedTimes = 1, this.program = g, this.vertexShader = w, this.fragmentShader = S, this
            }

            function Bo(e, t, n, r, i, a, o) {
                var s = [],
                    l = i.isWebGL2,
                    u = i.logarithmicDepthBuffer,
                    c = i.floatVertexTextures,
                    f = i.maxVertexUniforms,
                    d = i.vertexTextures,
                    h = i.precision,
                    p = {
                        MeshDepthMaterial: "depth",
                        MeshDistanceMaterial: "distanceRGBA",
                        MeshNormalMaterial: "normal",
                        MeshBasicMaterial: "basic",
                        MeshLambertMaterial: "lambert",
                        MeshPhongMaterial: "phong",
                        MeshToonMaterial: "toon",
                        MeshStandardMaterial: "physical",
                        MeshPhysicalMaterial: "physical",
                        MeshMatcapMaterial: "matcap",
                        LineBasicMaterial: "basic",
                        LineDashedMaterial: "dashed",
                        PointsMaterial: "points",
                        ShadowMaterial: "shadow",
                        SpriteMaterial: "sprite"
                    },
                    v = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "instancingColor", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap", "specularIntensityMap", "specularTintMap", "specularTintMapEncoding", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexAlphas", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen", "transmission", "transmissionMap", "thicknessMap"];

                function m(e) {
                    var t;
                    return e && e.isTexture ? t = e.encoding : e && e.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), t = e.texture.encoding) : t = bt, t
                }
                return {
                    getParameters: function(a, s, v, g, y) {
                        var x, b, _ = g.fog,
                            w = a.isMeshStandardMaterial ? g.environment : null,
                            S = (a.isMeshStandardMaterial ? n : t).get(a.envMap || w),
                            M = p[a.type],
                            k = y.isSkinnedMesh ? function(e) {
                                var t = e.skeleton.bones;
                                if (c) return 1024;
                                var n = f,
                                    r = Math.floor((n - 20) / 4),
                                    i = Math.min(r, t.length);
                                return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."), 0) : i
                            }(y) : 0;
                        if (null !== a.precision && (h = i.getMaxPrecision(a.precision)) !== a.precision && console.warn("THREE.WebGLProgram.getParameters:", a.precision, "not supported, using", h, "instead."), M) {
                            var E = ki[M];
                            x = E.vertexShader, b = E.fragmentShader
                        } else x = a.vertexShader, b = a.fragmentShader;
                        var T = e.getRenderTarget();
                        return {
                            isWebGL2: l,
                            shaderID: M,
                            shaderName: a.type,
                            vertexShader: x,
                            fragmentShader: b,
                            defines: a.defines,
                            isRawShaderMaterial: !0 === a.isRawShaderMaterial,
                            glslVersion: a.glslVersion,
                            precision: h,
                            instancing: !0 === y.isInstancedMesh,
                            instancingColor: !0 === y.isInstancedMesh && null !== y.instanceColor,
                            supportsVertexTextures: d,
                            outputEncoding: null !== T ? m(T.texture) : e.outputEncoding,
                            map: !!a.map,
                            mapEncoding: m(a.map),
                            matcap: !!a.matcap,
                            matcapEncoding: m(a.matcap),
                            envMap: !!S,
                            envMapMode: S && S.mapping,
                            envMapEncoding: m(S),
                            envMapCubeUV: !!S && (S.mapping === qe || S.mapping === Xe),
                            lightMap: !!a.lightMap,
                            lightMapEncoding: m(a.lightMap),
                            aoMap: !!a.aoMap,
                            emissiveMap: !!a.emissiveMap,
                            emissiveMapEncoding: m(a.emissiveMap),
                            bumpMap: !!a.bumpMap,
                            normalMap: !!a.normalMap,
                            objectSpaceNormalMap: 1 === a.normalMapType,
                            tangentSpaceNormalMap: 0 === a.normalMapType,
                            clearcoatMap: !!a.clearcoatMap,
                            clearcoatRoughnessMap: !!a.clearcoatRoughnessMap,
                            clearcoatNormalMap: !!a.clearcoatNormalMap,
                            displacementMap: !!a.displacementMap,
                            roughnessMap: !!a.roughnessMap,
                            metalnessMap: !!a.metalnessMap,
                            specularMap: !!a.specularMap,
                            specularIntensityMap: !!a.specularIntensityMap,
                            specularTintMap: !!a.specularTintMap,
                            specularTintMapEncoding: m(a.specularTintMap),
                            alphaMap: !!a.alphaMap,
                            gradientMap: !!a.gradientMap,
                            sheen: !!a.sheen,
                            transmission: !!a.transmission,
                            transmissionMap: !!a.transmissionMap,
                            thicknessMap: !!a.thicknessMap,
                            combine: a.combine,
                            vertexTangents: a.normalMap && y.geometry && y.geometry.attributes.tangent,
                            vertexColors: a.vertexColors,
                            vertexAlphas: !0 === a.vertexColors && y.geometry && y.geometry.attributes.color && 4 === y.geometry.attributes.color.itemSize,
                            vertexUvs: !!a.map || !!a.bumpMap || !!a.normalMap || !!a.specularMap || !!a.alphaMap || !!a.emissiveMap || !!a.roughnessMap || !!a.metalnessMap || !!a.clearcoatMap || !!a.clearcoatRoughnessMap || !!a.clearcoatNormalMap || !!a.displacementMap || !!a.transmissionMap || !!a.thicknessMap || !!a.specularIntensityMap || !!a.specularTintMap,
                            uvsVertexOnly: !(a.map || a.bumpMap || a.normalMap || a.specularMap || a.alphaMap || a.emissiveMap || a.roughnessMap || a.metalnessMap || a.clearcoatNormalMap || a.transmission || a.transmissionMap || a.thicknessMap || a.specularIntensityMap || a.specularTintMap) && !!a.displacementMap,
                            fog: !!_,
                            useFog: a.fog,
                            fogExp2: _ && _.isFogExp2,
                            flatShading: !!a.flatShading,
                            sizeAttenuation: a.sizeAttenuation,
                            logarithmicDepthBuffer: u,
                            skinning: !0 === y.isSkinnedMesh && k > 0,
                            maxBones: k,
                            useVertexTexture: c,
                            morphTargets: y.geometry && void 0 !== y.geometry.morphAttributes.position,
                            morphNormals: y.geometry && void 0 !== y.geometry.morphAttributes.normal,
                            numDirLights: s.directional.length,
                            numPointLights: s.point.length,
                            numSpotLights: s.spot.length,
                            numRectAreaLights: s.rectArea.length,
                            numHemiLights: s.hemi.length,
                            numDirLightShadows: s.directionalShadowMap.length,
                            numPointLightShadows: s.pointShadowMap.length,
                            numSpotLightShadows: s.spotShadowMap.length,
                            numClippingPlanes: o.numPlanes,
                            numClipIntersection: o.numIntersection,
                            dithering: a.dithering,
                            shadowMapEnabled: e.shadowMap.enabled && v.length > 0,
                            shadowMapType: e.shadowMap.type,
                            toneMapping: a.toneMapped ? e.toneMapping : 0,
                            physicallyCorrectLights: e.physicallyCorrectLights,
                            premultipliedAlpha: a.premultipliedAlpha,
                            alphaTest: a.alphaTest,
                            doubleSided: 2 === a.side,
                            flipSided: 1 === a.side,
                            depthPacking: void 0 !== a.depthPacking && a.depthPacking,
                            index0AttributeName: a.index0AttributeName,
                            extensionDerivatives: a.extensions && a.extensions.derivatives,
                            extensionFragDepth: a.extensions && a.extensions.fragDepth,
                            extensionDrawBuffers: a.extensions && a.extensions.drawBuffers,
                            extensionShaderTextureLOD: a.extensions && a.extensions.shaderTextureLOD,
                            rendererExtensionFragDepth: l || r.has("EXT_frag_depth"),
                            rendererExtensionDrawBuffers: l || r.has("WEBGL_draw_buffers"),
                            rendererExtensionShaderTextureLod: l || r.has("EXT_shader_texture_lod"),
                            customProgramCacheKey: a.customProgramCacheKey()
                        }
                    },
                    getProgramCacheKey: function(t) {
                        var n = [];
                        if (t.shaderID ? n.push(t.shaderID) : (n.push(t.fragmentShader), n.push(t.vertexShader)), void 0 !== t.defines)
                            for (var r in t.defines) n.push(r), n.push(t.defines[r]);
                        if (!1 === t.isRawShaderMaterial) {
                            for (var i = 0; i < v.length; i++) n.push(t[v[i]]);
                            n.push(e.outputEncoding), n.push(e.gammaFactor)
                        }
                        return n.push(t.customProgramCacheKey), n.join()
                    },
                    getUniforms: function(e) {
                        var t, n = p[e.type];
                        if (n) {
                            var r = ki[n];
                            t = ai.clone(r.uniforms)
                        } else t = e.uniforms;
                        return t
                    },
                    acquireProgram: function(t, n) {
                        for (var r, i = 0, o = s.length; i < o; i++) {
                            var l = s[i];
                            if (l.cacheKey === n) {
                                ++(r = l).usedTimes;
                                break
                            }
                        }
                        return void 0 === r && (r = new Fo(e, n, t, a), s.push(r)), r
                    },
                    releaseProgram: function(e) {
                        if (0 === --e.usedTimes) {
                            var t = s.indexOf(e);
                            s[t] = s[s.length - 1], s.pop(), e.destroy()
                        }
                    },
                    programs: s
                }
            }

            function Uo() {
                var e = new WeakMap;
                return {
                    get: function(t) {
                        var n = e.get(t);
                        return void 0 === n && (n = {}, e.set(t, n)), n
                    },
                    remove: function(t) {
                        e.delete(t)
                    },
                    update: function(t, n, r) {
                        e.get(t)[n] = r
                    },
                    dispose: function() {
                        e = new WeakMap
                    }
                }
            }

            function Ho(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
            }

            function Vo(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
            }

            function Go(e) {
                var t = [],
                    n = 0,
                    r = [],
                    i = [],
                    a = [],
                    o = {
                        id: -1
                    };

                function s(r, i, a, s, l, u) {
                    var c = t[n],
                        f = e.get(a);
                    return void 0 === c ? (c = {
                        id: r.id,
                        object: r,
                        geometry: i,
                        material: a,
                        program: f.program || o,
                        groupOrder: s,
                        renderOrder: r.renderOrder,
                        z: l,
                        group: u
                    }, t[n] = c) : (c.id = r.id, c.object = r, c.geometry = i, c.material = a, c.program = f.program || o, c.groupOrder = s, c.renderOrder = r.renderOrder, c.z = l, c.group = u), n++, c
                }
                return {
                    opaque: r,
                    transmissive: i,
                    transparent: a,
                    init: function() {
                        n = 0, r.length = 0, i.length = 0, a.length = 0
                    },
                    push: function(e, t, n, o, l, u) {
                        var c = s(e, t, n, o, l, u);
                        n.transmission > 0 ? i.push(c) : !0 === n.transparent ? a.push(c) : r.push(c)
                    },
                    unshift: function(e, t, n, o, l, u) {
                        var c = s(e, t, n, o, l, u);
                        n.transmission > 0 ? i.unshift(c) : !0 === n.transparent ? a.unshift(c) : r.unshift(c)
                    },
                    finish: function() {
                        for (var e = n, r = t.length; e < r; e++) {
                            var i = t[e];
                            if (null === i.id) break;
                            i.id = null, i.object = null, i.geometry = null, i.material = null, i.program = null, i.group = null
                        }
                    },
                    sort: function(e, t) {
                        r.length > 1 && r.sort(e || Ho), i.length > 1 && i.sort(t || Vo), a.length > 1 && a.sort(t || Vo)
                    }
                }
            }

            function Wo(e) {
                var t = new WeakMap;
                return {
                    get: function(n, r) {
                        var i;
                        return !1 === t.has(n) ? (i = new Go(e), t.set(n, [i])) : r >= t.get(n).length ? (i = new Go(e), t.get(n).push(i)) : i = t.get(n)[r], i
                    },
                    dispose: function() {
                        t = new WeakMap
                    }
                }
            }

            function jo() {
                var e = {};
                return {
                    get: function(t) {
                        if (void 0 !== e[t.id]) return e[t.id];
                        var n;
                        switch (t.type) {
                            case "DirectionalLight":
                                n = {
                                    direction: new $t,
                                    color: new br
                                };
                                break;
                            case "SpotLight":
                                n = {
                                    position: new $t,
                                    direction: new $t,
                                    color: new br,
                                    distance: 0,
                                    coneCos: 0,
                                    penumbraCos: 0,
                                    decay: 0
                                };
                                break;
                            case "PointLight":
                                n = {
                                    position: new $t,
                                    color: new br,
                                    distance: 0,
                                    decay: 0
                                };
                                break;
                            case "HemisphereLight":
                                n = {
                                    direction: new $t,
                                    skyColor: new br,
                                    groundColor: new br
                                };
                                break;
                            case "RectAreaLight":
                                n = {
                                    color: new br,
                                    position: new $t,
                                    halfWidth: new $t,
                                    halfHeight: new $t
                                }
                        }
                        return e[t.id] = n, n
                    }
                }
            }
            var qo = 0;

            function Xo(e, t) {
                return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
            }

            function Yo(e, t) {
                for (var n = new jo, r = function() {
                        var e = {};
                        return {
                            get: function(t) {
                                if (void 0 !== e[t.id]) return e[t.id];
                                var n;
                                switch (t.type) {
                                    case "DirectionalLight":
                                    case "SpotLight":
                                        n = {
                                            shadowBias: 0,
                                            shadowNormalBias: 0,
                                            shadowRadius: 1,
                                            shadowMapSize: new Bt
                                        };
                                        break;
                                    case "PointLight":
                                        n = {
                                            shadowBias: 0,
                                            shadowNormalBias: 0,
                                            shadowRadius: 1,
                                            shadowMapSize: new Bt,
                                            shadowCameraNear: 1,
                                            shadowCameraFar: 1e3
                                        }
                                }
                                return e[t.id] = n, n
                            }
                        }
                    }(), i = {
                        version: 0,
                        hash: {
                            directionalLength: -1,
                            pointLength: -1,
                            spotLength: -1,
                            rectAreaLength: -1,
                            hemiLength: -1,
                            numDirectionalShadows: -1,
                            numPointShadows: -1,
                            numSpotShadows: -1
                        },
                        ambient: [0, 0, 0],
                        probe: [],
                        directional: [],
                        directionalShadow: [],
                        directionalShadowMap: [],
                        directionalShadowMatrix: [],
                        spot: [],
                        spotShadow: [],
                        spotShadowMap: [],
                        spotShadowMatrix: [],
                        rectArea: [],
                        rectAreaLTC1: null,
                        rectAreaLTC2: null,
                        point: [],
                        pointShadow: [],
                        pointShadowMap: [],
                        pointShadowMatrix: [],
                        hemi: []
                    }, a = 0; a < 9; a++) i.probe.push(new $t);
                var o = new $t,
                    s = new An,
                    l = new An;
                return {
                    setup: function(a) {
                        for (var o = 0, s = 0, l = 0, u = 0; u < 9; u++) i.probe[u].set(0, 0, 0);
                        var c = 0,
                            f = 0,
                            d = 0,
                            h = 0,
                            p = 0,
                            v = 0,
                            m = 0,
                            g = 0;
                        a.sort(Xo);
                        for (var y = 0, x = a.length; y < x; y++) {
                            var b = a[y],
                                _ = b.color,
                                w = b.intensity,
                                S = b.distance,
                                M = b.shadow && b.shadow.map ? b.shadow.map.texture : null;
                            if (b.isAmbientLight) o += _.r * w, s += _.g * w, l += _.b * w;
                            else if (b.isLightProbe)
                                for (var k = 0; k < 9; k++) i.probe[k].addScaledVector(b.sh.coefficients[k], w);
                            else if (b.isDirectionalLight) {
                                var E = n.get(b);
                                if (E.color.copy(b.color).multiplyScalar(b.intensity), b.castShadow) {
                                    var T = b.shadow,
                                        L = r.get(b);
                                    L.shadowBias = T.bias, L.shadowNormalBias = T.normalBias, L.shadowRadius = T.radius, L.shadowMapSize = T.mapSize, i.directionalShadow[c] = L, i.directionalShadowMap[c] = M, i.directionalShadowMatrix[c] = b.shadow.matrix, v++
                                }
                                i.directional[c] = E, c++
                            } else if (b.isSpotLight) {
                                var A = n.get(b);
                                if (A.position.setFromMatrixPosition(b.matrixWorld), A.color.copy(_).multiplyScalar(w), A.distance = S, A.coneCos = Math.cos(b.angle), A.penumbraCos = Math.cos(b.angle * (1 - b.penumbra)), A.decay = b.decay, b.castShadow) {
                                    var C = b.shadow,
                                        P = r.get(b);
                                    P.shadowBias = C.bias, P.shadowNormalBias = C.normalBias, P.shadowRadius = C.radius, P.shadowMapSize = C.mapSize, i.spotShadow[d] = P, i.spotShadowMap[d] = M, i.spotShadowMatrix[d] = b.shadow.matrix, g++
                                }
                                i.spot[d] = A, d++
                            } else if (b.isRectAreaLight) {
                                var R = n.get(b);
                                R.color.copy(_).multiplyScalar(w), R.halfWidth.set(.5 * b.width, 0, 0), R.halfHeight.set(0, .5 * b.height, 0), i.rectArea[h] = R, h++
                            } else if (b.isPointLight) {
                                var N = n.get(b);
                                if (N.color.copy(b.color).multiplyScalar(b.intensity), N.distance = b.distance, N.decay = b.decay, b.castShadow) {
                                    var I = b.shadow,
                                        z = r.get(b);
                                    z.shadowBias = I.bias, z.shadowNormalBias = I.normalBias, z.shadowRadius = I.radius, z.shadowMapSize = I.mapSize, z.shadowCameraNear = I.camera.near, z.shadowCameraFar = I.camera.far, i.pointShadow[f] = z, i.pointShadowMap[f] = M, i.pointShadowMatrix[f] = b.shadow.matrix, m++
                                }
                                i.point[f] = N, f++
                            } else if (b.isHemisphereLight) {
                                var O = n.get(b);
                                O.skyColor.copy(b.color).multiplyScalar(w), O.groundColor.copy(b.groundColor).multiplyScalar(w), i.hemi[p] = O, p++
                            }
                        }
                        h > 0 && (t.isWebGL2 || !0 === e.has("OES_texture_float_linear") ? (i.rectAreaLTC1 = Mi.LTC_FLOAT_1, i.rectAreaLTC2 = Mi.LTC_FLOAT_2) : !0 === e.has("OES_texture_half_float_linear") ? (i.rectAreaLTC1 = Mi.LTC_HALF_1, i.rectAreaLTC2 = Mi.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), i.ambient[0] = o, i.ambient[1] = s, i.ambient[2] = l;
                        var D = i.hash;
                        D.directionalLength === c && D.pointLength === f && D.spotLength === d && D.rectAreaLength === h && D.hemiLength === p && D.numDirectionalShadows === v && D.numPointShadows === m && D.numSpotShadows === g || (i.directional.length = c, i.spot.length = d, i.rectArea.length = h, i.point.length = f, i.hemi.length = p, i.directionalShadow.length = v, i.directionalShadowMap.length = v, i.pointShadow.length = m, i.pointShadowMap.length = m, i.spotShadow.length = g, i.spotShadowMap.length = g, i.directionalShadowMatrix.length = v, i.pointShadowMatrix.length = m, i.spotShadowMatrix.length = g, D.directionalLength = c, D.pointLength = f, D.spotLength = d, D.rectAreaLength = h, D.hemiLength = p, D.numDirectionalShadows = v, D.numPointShadows = m, D.numSpotShadows = g, i.version = qo++)
                    },
                    setupView: function(e, t) {
                        for (var n = 0, r = 0, a = 0, u = 0, c = 0, f = t.matrixWorldInverse, d = 0, h = e.length; d < h; d++) {
                            var p = e[d];
                            if (p.isDirectionalLight) {
                                var v = i.directional[n];
                                v.direction.setFromMatrixPosition(p.matrixWorld), o.setFromMatrixPosition(p.target.matrixWorld), v.direction.sub(o), v.direction.transformDirection(f), n++
                            } else if (p.isSpotLight) {
                                var m = i.spot[a];
                                m.position.setFromMatrixPosition(p.matrixWorld), m.position.applyMatrix4(f), m.direction.setFromMatrixPosition(p.matrixWorld), o.setFromMatrixPosition(p.target.matrixWorld), m.direction.sub(o), m.direction.transformDirection(f), a++
                            } else if (p.isRectAreaLight) {
                                var g = i.rectArea[u];
                                g.position.setFromMatrixPosition(p.matrixWorld), g.position.applyMatrix4(f), l.identity(), s.copy(p.matrixWorld), s.premultiply(f), l.extractRotation(s), g.halfWidth.set(.5 * p.width, 0, 0), g.halfHeight.set(0, .5 * p.height, 0), g.halfWidth.applyMatrix4(l), g.halfHeight.applyMatrix4(l), u++
                            } else if (p.isPointLight) {
                                var y = i.point[r];
                                y.position.setFromMatrixPosition(p.matrixWorld), y.position.applyMatrix4(f), r++
                            } else if (p.isHemisphereLight) {
                                var x = i.hemi[c];
                                x.direction.setFromMatrixPosition(p.matrixWorld), x.direction.transformDirection(f), x.direction.normalize(), c++
                            }
                        }
                    },
                    state: i
                }
            }

            function Zo(e, t) {
                var n = new Yo(e, t),
                    r = [],
                    i = [];
                return {
                    init: function() {
                        r.length = 0, i.length = 0
                    },
                    state: {
                        lightsArray: r,
                        shadowsArray: i,
                        lights: n
                    },
                    setupLights: function() {
                        n.setup(r)
                    },
                    setupLightsView: function(e) {
                        n.setupView(r, e)
                    },
                    pushLight: function(e) {
                        r.push(e)
                    },
                    pushShadow: function(e) {
                        i.push(e)
                    }
                }
            }

            function Jo(e, t) {
                var n = new WeakMap;
                return {
                    get: function(r) {
                        var i, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return !1 === n.has(r) ? (i = new Zo(e, t), n.set(r, [i])) : a >= n.get(r).length ? (i = new Zo(e, t), n.get(r).push(i)) : i = n.get(r)[a], i
                    },
                    dispose: function() {
                        n = new WeakMap
                    }
                }
            }
            var $o = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "MeshDepthMaterial", r.depthPacking = 3200, r.map = null, r.alphaMap = null, r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.wireframe = !1, r.wireframeLinewidth = 1, r.fog = !1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this
                    }
                }]), n
            }(hr);
            $o.prototype.isMeshDepthMaterial = !0;
            var Qo = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "MeshDistanceMaterial", r.referencePosition = new $t, r.nearDistance = 1, r.farDistance = 1e3, r.map = null, r.alphaMap = null, r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.fog = !1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this
                    }
                }]), n
            }(hr);
            Qo.prototype.isMeshDistanceMaterial = !0;

            function Ko(e, t, n) {
                var r = new xi,
                    i = new Bt,
                    a = new Bt,
                    o = new qt,
                    s = new $o({
                        depthPacking: 3201
                    }),
                    l = new Qo,
                    u = {},
                    c = n.maxTextureSize,
                    f = {
                        0: 1,
                        1: 0,
                        2: 2
                    },
                    d = new oi({
                        defines: {
                            SAMPLE_RATE: 2 / 8,
                            HALF_SAMPLE_RATE: 1 / 8
                        },
                        uniforms: {
                            shadow_pass: {
                                value: null
                            },
                            resolution: {
                                value: new Bt
                            },
                            radius: {
                                value: 4
                            }
                        },
                        vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
                        fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
                    }),
                    h = d.clone();
                h.defines.HORIZONTAL_PASS = 1;
                var p = new Or;
                p.setAttribute("position", new Mr(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]), 3));
                var v = new ei(p, d),
                    m = this;

                function g(n, r) {
                    var i = t.update(v);
                    d.uniforms.shadow_pass.value = n.map.texture, d.uniforms.resolution.value = n.mapSize, d.uniforms.radius.value = n.radius, e.setRenderTarget(n.mapPass), e.clear(), e.renderBufferDirect(r, null, i, d, v, null), h.uniforms.shadow_pass.value = n.mapPass.texture, h.uniforms.resolution.value = n.mapSize, h.uniforms.radius.value = n.radius, e.setRenderTarget(n.map), e.clear(), e.renderBufferDirect(r, null, i, h, v, null)
                }

                function y(t, n, r, i, a, o, c) {
                    var d = null,
                        h = !0 === i.isPointLight ? t.customDistanceMaterial : t.customDepthMaterial;
                    if (d = void 0 !== h ? h : !0 === i.isPointLight ? l : s, e.localClippingEnabled && !0 === r.clipShadows && 0 !== r.clippingPlanes.length) {
                        var p = d.uuid,
                            v = r.uuid,
                            m = u[p];
                        void 0 === m && (m = {}, u[p] = m);
                        var g = m[v];
                        void 0 === g && (g = d.clone(), m[v] = g), d = g
                    }
                    return d.visible = r.visible, d.wireframe = r.wireframe, d.side = 3 === c ? null !== r.shadowSide ? r.shadowSide : r.side : null !== r.shadowSide ? r.shadowSide : f[r.side], d.clipShadows = r.clipShadows, d.clippingPlanes = r.clippingPlanes, d.clipIntersection = r.clipIntersection, d.wireframeLinewidth = r.wireframeLinewidth, d.linewidth = r.linewidth, !0 === i.isPointLight && !0 === d.isMeshDistanceMaterial && (d.referencePosition.setFromMatrixPosition(i.matrixWorld), d.nearDistance = a, d.farDistance = o), d
                }

                function x(n, i, a, o, s) {
                    if (!1 !== n.visible) {
                        if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === s) && (!n.frustumCulled || r.intersectsObject(n))) {
                            n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, n.matrixWorld);
                            var l = t.update(n),
                                u = n.material;
                            if (Array.isArray(u))
                                for (var c = l.groups, f = 0, d = c.length; f < d; f++) {
                                    var h = c[f],
                                        p = u[h.materialIndex];
                                    if (p && p.visible) {
                                        var v = y(n, 0, p, o, a.near, a.far, s);
                                        e.renderBufferDirect(a, null, l, v, n, h)
                                    }
                                } else if (u.visible) {
                                    var m = y(n, 0, u, o, a.near, a.far, s);
                                    e.renderBufferDirect(a, null, l, m, n, null)
                                }
                        }
                        for (var g = n.children, b = 0, _ = g.length; b < _; b++) x(g[b], i, a, o, s)
                    }
                }
                this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = 1, this.render = function(t, n, s) {
                    if (!1 !== m.enabled && (!1 !== m.autoUpdate || !1 !== m.needsUpdate) && 0 !== t.length) {
                        var l = e.getRenderTarget(),
                            u = e.getActiveCubeFace(),
                            f = e.getActiveMipmapLevel(),
                            d = e.state;
                        d.setBlending(0), d.buffers.color.setClear(1, 1, 1, 1), d.buffers.depth.setTest(!0), d.setScissorTest(!1);
                        for (var h = 0, p = t.length; h < p; h++) {
                            var v = t[h],
                                y = v.shadow;
                            if (void 0 !== y) {
                                if (!1 !== y.autoUpdate || !1 !== y.needsUpdate) {
                                    i.copy(y.mapSize);
                                    var b = y.getFrameExtents();
                                    if (i.multiply(b), a.copy(y.mapSize), (i.x > c || i.y > c) && (i.x > c && (a.x = Math.floor(c / b.x), i.x = a.x * b.x, y.mapSize.x = a.x), i.y > c && (a.y = Math.floor(c / b.y), i.y = a.y * b.y, y.mapSize.y = a.y)), null === y.map && !y.isPointLightShadow && 3 === this.type) {
                                        var _ = {
                                            minFilter: et,
                                            magFilter: et,
                                            format: ut
                                        };
                                        y.map = new Xt(i.x, i.y, _), y.map.texture.name = v.name + ".shadowMap", y.mapPass = new Xt(i.x, i.y, _), y.camera.updateProjectionMatrix()
                                    }
                                    if (null === y.map) {
                                        var w = {
                                            minFilter: $e,
                                            magFilter: $e,
                                            format: ut
                                        };
                                        y.map = new Xt(i.x, i.y, w), y.map.texture.name = v.name + ".shadowMap", y.camera.updateProjectionMatrix()
                                    }
                                    e.setRenderTarget(y.map), e.clear();
                                    for (var S = y.getViewportCount(), M = 0; M < S; M++) {
                                        var k = y.getViewport(M);
                                        o.set(a.x * k.x, a.y * k.y, a.x * k.z, a.y * k.w), d.viewport(o), y.updateMatrices(v, M), r = y.getFrustum(), x(n, s, y.camera, v, this.type)
                                    }
                                    y.isPointLightShadow || 3 !== this.type || g(y, s), y.needsUpdate = !1
                                }
                            } else console.warn("THREE.WebGLShadowMap:", v, "has no shadow.")
                        }
                        m.needsUpdate = !1, e.setRenderTarget(l, u, f)
                    }
                }
            }

            function es(e, t, n) {
                var r, i, a = n.isWebGL2;
                var o = new function() {
                        var t = !1,
                            n = new qt,
                            r = null,
                            i = new qt(0, 0, 0, 0);
                        return {
                            setMask: function(n) {
                                r === n || t || (e.colorMask(n, n, n, n), r = n)
                            },
                            setLocked: function(e) {
                                t = e
                            },
                            setClear: function(t, r, a, o, s) {
                                !0 === s && (t *= o, r *= o, a *= o), n.set(t, r, a, o), !1 === i.equals(n) && (e.clearColor(t, r, a, o), i.copy(n))
                            },
                            reset: function() {
                                t = !1, r = null, i.set(-1, 0, 0, 0)
                            }
                        }
                    },
                    s = new function() {
                        var t = !1,
                            n = null,
                            r = null,
                            i = null;
                        return {
                            setTest: function(e) {
                                e ? B(2929) : U(2929)
                            },
                            setMask: function(r) {
                                n === r || t || (e.depthMask(r), n = r)
                            },
                            setFunc: function(t) {
                                if (r !== t) {
                                    if (t) switch (t) {
                                        case 0:
                                            e.depthFunc(512);
                                            break;
                                        case 1:
                                            e.depthFunc(519);
                                            break;
                                        case 2:
                                            e.depthFunc(513);
                                            break;
                                        case 3:
                                        default:
                                            e.depthFunc(515);
                                            break;
                                        case 4:
                                            e.depthFunc(514);
                                            break;
                                        case 5:
                                            e.depthFunc(518);
                                            break;
                                        case 6:
                                            e.depthFunc(516);
                                            break;
                                        case 7:
                                            e.depthFunc(517)
                                    } else e.depthFunc(515);
                                    r = t
                                }
                            },
                            setLocked: function(e) {
                                t = e
                            },
                            setClear: function(t) {
                                i !== t && (e.clearDepth(t), i = t)
                            },
                            reset: function() {
                                t = !1, n = null, r = null, i = null
                            }
                        }
                    },
                    l = new function() {
                        var t = !1,
                            n = null,
                            r = null,
                            i = null,
                            a = null,
                            o = null,
                            s = null,
                            l = null,
                            u = null;
                        return {
                            setTest: function(e) {
                                t || (e ? B(2960) : U(2960))
                            },
                            setMask: function(r) {
                                n === r || t || (e.stencilMask(r), n = r)
                            },
                            setFunc: function(t, n, o) {
                                r === t && i === n && a === o || (e.stencilFunc(t, n, o), r = t, i = n, a = o)
                            },
                            setOp: function(t, n, r) {
                                o === t && s === n && l === r || (e.stencilOp(t, n, r), o = t, s = n, l = r)
                            },
                            setLocked: function(e) {
                                t = e
                            },
                            setClear: function(t) {
                                u !== t && (e.clearStencil(t), u = t)
                            },
                            reset: function() {
                                t = !1, n = null, r = null, i = null, a = null, o = null, s = null, l = null, u = null
                            }
                        }
                    },
                    u = {},
                    c = null,
                    f = {},
                    d = null,
                    h = !1,
                    p = null,
                    v = null,
                    m = null,
                    g = null,
                    y = null,
                    x = null,
                    b = null,
                    _ = !1,
                    w = null,
                    S = null,
                    M = null,
                    k = null,
                    E = null,
                    T = e.getParameter(35661),
                    L = !1,
                    A = 0,
                    C = e.getParameter(7938); - 1 !== C.indexOf("WebGL") ? (A = parseFloat(/^WebGL (\d)/.exec(C)[1]), L = A >= 1) : -1 !== C.indexOf("OpenGL ES") && (A = parseFloat(/^OpenGL ES (\d)/.exec(C)[1]), L = A >= 2);
                var P = null,
                    R = {},
                    N = e.getParameter(3088),
                    I = e.getParameter(2978),
                    z = (new qt).fromArray(N),
                    O = (new qt).fromArray(I);

                function D(t, n, r) {
                    var i = new Uint8Array(4),
                        a = e.createTexture();
                    e.bindTexture(t, a), e.texParameteri(t, 10241, 9728), e.texParameteri(t, 10240, 9728);
                    for (var o = 0; o < r; o++) e.texImage2D(n + o, 0, 6408, 1, 1, 0, 6408, 5121, i);
                    return a
                }
                var F = {};

                function B(t) {
                    !0 !== u[t] && (e.enable(t), u[t] = !0)
                }

                function U(t) {
                    !1 !== u[t] && (e.disable(t), u[t] = !1)
                }
                F[3553] = D(3553, 3553, 1), F[34067] = D(34067, 34069, 6), o.setClear(0, 0, 0, 1), s.setClear(1), l.setClear(0), B(2929), s.setFunc(3), j(!1), q(1), B(2884), W(0);
                var H = (Ie(r = {}, He, 32774), Ie(r, 101, 32778), Ie(r, 102, 32779), r);
                if (a) H[103] = 32775, H[104] = 32776;
                else {
                    var V = t.get("EXT_blend_minmax");
                    null !== V && (H[103] = V.MIN_EXT, H[104] = V.MAX_EXT)
                }
                var G = (Ie(i = {}, 200, 0), Ie(i, 201, 1), Ie(i, 202, 768), Ie(i, 204, 770), Ie(i, 210, 776), Ie(i, 208, 774), Ie(i, 206, 772), Ie(i, 203, 769), Ie(i, 205, 771), Ie(i, 209, 775), Ie(i, 207, 773), i);

                function W(t, n, r, i, a, o, s, l) {
                    if (0 !== t) {
                        if (!1 === h && (B(3042), h = !0), 5 === t) a = a || n, o = o || r, s = s || i, n === v && a === y || (e.blendEquationSeparate(H[n], H[a]), v = n, y = a), r === m && i === g && o === x && s === b || (e.blendFuncSeparate(G[r], G[i], G[o], G[s]), m = r, g = i, x = o, b = s), p = t, _ = null;
                        else if (t !== p || l !== _) {
                            if (v === He && y === He || (e.blendEquation(32774), v = He, y = He), l) switch (t) {
                                case 1:
                                    e.blendFuncSeparate(1, 771, 1, 771);
                                    break;
                                case 2:
                                    e.blendFunc(1, 1);
                                    break;
                                case 3:
                                    e.blendFuncSeparate(0, 0, 769, 771);
                                    break;
                                case 4:
                                    e.blendFuncSeparate(0, 768, 0, 770);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                            } else switch (t) {
                                case 1:
                                    e.blendFuncSeparate(770, 771, 1, 771);
                                    break;
                                case 2:
                                    e.blendFunc(770, 1);
                                    break;
                                case 3:
                                    e.blendFunc(0, 769);
                                    break;
                                case 4:
                                    e.blendFunc(0, 768);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                            }
                            m = null, g = null, x = null, b = null, p = t, _ = l
                        }
                    } else !0 === h && (U(3042), h = !1)
                }

                function j(t) {
                    w !== t && (t ? e.frontFace(2304) : e.frontFace(2305), w = t)
                }

                function q(t) {
                    0 !== t ? (B(2884), t !== S && (1 === t ? e.cullFace(1029) : 2 === t ? e.cullFace(1028) : e.cullFace(1032))) : U(2884), S = t
                }

                function X(t, n, r) {
                    t ? (B(32823), k === n && E === r || (e.polygonOffset(n, r), k = n, E = r)) : U(32823)
                }

                function Y(t) {
                    void 0 === t && (t = 33984 + T - 1), P !== t && (e.activeTexture(t), P = t)
                }
                return {
                    buffers: {
                        color: o,
                        depth: s,
                        stencil: l
                    },
                    enable: B,
                    disable: U,
                    bindFramebuffer: function(t, n) {
                        return null === n && null !== c && (n = c), f[t] !== n && (e.bindFramebuffer(t, n), f[t] = n, a && (36009 === t && (f[36160] = n), 36160 === t && (f[36009] = n)), !0)
                    },
                    bindXRFramebuffer: function(t) {
                        t !== c && (e.bindFramebuffer(36160, t), c = t)
                    },
                    useProgram: function(t) {
                        return d !== t && (e.useProgram(t), d = t, !0)
                    },
                    setBlending: W,
                    setMaterial: function(e, t) {
                        2 === e.side ? U(2884) : B(2884);
                        var n = 1 === e.side;
                        t && (n = !n), j(n), 1 === e.blending && !1 === e.transparent ? W(0) : W(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha), s.setFunc(e.depthFunc), s.setTest(e.depthTest), s.setMask(e.depthWrite), o.setMask(e.colorWrite);
                        var r = e.stencilWrite;
                        l.setTest(r), r && (l.setMask(e.stencilWriteMask), l.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask), l.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)), X(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits), !0 === e.alphaToCoverage ? B(32926) : U(32926)
                    },
                    setFlipSided: j,
                    setCullFace: q,
                    setLineWidth: function(t) {
                        t !== M && (L && e.lineWidth(t), M = t)
                    },
                    setPolygonOffset: X,
                    setScissorTest: function(e) {
                        e ? B(3089) : U(3089)
                    },
                    activeTexture: Y,
                    bindTexture: function(t, n) {
                        null === P && Y();
                        var r = R[P];
                        void 0 === r && (r = {
                            type: void 0,
                            texture: void 0
                        }, R[P] = r), r.type === t && r.texture === n || (e.bindTexture(t, n || F[t]), r.type = t, r.texture = n)
                    },
                    unbindTexture: function() {
                        var t = R[P];
                        void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null), t.type = void 0, t.texture = void 0)
                    },
                    compressedTexImage2D: function() {
                        try {
                            e.compressedTexImage2D.apply(e, arguments)
                        } catch (t) {
                            console.error("THREE.WebGLState:", t)
                        }
                    },
                    texImage2D: function() {
                        try {
                            e.texImage2D.apply(e, arguments)
                        } catch (t) {
                            console.error("THREE.WebGLState:", t)
                        }
                    },
                    texImage3D: function() {
                        try {
                            e.texImage3D.apply(e, arguments)
                        } catch (t) {
                            console.error("THREE.WebGLState:", t)
                        }
                    },
                    scissor: function(t) {
                        !1 === z.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), z.copy(t))
                    },
                    viewport: function(t) {
                        !1 === O.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), O.copy(t))
                    },
                    reset: function() {
                        e.disable(3042), e.disable(2884), e.disable(2929), e.disable(32823), e.disable(3089), e.disable(2960), e.disable(32926), e.blendEquation(32774), e.blendFunc(1, 0), e.blendFuncSeparate(1, 0, 1, 0), e.colorMask(!0, !0, !0, !0), e.clearColor(0, 0, 0, 0), e.depthMask(!0), e.depthFunc(513), e.clearDepth(1), e.stencilMask(4294967295), e.stencilFunc(519, 0, 4294967295), e.stencilOp(7680, 7680, 7680), e.clearStencil(0), e.cullFace(1029), e.frontFace(2305), e.polygonOffset(0, 0), e.activeTexture(33984), e.bindFramebuffer(36160, null), !0 === a && (e.bindFramebuffer(36009, null), e.bindFramebuffer(36008, null)), e.useProgram(null), e.lineWidth(1), e.scissor(0, 0, e.canvas.width, e.canvas.height), e.viewport(0, 0, e.canvas.width, e.canvas.height), u = {}, P = null, R = {}, c = null, f = {}, d = null, h = !1, p = null, v = null, m = null, g = null, y = null, x = null, b = null, _ = !1, w = null, S = null, M = null, k = null, E = null, z.set(0, 0, e.canvas.width, e.canvas.height), O.set(0, 0, e.canvas.width, e.canvas.height), o.reset(), s.reset(), l.reset()
                    }
                }
            }

            function ts(e, t, n, r, i, a, o) {
                var s, l, u, c = i.isWebGL2,
                    f = i.maxTextures,
                    d = i.maxCubemapSize,
                    h = i.maxTextureSize,
                    p = i.maxSamples,
                    v = new WeakMap,
                    m = !1;
                try {
                    m = "undefined" !== typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext("2d")
                } catch (U) {}

                function g(e, t) {
                    return m ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                }

                function y(e, t, n, r) {
                    var i = 1;
                    if ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)), i < 1 || !0 === t) {
                        if ("undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" !== typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && e instanceof ImageBitmap) {
                            var a = t ? Ft : Math.floor,
                                o = a(i * e.width),
                                s = a(i * e.height);
                            void 0 === u && (u = g(o, s));
                            var l = n ? g(o, s) : u;
                            return l.width = o, l.height = s, l.getContext("2d").drawImage(e, 0, 0, o, s), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + o + "x" + s + ")."), l
                        }
                        return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."), e
                    }
                    return e
                }

                function x(e) {
                    return Dt(e.width) && Dt(e.height)
                }

                function b(e, t) {
                    return e.generateMipmaps && t && e.minFilter !== $e && e.minFilter !== et
                }

                function _(t, n, i, a) {
                    var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
                    e.generateMipmap(t);
                    var s = r.get(n);
                    s.__maxMipLevel = Math.log2(Math.max(i, a, o))
                }

                function w(n, r, i) {
                    if (!1 === c) return r;
                    if (null !== n) {
                        if (void 0 !== e[n]) return e[n];
                        console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
                    }
                    var a = r;
                    return 6403 === r && (5126 === i && (a = 33326), 5131 === i && (a = 33325), 5121 === i && (a = 33321)), 6407 === r && (5126 === i && (a = 34837), 5131 === i && (a = 34843), 5121 === i && (a = 32849)), 6408 === r && (5126 === i && (a = 34836), 5131 === i && (a = 34842), 5121 === i && (a = 32856)), 33325 !== a && 33326 !== a && 34842 !== a && 34836 !== a || t.get("EXT_color_buffer_float"), a
                }

                function S(e) {
                    return e === $e || e === Qe || e === Ke ? 9728 : 9729
                }

                function M(t) {
                    var n = t.target;
                    n.removeEventListener("dispose", M),
                        function(t) {
                            var n = r.get(t);
                            if (void 0 === n.__webglInit) return;
                            e.deleteTexture(n.__webglTexture), r.remove(t)
                        }(n), n.isVideoTexture && v.delete(n), o.memory.textures--
                }

                function k(t) {
                    var n = t.target;
                    n.removeEventListener("dispose", k),
                        function(t) {
                            var n = t.texture,
                                i = r.get(t),
                                a = r.get(n);
                            if (!t) return;
                            void 0 !== a.__webglTexture && (e.deleteTexture(a.__webglTexture), o.memory.textures--);
                            t.depthTexture && t.depthTexture.dispose();
                            if (t.isWebGLCubeRenderTarget)
                                for (var s = 0; s < 6; s++) e.deleteFramebuffer(i.__webglFramebuffer[s]), i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer[s]);
                            else e.deleteFramebuffer(i.__webglFramebuffer), i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer), i.__webglMultisampledFramebuffer && e.deleteFramebuffer(i.__webglMultisampledFramebuffer), i.__webglColorRenderbuffer && e.deleteRenderbuffer(i.__webglColorRenderbuffer), i.__webglDepthRenderbuffer && e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
                            if (t.isWebGLMultipleRenderTargets)
                                for (var l = 0, u = n.length; l < u; l++) {
                                    var c = r.get(n[l]);
                                    c.__webglTexture && (e.deleteTexture(c.__webglTexture), o.memory.textures--), r.remove(n[l])
                                }
                            r.remove(n), r.remove(t)
                        }(n)
                }
                var E = 0;

                function T(e, t) {
                    var i = r.get(e);
                    if (e.isVideoTexture && function(e) {
                            var t = o.render.frame;
                            v.get(e) !== t && (v.set(e, t), e.update())
                        }(e), e.version > 0 && i.__version !== e.version) {
                        var a = e.image;
                        if (void 0 === a) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                        else {
                            if (!1 !== a.complete) return void N(i, e, t);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                        }
                    }
                    n.activeTexture(33984 + t), n.bindTexture(3553, i.__webglTexture)
                }

                function L(t, i) {
                    var o = r.get(t);
                    t.version > 0 && o.__version !== t.version ? function(t, r, i) {
                        if (6 !== r.image.length) return;
                        R(t, r), n.activeTexture(33984 + i), n.bindTexture(34067, t.__webglTexture), e.pixelStorei(37440, r.flipY), e.pixelStorei(37441, r.premultiplyAlpha), e.pixelStorei(3317, r.unpackAlignment), e.pixelStorei(37443, 0);
                        for (var o = r && (r.isCompressedTexture || r.image[0].isCompressedTexture), s = r.image[0] && r.image[0].isDataTexture, l = [], u = 0; u < 6; u++) l[u] = o || s ? s ? r.image[u].image : r.image[u] : y(r.image[u], !1, !0, d);
                        var f, h = l[0],
                            p = x(h) || c,
                            v = a.convert(r.format),
                            m = a.convert(r.type),
                            g = w(r.internalFormat, v, m);
                        if (P(34067, r, p), o) {
                            for (var S = 0; S < 6; S++) {
                                f = l[S].mipmaps;
                                for (var M = 0; M < f.length; M++) {
                                    var k = f[M];
                                    r.format !== ut && r.format !== lt ? null !== v ? n.compressedTexImage2D(34069 + S, M, g, k.width, k.height, 0, k.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + S, M, g, k.width, k.height, 0, v, m, k.data)
                                }
                            }
                            t.__maxMipLevel = f.length - 1
                        } else {
                            f = r.mipmaps;
                            for (var E = 0; E < 6; E++)
                                if (s) {
                                    n.texImage2D(34069 + E, 0, g, l[E].width, l[E].height, 0, v, m, l[E].data);
                                    for (var T = 0; T < f.length; T++) {
                                        var L = f[T].image[E].image;
                                        n.texImage2D(34069 + E, T + 1, g, L.width, L.height, 0, v, m, L.data)
                                    }
                                } else {
                                    n.texImage2D(34069 + E, 0, g, v, m, l[E]);
                                    for (var A = 0; A < f.length; A++) {
                                        var C = f[A];
                                        n.texImage2D(34069 + E, A + 1, g, v, m, C.image[E])
                                    }
                                }
                            t.__maxMipLevel = f.length
                        }
                        b(r, p) && _(34067, r, h.width, h.height);
                        t.__version = r.version, r.onUpdate && r.onUpdate(r)
                    }(o, t, i) : (n.activeTexture(33984 + i), n.bindTexture(34067, o.__webglTexture))
                }
                var A = (Ie(s = {}, Ye, 10497), Ie(s, Ze, 33071), Ie(s, Je, 33648), s),
                    C = (Ie(l = {}, $e, 9728), Ie(l, Qe, 9984), Ie(l, Ke, 9986), Ie(l, et, 9729), Ie(l, 1007, 9985), Ie(l, tt, 9987), l);

                function P(n, a, o) {
                    if (o ? (e.texParameteri(n, 10242, A[a.wrapS]), e.texParameteri(n, 10243, A[a.wrapT]), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, A[a.wrapR]), e.texParameteri(n, 10240, C[a.magFilter]), e.texParameteri(n, 10241, C[a.minFilter])) : (e.texParameteri(n, 10242, 33071), e.texParameteri(n, 10243, 33071), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071), a.wrapS === Ze && a.wrapT === Ze || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, 10240, S(a.magFilter)), e.texParameteri(n, 10241, S(a.minFilter)), a.minFilter !== $e && a.minFilter !== et && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), !0 === t.has("EXT_texture_filter_anisotropic")) {
                        var s = t.get("EXT_texture_filter_anisotropic");
                        if (a.type === at && !1 === t.has("OES_texture_float_linear")) return;
                        if (!1 === c && a.type === ot && !1 === t.has("OES_texture_half_float_linear")) return;
                        (a.anisotropy > 1 || r.get(a).__currentAnisotropy) && (e.texParameterf(n, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())), r.get(a).__currentAnisotropy = a.anisotropy)
                    }
                }

                function R(t, n) {
                    void 0 === t.__webglInit && (t.__webglInit = !0, n.addEventListener("dispose", M), t.__webglTexture = e.createTexture(), o.memory.textures++)
                }

                function N(t, r, i) {
                    var o = 3553;
                    r.isDataTexture2DArray && (o = 35866), r.isDataTexture3D && (o = 32879), R(t, r), n.activeTexture(33984 + i), n.bindTexture(o, t.__webglTexture), e.pixelStorei(37440, r.flipY), e.pixelStorei(37441, r.premultiplyAlpha), e.pixelStorei(3317, r.unpackAlignment), e.pixelStorei(37443, 0);
                    var s, l = function(e) {
                            return !c && (e.wrapS !== Ze || e.wrapT !== Ze || e.minFilter !== $e && e.minFilter !== et)
                        }(r) && !1 === x(r.image),
                        u = y(r.image, l, !1, h),
                        f = x(u) || c,
                        d = a.convert(r.format),
                        p = a.convert(r.type),
                        v = w(r.internalFormat, d, p);
                    P(o, r, f);
                    var m = r.mipmaps;
                    if (r.isDepthTexture) v = 6402, c ? v = r.type === at ? 36012 : r.type === it ? 33190 : r.type === st ? 35056 : 33189 : r.type === at && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), r.format === ct && 6402 === v && r.type !== rt && r.type !== it && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), r.type = rt, p = a.convert(r.type)), r.format === ft && 6402 === v && (v = 34041, r.type !== st && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), r.type = st, p = a.convert(r.type))), n.texImage2D(3553, 0, v, u.width, u.height, 0, d, p, null);
                    else if (r.isDataTexture)
                        if (m.length > 0 && f) {
                            for (var g = 0, S = m.length; g < S; g++) s = m[g], n.texImage2D(3553, g, v, s.width, s.height, 0, d, p, s.data);
                            r.generateMipmaps = !1, t.__maxMipLevel = m.length - 1
                        } else n.texImage2D(3553, 0, v, u.width, u.height, 0, d, p, u.data), t.__maxMipLevel = 0;
                    else if (r.isCompressedTexture) {
                        for (var M = 0, k = m.length; M < k; M++) s = m[M], r.format !== ut && r.format !== lt ? null !== d ? n.compressedTexImage2D(3553, M, v, s.width, s.height, 0, s.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, M, v, s.width, s.height, 0, d, p, s.data);
                        t.__maxMipLevel = m.length - 1
                    } else if (r.isDataTexture2DArray) n.texImage3D(35866, 0, v, u.width, u.height, u.depth, 0, d, p, u.data), t.__maxMipLevel = 0;
                    else if (r.isDataTexture3D) n.texImage3D(32879, 0, v, u.width, u.height, u.depth, 0, d, p, u.data), t.__maxMipLevel = 0;
                    else if (m.length > 0 && f) {
                        for (var E = 0, T = m.length; E < T; E++) s = m[E], n.texImage2D(3553, E, v, d, p, s);
                        r.generateMipmaps = !1, t.__maxMipLevel = m.length - 1
                    } else n.texImage2D(3553, 0, v, d, p, u), t.__maxMipLevel = 0;
                    b(r, f) && _(o, r, u.width, u.height), t.__version = r.version, r.onUpdate && r.onUpdate(r)
                }

                function I(t, i, o, s, l) {
                    var u = a.convert(o.format),
                        c = a.convert(o.type),
                        f = w(o.internalFormat, u, c);
                    32879 === l || 35866 === l ? n.texImage3D(l, 0, f, i.width, i.height, i.depth, 0, u, c, null) : n.texImage2D(l, 0, f, i.width, i.height, 0, u, c, null), n.bindFramebuffer(36160, t), e.framebufferTexture2D(36160, s, l, r.get(o).__webglTexture, 0), n.bindFramebuffer(36160, null)
                }

                function z(t, n, r) {
                    if (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer) {
                        var i = 33189;
                        if (r) {
                            var o = n.depthTexture;
                            o && o.isDepthTexture && (o.type === at ? i = 36012 : o.type === it && (i = 33190));
                            var s = D(n);
                            e.renderbufferStorageMultisample(36161, s, i, n.width, n.height)
                        } else e.renderbufferStorage(36161, i, n.width, n.height);
                        e.framebufferRenderbuffer(36160, 36096, 36161, t)
                    } else if (n.depthBuffer && n.stencilBuffer) {
                        if (r) {
                            var l = D(n);
                            e.renderbufferStorageMultisample(36161, l, 35056, n.width, n.height)
                        } else e.renderbufferStorage(36161, 34041, n.width, n.height);
                        e.framebufferRenderbuffer(36160, 33306, 36161, t)
                    } else {
                        var u = !0 === n.isWebGLMultipleRenderTargets ? n.texture[0] : n.texture,
                            c = a.convert(u.format),
                            f = a.convert(u.type),
                            d = w(u.internalFormat, c, f);
                        if (r) {
                            var h = D(n);
                            e.renderbufferStorageMultisample(36161, h, d, n.width, n.height)
                        } else e.renderbufferStorage(36161, d, n.width, n.height)
                    }
                    e.bindRenderbuffer(36161, null)
                }

                function O(t) {
                    var i = r.get(t),
                        a = !0 === t.isWebGLCubeRenderTarget;
                    if (t.depthTexture) {
                        if (a) throw new Error("target.depthTexture not supported in Cube render targets");
                        ! function(t, i) {
                            if (i && i.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
                            if (n.bindFramebuffer(36160, t), !i.depthTexture || !i.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                            r.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width, i.depthTexture.image.height = i.height, i.depthTexture.needsUpdate = !0), T(i.depthTexture, 0);
                            var a = r.get(i.depthTexture).__webglTexture;
                            if (i.depthTexture.format === ct) e.framebufferTexture2D(36160, 36096, 3553, a, 0);
                            else {
                                if (i.depthTexture.format !== ft) throw new Error("Unknown depthTexture format");
                                e.framebufferTexture2D(36160, 33306, 3553, a, 0)
                            }
                        }(i.__webglFramebuffer, t)
                    } else if (a) {
                        i.__webglDepthbuffer = [];
                        for (var o = 0; o < 6; o++) n.bindFramebuffer(36160, i.__webglFramebuffer[o]), i.__webglDepthbuffer[o] = e.createRenderbuffer(), z(i.__webglDepthbuffer[o], t, !1)
                    } else n.bindFramebuffer(36160, i.__webglFramebuffer), i.__webglDepthbuffer = e.createRenderbuffer(), z(i.__webglDepthbuffer, t, !1);
                    n.bindFramebuffer(36160, null)
                }

                function D(e) {
                    return c && e.isWebGLMultisampleRenderTarget ? Math.min(p, e.samples) : 0
                }
                var F = !1,
                    B = !1;
                this.allocateTextureUnit = function() {
                    var e = E;
                    return e >= f && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + f), E += 1, e
                }, this.resetTextureUnits = function() {
                    E = 0
                }, this.setTexture2D = T, this.setTexture2DArray = function(e, t) {
                    var i = r.get(e);
                    e.version > 0 && i.__version !== e.version ? N(i, e, t) : (n.activeTexture(33984 + t), n.bindTexture(35866, i.__webglTexture))
                }, this.setTexture3D = function(e, t) {
                    var i = r.get(e);
                    e.version > 0 && i.__version !== e.version ? N(i, e, t) : (n.activeTexture(33984 + t), n.bindTexture(32879, i.__webglTexture))
                }, this.setTextureCube = L, this.setupRenderTarget = function(t) {
                    var s = t.texture,
                        l = r.get(t),
                        u = r.get(s);
                    t.addEventListener("dispose", k), !0 !== t.isWebGLMultipleRenderTargets && (u.__webglTexture = e.createTexture(), u.__version = s.version, o.memory.textures++);
                    var f = !0 === t.isWebGLCubeRenderTarget,
                        d = !0 === t.isWebGLMultipleRenderTargets,
                        h = !0 === t.isWebGLMultisampleRenderTarget,
                        p = s.isDataTexture3D || s.isDataTexture2DArray,
                        v = x(t) || c;
                    if (!c || s.format !== lt || s.type !== at && s.type !== ot || (s.format = ut, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), f) {
                        l.__webglFramebuffer = [];
                        for (var m = 0; m < 6; m++) l.__webglFramebuffer[m] = e.createFramebuffer()
                    } else if (l.__webglFramebuffer = e.createFramebuffer(), d)
                        if (i.drawBuffers)
                            for (var g = t.texture, y = 0, S = g.length; y < S; y++) {
                                var M = r.get(g[y]);
                                void 0 === M.__webglTexture && (M.__webglTexture = e.createTexture(), o.memory.textures++)
                            } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
                        else if (h)
                        if (c) {
                            l.__webglMultisampledFramebuffer = e.createFramebuffer(), l.__webglColorRenderbuffer = e.createRenderbuffer(), e.bindRenderbuffer(36161, l.__webglColorRenderbuffer);
                            var E = a.convert(s.format),
                                T = a.convert(s.type),
                                L = w(s.internalFormat, E, T),
                                A = D(t);
                            e.renderbufferStorageMultisample(36161, A, L, t.width, t.height), n.bindFramebuffer(36160, l.__webglMultisampledFramebuffer), e.framebufferRenderbuffer(36160, 36064, 36161, l.__webglColorRenderbuffer), e.bindRenderbuffer(36161, null), t.depthBuffer && (l.__webglDepthRenderbuffer = e.createRenderbuffer(), z(l.__webglDepthRenderbuffer, t, !0)), n.bindFramebuffer(36160, null)
                        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
                    if (f) {
                        n.bindTexture(34067, u.__webglTexture), P(34067, s, v);
                        for (var C = 0; C < 6; C++) I(l.__webglFramebuffer[C], t, s, 36064, 34069 + C);
                        b(s, v) && _(34067, s, t.width, t.height), n.bindTexture(34067, null)
                    } else if (d) {
                        for (var R = t.texture, N = 0, F = R.length; N < F; N++) {
                            var B = R[N],
                                U = r.get(B);
                            n.bindTexture(3553, U.__webglTexture), P(3553, B, v), I(l.__webglFramebuffer, t, B, 36064 + N, 3553), b(B, v) && _(3553, B, t.width, t.height)
                        }
                        n.bindTexture(3553, null)
                    } else {
                        var H = 3553;
                        if (p)
                            if (c) H = s.isDataTexture3D ? 32879 : 35866;
                            else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");
                        n.bindTexture(H, u.__webglTexture), P(H, s, v), I(l.__webglFramebuffer, t, s, 36064, H), b(s, v) && _(H, s, t.width, t.height, t.depth), n.bindTexture(H, null)
                    }
                    t.depthBuffer && O(t)
                }, this.updateRenderTargetMipmap = function(e) {
                    for (var t = x(e) || c, i = !0 === e.isWebGLMultipleRenderTargets ? e.texture : [e.texture], a = 0, o = i.length; a < o; a++) {
                        var s = i[a];
                        if (b(s, t)) {
                            var l = e.isWebGLCubeRenderTarget ? 34067 : 3553,
                                u = r.get(s).__webglTexture;
                            n.bindTexture(l, u), _(l, s, e.width, e.height), n.bindTexture(l, null)
                        }
                    }
                }, this.updateMultisampleRenderTarget = function(t) {
                    if (t.isWebGLMultisampleRenderTarget)
                        if (c) {
                            var i = t.width,
                                a = t.height,
                                o = 16384;
                            t.depthBuffer && (o |= 256), t.stencilBuffer && (o |= 1024);
                            var s = r.get(t);
                            n.bindFramebuffer(36008, s.__webglMultisampledFramebuffer), n.bindFramebuffer(36009, s.__webglFramebuffer), e.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, 9728), n.bindFramebuffer(36008, null), n.bindFramebuffer(36009, s.__webglMultisampledFramebuffer)
                        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
                }, this.safeSetTexture2D = function(e, t) {
                    e && e.isWebGLRenderTarget && (!1 === F && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), F = !0), e = e.texture), T(e, t)
                }, this.safeSetTextureCube = function(e, t) {
                    e && e.isWebGLCubeRenderTarget && (!1 === B && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), B = !0), e = e.texture), L(e, t)
                }
            }

            function ns(e, t, n) {
                var r = n.isWebGL2;
                return {
                    convert: function(e) {
                        var n;
                        if (e === nt) return 5121;
                        if (1017 === e) return 32819;
                        if (1018 === e) return 32820;
                        if (1019 === e) return 33635;
                        if (1010 === e) return 5120;
                        if (1011 === e) return 5122;
                        if (e === rt) return 5123;
                        if (1013 === e) return 5124;
                        if (e === it) return 5125;
                        if (e === at) return 5126;
                        if (e === ot) return r ? 5131 : null !== (n = t.get("OES_texture_half_float")) ? n.HALF_FLOAT_OES : null;
                        if (1021 === e) return 6406;
                        if (e === lt) return 6407;
                        if (e === ut) return 6408;
                        if (1024 === e) return 6409;
                        if (1025 === e) return 6410;
                        if (e === ct) return 6402;
                        if (e === ft) return 34041;
                        if (1028 === e) return 6403;
                        if (1029 === e) return 36244;
                        if (1030 === e) return 33319;
                        if (1031 === e) return 33320;
                        if (1032 === e) return 36248;
                        if (1033 === e) return 36249;
                        if (33776 === e || 33777 === e || 33778 === e || 33779 === e) {
                            if (null === (n = t.get("WEBGL_compressed_texture_s3tc"))) return null;
                            if (33776 === e) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (33777 === e) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (33778 === e) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (33779 === e) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if (35840 === e || 35841 === e || 35842 === e || 35843 === e) {
                            if (null === (n = t.get("WEBGL_compressed_texture_pvrtc"))) return null;
                            if (35840 === e) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (35841 === e) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (35842 === e) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (35843 === e) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (36196 === e) return null !== (n = t.get("WEBGL_compressed_texture_etc1")) ? n.COMPRESSED_RGB_ETC1_WEBGL : null;
                        if ((37492 === e || 37496 === e) && null !== (n = t.get("WEBGL_compressed_texture_etc"))) {
                            if (37492 === e) return n.COMPRESSED_RGB8_ETC2;
                            if (37496 === e) return n.COMPRESSED_RGBA8_ETC2_EAC
                        }
                        return 37808 === e || 37809 === e || 37810 === e || 37811 === e || 37812 === e || 37813 === e || 37814 === e || 37815 === e || 37816 === e || 37817 === e || 37818 === e || 37819 === e || 37820 === e || 37821 === e || 37840 === e || 37841 === e || 37842 === e || 37843 === e || 37844 === e || 37845 === e || 37846 === e || 37847 === e || 37848 === e || 37849 === e || 37850 === e || 37851 === e || 37852 === e || 37853 === e ? null !== (n = t.get("WEBGL_compressed_texture_astc")) ? e : null : 36492 === e ? null !== (n = t.get("EXT_texture_compression_bptc")) ? e : null : e === st ? r ? 34042 : null !== (n = t.get("WEBGL_depth_texture")) ? n.UNSIGNED_INT_24_8_WEBGL : null : void 0
                    }
                }
            }
            var rs = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    return d(this, n), (e = t.call(this)).cameras = r, e
                }
                return p(n)
            }(li);
            rs.prototype.isArrayCamera = !0;
            var is = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return d(this, n), (e = t.call(this)).type = "Group", e
                }
                return p(n)
            }(er);
            is.prototype.isGroup = !0;
            var as = {
                    type: "move"
                },
                os = function() {
                    function e() {
                        d(this, e), this._targetRay = null, this._grip = null, this._hand = null
                    }
                    return p(e, [{
                        key: "getHandSpace",
                        value: function() {
                            return null === this._hand && (this._hand = new is, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
                                pinching: !1
                            }), this._hand
                        }
                    }, {
                        key: "getTargetRaySpace",
                        value: function() {
                            return null === this._targetRay && (this._targetRay = new is, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new $t, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new $t), this._targetRay
                        }
                    }, {
                        key: "getGripSpace",
                        value: function() {
                            return null === this._grip && (this._grip = new is, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new $t, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new $t), this._grip
                        }
                    }, {
                        key: "dispatchEvent",
                        value: function(e) {
                            return null !== this._targetRay && this._targetRay.dispatchEvent(e), null !== this._grip && this._grip.dispatchEvent(e), null !== this._hand && this._hand.dispatchEvent(e), this
                        }
                    }, {
                        key: "disconnect",
                        value: function(e) {
                            return this.dispatchEvent({
                                type: "disconnected",
                                data: e
                            }), null !== this._targetRay && (this._targetRay.visible = !1), null !== this._grip && (this._grip.visible = !1), null !== this._hand && (this._hand.visible = !1), this
                        }
                    }, {
                        key: "update",
                        value: function(e, t, n) {
                            var r = null,
                                i = null,
                                a = null,
                                o = this._targetRay,
                                s = this._grip,
                                l = this._hand;
                            if (e && "visible-blurred" !== t.session.visibilityState)
                                if (null !== o && null !== (r = t.getPose(e.targetRaySpace, n)) && (o.matrix.fromArray(r.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale), r.linearVelocity ? (o.hasLinearVelocity = !0, o.linearVelocity.copy(r.linearVelocity)) : o.hasLinearVelocity = !1, r.angularVelocity ? (o.hasAngularVelocity = !0, o.angularVelocity.copy(r.angularVelocity)) : o.hasAngularVelocity = !1, this.dispatchEvent(as)), l && e.hand) {
                                    a = !0;
                                    var u, c = k(e.hand.values());
                                    try {
                                        for (c.s(); !(u = c.n()).done;) {
                                            var f = u.value,
                                                d = t.getJointPose(f, n);
                                            if (void 0 === l.joints[f.jointName]) {
                                                var h = new is;
                                                h.matrixAutoUpdate = !1, h.visible = !1, l.joints[f.jointName] = h, l.add(h)
                                            }
                                            var p = l.joints[f.jointName];
                                            null !== d && (p.matrix.fromArray(d.transform.matrix), p.matrix.decompose(p.position, p.rotation, p.scale), p.jointRadius = d.radius), p.visible = null !== d
                                        }
                                    } catch (y) {
                                        c.e(y)
                                    } finally {
                                        c.f()
                                    }
                                    var v = l.joints["index-finger-tip"],
                                        m = l.joints["thumb-tip"],
                                        g = v.position.distanceTo(m.position);
                                    l.inputState.pinching && g > .025 ? (l.inputState.pinching = !1, this.dispatchEvent({
                                        type: "pinchend",
                                        handedness: e.handedness,
                                        target: this
                                    })) : !l.inputState.pinching && g <= .015 && (l.inputState.pinching = !0, this.dispatchEvent({
                                        type: "pinchstart",
                                        handedness: e.handedness,
                                        target: this
                                    }))
                                } else null !== s && e.gripSpace && null !== (i = t.getPose(e.gripSpace, n)) && (s.matrix.fromArray(i.transform.matrix), s.matrix.decompose(s.position, s.rotation, s.scale), i.linearVelocity ? (s.hasLinearVelocity = !0, s.linearVelocity.copy(i.linearVelocity)) : s.hasLinearVelocity = !1, i.angularVelocity ? (s.hasAngularVelocity = !0, s.angularVelocity.copy(i.angularVelocity)) : s.hasAngularVelocity = !1);
                            return null !== o && (o.visible = null !== r), null !== s && (s.visible = null !== i), null !== l && (l.visible = null !== a), this
                        }
                    }]), e
                }(),
                ss = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        d(this, n);
                        var a = b(i = t.call(this)),
                            o = e.state,
                            s = null,
                            l = 1,
                            u = null,
                            c = "local-floor",
                            f = null,
                            h = null,
                            p = null,
                            v = null,
                            m = null,
                            g = [],
                            y = new Map,
                            x = new li;
                        x.layers.enable(1), x.viewport = new qt;
                        var _ = new li;
                        _.layers.enable(2), _.viewport = new qt;
                        var w = [x, _],
                            S = new rs;
                        S.layers.enable(1), S.layers.enable(2);
                        var M = null,
                            k = null;

                        function E(e) {
                            var t = y.get(e.inputSource);
                            t && t.dispatchEvent({
                                type: e.type,
                                data: e.inputSource
                            })
                        }

                        function T() {
                            y.forEach((function(e, t) {
                                e.disconnect(t)
                            })), y.clear(), M = null, k = null, o.bindXRFramebuffer(null), e.setRenderTarget(e.getRenderTarget()), N.stop(), a.isPresenting = !1, a.dispatchEvent({
                                type: "sessionend"
                            })
                        }

                        function L(e) {
                            for (var t = s.inputSources, n = 0; n < g.length; n++) y.set(t[n], g[n]);
                            for (var r = 0; r < e.removed.length; r++) {
                                var i = e.removed[r],
                                    a = y.get(i);
                                a && (a.dispatchEvent({
                                    type: "disconnected",
                                    data: i
                                }), y.delete(i))
                            }
                            for (var o = 0; o < e.added.length; o++) {
                                var l = e.added[o],
                                    u = y.get(l);
                                u && u.dispatchEvent({
                                    type: "connected",
                                    data: l
                                })
                            }
                        }
                        i.cameraAutoUpdate = !0, i.enabled = !1, i.isPresenting = !1, i.getController = function(e) {
                            var t = g[e];
                            return void 0 === t && (t = new os, g[e] = t), t.getTargetRaySpace()
                        }, i.getControllerGrip = function(e) {
                            var t = g[e];
                            return void 0 === t && (t = new os, g[e] = t), t.getGripSpace()
                        }, i.getHand = function(e) {
                            var t = g[e];
                            return void 0 === t && (t = new os, g[e] = t), t.getHandSpace()
                        }, i.setFramebufferScaleFactor = function(e) {
                            l = e, !0 === a.isPresenting && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")
                        }, i.setReferenceSpaceType = function(e) {
                            c = e, !0 === a.isPresenting && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")
                        }, i.getReferenceSpace = function() {
                            return u
                        }, i.getSession = function() {
                            return s
                        }, i.setSession = function() {
                            var e, t = (e = De().mark((function e(t) {
                                var n, i, o, f, d;
                                return De().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (null === (s = t)) {
                                                e.next = 22;
                                                break
                                            }
                                            if (s.addEventListener("select", E), s.addEventListener("selectstart", E), s.addEventListener("selectend", E), s.addEventListener("squeeze", E), s.addEventListener("squeezestart", E), s.addEventListener("squeezeend", E), s.addEventListener("end", T), s.addEventListener("inputsourceschange", L), !0 === (n = r.getContextAttributes()).xrCompatible) {
                                                e.next = 14;
                                                break
                                            }
                                            return e.next = 14, r.makeXRCompatible();
                                        case 14:
                                            return void 0 === s.renderState.layers ? (i = {
                                                antialias: n.antialias,
                                                alpha: n.alpha,
                                                depth: n.depth,
                                                stencil: n.stencil,
                                                framebufferScaleFactor: l
                                            }, m = new XRWebGLLayer(s, r, i), s.updateRenderState({
                                                baseLayer: m
                                            })) : (o = 0, n.antialias ? (f = {
                                                antialias: !0,
                                                alpha: n.alpha,
                                                depth: n.depth,
                                                stencil: n.stencil,
                                                framebufferScaleFactor: l
                                            }, m = new XRWebGLLayer(s, r, f), s.updateRenderState({
                                                layers: [m]
                                            })) : (n.depth && (o = n.stencil ? 34041 : 6402), d = {
                                                colorFormat: n.alpha ? 6408 : 6407,
                                                depthFormat: o,
                                                scaleFactor: l
                                            }, h = new XRWebGLBinding(s, r), v = h.createProjectionLayer(d), p = r.createFramebuffer(), s.updateRenderState({
                                                layers: [v]
                                            }))), e.next = 17, s.requestReferenceSpace(c);
                                        case 17:
                                            u = e.sent, N.setContext(s), N.start(), a.isPresenting = !0, a.dispatchEvent({
                                                type: "sessionstart"
                                            });
                                        case 22:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })), function() {
                                var t = this,
                                    n = arguments;
                                return new Promise((function(r, i) {
                                    var a = e.apply(t, n);

                                    function o(e) {
                                        Fe(a, r, i, o, s, "next", e)
                                    }

                                    function s(e) {
                                        Fe(a, r, i, o, s, "throw", e)
                                    }
                                    o(void 0)
                                }))
                            });
                            return function(e) {
                                return t.apply(this, arguments)
                            }
                        }();
                        var A = new $t,
                            C = new $t;

                        function P(e, t) {
                            null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix), e.matrixWorldInverse.copy(e.matrixWorld).invert()
                        }
                        i.updateCamera = function(e) {
                            if (null !== s) {
                                S.near = _.near = x.near = e.near, S.far = _.far = x.far = e.far, M === S.near && k === S.far || (s.updateRenderState({
                                    depthNear: S.near,
                                    depthFar: S.far
                                }), M = S.near, k = S.far);
                                var t = e.parent,
                                    n = S.cameras;
                                P(S, t);
                                for (var r = 0; r < n.length; r++) P(n[r], t);
                                S.matrixWorld.decompose(S.position, S.quaternion, S.scale), e.position.copy(S.position), e.quaternion.copy(S.quaternion), e.scale.copy(S.scale), e.matrix.copy(S.matrix), e.matrixWorld.copy(S.matrixWorld);
                                for (var i = e.children, a = 0, o = i.length; a < o; a++) i[a].updateMatrixWorld(!0);
                                2 === n.length ? function(e, t, n) {
                                    A.setFromMatrixPosition(t.matrixWorld), C.setFromMatrixPosition(n.matrixWorld);
                                    var r = A.distanceTo(C),
                                        i = t.projectionMatrix.elements,
                                        a = n.projectionMatrix.elements,
                                        o = i[14] / (i[10] - 1),
                                        s = i[14] / (i[10] + 1),
                                        l = (i[9] + 1) / i[5],
                                        u = (i[9] - 1) / i[5],
                                        c = (i[8] - 1) / i[0],
                                        f = (a[8] + 1) / a[0],
                                        d = o * c,
                                        h = o * f,
                                        p = r / (-c + f),
                                        v = p * -c;
                                    t.matrixWorld.decompose(e.position, e.quaternion, e.scale), e.translateX(v), e.translateZ(p), e.matrixWorld.compose(e.position, e.quaternion, e.scale), e.matrixWorldInverse.copy(e.matrixWorld).invert();
                                    var m = o + p,
                                        g = s + p,
                                        y = d - v,
                                        x = h + (r - v),
                                        b = l * s / g * m,
                                        _ = u * s / g * m;
                                    e.projectionMatrix.makePerspective(y, x, b, _, m, g)
                                }(S, x, _) : S.projectionMatrix.copy(x.projectionMatrix)
                            }
                        }, i.getCamera = function() {
                            return S
                        }, i.getFoveation = function() {
                            return null !== v ? v.fixedFoveation : null !== m ? m.fixedFoveation : void 0
                        }, i.setFoveation = function(e) {
                            null !== v && (v.fixedFoveation = e), null !== m && void 0 !== m.fixedFoveation && (m.fixedFoveation = e)
                        };
                        var R = null;
                        var N = new bi;
                        return N.setAnimationLoop((function(e, t) {
                            if (null !== (f = t.getViewerPose(u))) {
                                var n = f.views;
                                null !== m && o.bindXRFramebuffer(m.framebuffer);
                                var i = !1;
                                n.length !== S.cameras.length && (S.cameras.length = 0, i = !0);
                                for (var a = 0; a < n.length; a++) {
                                    var l = n[a],
                                        c = null;
                                    if (null !== m) c = m.getViewport(l);
                                    else {
                                        var d = h.getViewSubImage(v, l);
                                        o.bindXRFramebuffer(p), void 0 !== d.depthStencilTexture && r.framebufferTexture2D(36160, 36096, 3553, d.depthStencilTexture, 0), r.framebufferTexture2D(36160, 36064, 3553, d.colorTexture, 0), c = d.viewport
                                    }
                                    var y = w[a];
                                    y.matrix.fromArray(l.transform.matrix), y.projectionMatrix.fromArray(l.projectionMatrix), y.viewport.set(c.x, c.y, c.width, c.height), 0 === a && S.matrix.copy(y.matrix), !0 === i && S.cameras.push(y)
                                }
                            }
                            for (var x = s.inputSources, b = 0; b < g.length; b++) {
                                var _ = g[b],
                                    M = x[b];
                                _.update(M, t, u)
                            }
                            R && R(e, t)
                        })), i.setAnimationLoop = function(e) {
                            R = e
                        }, i.dispose = function() {}, i
                    }
                    return p(n)
                }(Lt);

            function ls(e) {
                function t(t, n) {
                    t.opacity.value = n.opacity, n.color && t.diffuse.value.copy(n.color), n.emissive && t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity), n.map && (t.map.value = n.map), n.alphaMap && (t.alphaMap.value = n.alphaMap), n.specularMap && (t.specularMap.value = n.specularMap);
                    var r, i, a = e.get(n).envMap;
                    if (a) {
                        t.envMap.value = a, t.flipEnvMap.value = a.isCubeTexture && !1 === a.isRenderTargetTexture ? -1 : 1, t.reflectivity.value = n.reflectivity, t.refractionRatio.value = n.refractionRatio;
                        var o = e.get(a).__maxMipLevel;
                        void 0 !== o && (t.maxMipLevel.value = o)
                    }
                    n.lightMap && (t.lightMap.value = n.lightMap, t.lightMapIntensity.value = n.lightMapIntensity), n.aoMap && (t.aoMap.value = n.aoMap, t.aoMapIntensity.value = n.aoMapIntensity), n.map ? r = n.map : n.specularMap ? r = n.specularMap : n.displacementMap ? r = n.displacementMap : n.normalMap ? r = n.normalMap : n.bumpMap ? r = n.bumpMap : n.roughnessMap ? r = n.roughnessMap : n.metalnessMap ? r = n.metalnessMap : n.alphaMap ? r = n.alphaMap : n.emissiveMap ? r = n.emissiveMap : n.clearcoatMap ? r = n.clearcoatMap : n.clearcoatNormalMap ? r = n.clearcoatNormalMap : n.clearcoatRoughnessMap ? r = n.clearcoatRoughnessMap : n.specularIntensityMap ? r = n.specularIntensityMap : n.specularTintMap && (r = n.specularTintMap), void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), t.uvTransform.value.copy(r.matrix)), n.aoMap ? i = n.aoMap : n.lightMap && (i = n.lightMap), void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture), !0 === i.matrixAutoUpdate && i.updateMatrix(), t.uv2Transform.value.copy(i.matrix))
                }

                function n(t, n) {
                    t.roughness.value = n.roughness, t.metalness.value = n.metalness, n.roughnessMap && (t.roughnessMap.value = n.roughnessMap), n.metalnessMap && (t.metalnessMap.value = n.metalnessMap), n.emissiveMap && (t.emissiveMap.value = n.emissiveMap), n.bumpMap && (t.bumpMap.value = n.bumpMap, t.bumpScale.value = n.bumpScale, 1 === n.side && (t.bumpScale.value *= -1)), n.normalMap && (t.normalMap.value = n.normalMap, t.normalScale.value.copy(n.normalScale), 1 === n.side && t.normalScale.value.negate()), n.displacementMap && (t.displacementMap.value = n.displacementMap, t.displacementScale.value = n.displacementScale, t.displacementBias.value = n.displacementBias), e.get(n).envMap && (t.envMapIntensity.value = n.envMapIntensity)
                }
                return {
                    refreshFogUniforms: function(e, t) {
                        e.fogColor.value.copy(t.color), t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
                    },
                    refreshMaterialUniforms: function(e, r, i, a, o) {
                        r.isMeshBasicMaterial ? t(e, r) : r.isMeshLambertMaterial ? (t(e, r), function(e, t) {
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
                        }(e, r)) : r.isMeshToonMaterial ? (t(e, r), function(e, t) {
                            t.gradientMap && (e.gradientMap.value = t.gradientMap);
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshPhongMaterial ? (t(e, r), function(e, t) {
                            e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 1e-4), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshStandardMaterial ? (t(e, r), r.isMeshPhysicalMaterial ? function(e, t, r) {
                            n(e, t), e.reflectivity.value = t.reflectivity, e.clearcoat.value = t.clearcoat, e.clearcoatRoughness.value = t.clearcoatRoughness, t.sheen && e.sheen.value.copy(t.sheen);
                            t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap);
                            t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap);
                            t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, 1 === t.side && e.clearcoatNormalScale.value.negate());
                            e.transmission.value = t.transmission, t.transmissionMap && (e.transmissionMap.value = t.transmissionMap);
                            t.transmission > 0 && (e.transmissionSamplerMap.value = r.texture, e.transmissionSamplerSize.value.set(r.width, r.height));
                            e.thickness.value = t.thickness, t.thicknessMap && (e.thicknessMap.value = t.thicknessMap);
                            e.attenuationDistance.value = t.attenuationDistance, e.attenuationTint.value.copy(t.attenuationTint), e.specularIntensity.value = t.specularIntensity, e.specularTint.value.copy(t.specularTint), t.specularIntensityMap && (e.specularIntensityMap.value = t.specularIntensityMap);
                            t.specularTintMap && (e.specularTintMap.value = t.specularTintMap)
                        }(e, r, o) : n(e, r)) : r.isMeshMatcapMaterial ? (t(e, r), function(e, t) {
                            t.matcap && (e.matcap.value = t.matcap);
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshDepthMaterial ? (t(e, r), function(e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshDistanceMaterial ? (t(e, r), function(e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
                            e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance
                        }(e, r)) : r.isMeshNormalMaterial ? (t(e, r), function(e, t) {
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
                            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isLineBasicMaterial ? (function(e, t) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity
                        }(e, r), r.isLineDashedMaterial && function(e, t) {
                            e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
                        }(e, r)) : r.isPointsMaterial ? function(e, t, n, r) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.size.value = t.size * n, e.scale.value = .5 * r, t.map && (e.map.value = t.map);
                            t.alphaMap && (e.alphaMap.value = t.alphaMap);
                            var i;
                            t.map ? i = t.map : t.alphaMap && (i = t.alphaMap);
                            void 0 !== i && (!0 === i.matrixAutoUpdate && i.updateMatrix(), e.uvTransform.value.copy(i.matrix))
                        }(e, r, i, a) : r.isSpriteMaterial ? function(e, t) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.rotation.value = t.rotation, t.map && (e.map.value = t.map);
                            t.alphaMap && (e.alphaMap.value = t.alphaMap);
                            var n;
                            t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
                            void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix))
                        }(e, r) : r.isShadowMaterial ? (e.color.value.copy(r.color), e.opacity.value = r.opacity) : r.isShaderMaterial && (r.uniformsNeedUpdate = !1)
                    }
                }
            }

            function us() {
                var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                return e.style.display = "block", e
            }

            function cs() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = void 0 !== e.canvas ? e.canvas : us(),
                    n = void 0 !== e.context ? e.context : null,
                    r = void 0 !== e.alpha && e.alpha,
                    i = void 0 === e.depth || e.depth,
                    a = void 0 === e.stencil || e.stencil,
                    o = void 0 !== e.antialias && e.antialias,
                    s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
                    l = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
                    u = void 0 !== e.powerPreference ? e.powerPreference : "default",
                    c = void 0 !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat,
                    f = null,
                    d = null,
                    h = [],
                    p = [];
                this.domElement = t, this.debug = {
                    checkShaderErrors: !0
                }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.outputEncoding = bt, this.physicallyCorrectLights = !1, this.toneMapping = 0, this.toneMappingExposure = 1;
                var v = this,
                    m = !1,
                    g = 0,
                    y = 0,
                    x = null,
                    b = -1,
                    _ = null,
                    w = new qt,
                    S = new qt,
                    M = null,
                    k = t.width,
                    E = t.height,
                    T = 1,
                    L = null,
                    A = null,
                    C = new qt(0, 0, k, E),
                    P = new qt(0, 0, k, E),
                    R = !1,
                    N = [],
                    I = new xi,
                    z = !1,
                    O = !1,
                    D = null,
                    F = new An,
                    B = new $t,
                    U = {
                        background: null,
                        fog: null,
                        environment: null,
                        overrideMaterial: null,
                        isScene: !0
                    };

                function H() {
                    return null === x ? T : 1
                }
                var V, G, W, j, q, X, Y, Z, J, $, Q, K, ee, te, ne, re, ie, ae, oe, se, le, ue, ce, fe = n;

                function de(e, n) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r],
                            a = t.getContext(i, n);
                        if (null !== a) return a
                    }
                    return null
                }
                try {
                    var he = {
                        alpha: r,
                        depth: i,
                        stencil: a,
                        antialias: o,
                        premultipliedAlpha: s,
                        preserveDrawingBuffer: l,
                        powerPreference: u,
                        failIfMajorPerformanceCaveat: c
                    };
                    if (t.addEventListener("webglcontextlost", ge, !1), t.addEventListener("webglcontextrestored", ye, !1), null === fe) {
                        var pe = ["webgl2", "webgl", "experimental-webgl"];
                        if (!0 === v.isWebGL1Renderer && pe.shift(), null === (fe = de(pe, he))) throw de(pe) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.")
                    }
                    void 0 === fe.getShaderPrecisionFormat && (fe.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    })
                } catch (De) {
                    throw console.error("THREE.WebGLRenderer: " + De.message), De
                }

                function ve() {
                    V = new oa(fe), G = new Ai(fe, V, e), V.init(G), ue = new ns(fe, V, G), W = new es(fe, V, G), N[0] = 1029, j = new ua(fe), q = new Uo, X = new ts(fe, V, W, q, G, ue, j), Y = new Pi(v), Z = new aa(v), J = new _i(fe, G), ce = new Ti(fe, V, J, G), $ = new sa(fe, J, j, ce), Q = new ha(fe, $, J, j), oe = new da(fe), re = new Ci(q), K = new Bo(v, Y, Z, V, G, ce, re), ee = new ls(q), te = new Wo(q), ne = new Jo(V, G), ae = new Ei(v, Y, W, Q, s), ie = new Ko(v, Q, G), se = new Li(fe, V, j, G), le = new la(fe, V, j, G), j.programs = K.programs, v.capabilities = G, v.extensions = V, v.properties = q, v.renderLists = te, v.shadowMap = ie, v.state = W, v.info = j
                }
                ve();
                var me = new ss(v, fe);

                function ge(e) {
                    e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), m = !0
                }

                function ye() {
                    console.log("THREE.WebGLRenderer: Context Restored."), m = !1;
                    var e = j.autoReset,
                        t = ie.enabled,
                        n = ie.autoUpdate,
                        r = ie.needsUpdate,
                        i = ie.type;
                    ve(), j.autoReset = e, ie.enabled = t, ie.autoUpdate = n, ie.needsUpdate = r, ie.type = i
                }

                function xe(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", xe), be(t)
                }

                function be(e) {
                    _e(e), q.remove(e)
                }

                function _e(e) {
                    var t = q.get(e).programs;
                    void 0 !== t && t.forEach((function(e) {
                        K.releaseProgram(e)
                    }))
                }

                function we(e, t) {
                    e.render((function(e) {
                        v.renderBufferImmediate(e, t)
                    }))
                }
                this.xr = me, this.getContext = function() {
                    return fe
                }, this.getContextAttributes = function() {
                    return fe.getContextAttributes()
                }, this.forceContextLoss = function() {
                    var e = V.get("WEBGL_lose_context");
                    e && e.loseContext()
                }, this.forceContextRestore = function() {
                    var e = V.get("WEBGL_lose_context");
                    e && e.restoreContext()
                }, this.getPixelRatio = function() {
                    return T
                }, this.setPixelRatio = function(e) {
                    void 0 !== e && (T = e, this.setSize(k, E, !1))
                }, this.getSize = function(e) {
                    return e.set(k, E)
                }, this.setSize = function(e, n, r) {
                    me.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (k = e, E = n, t.width = Math.floor(e * T), t.height = Math.floor(n * T), !1 !== r && (t.style.width = e + "px", t.style.height = n + "px"), this.setViewport(0, 0, e, n))
                }, this.getDrawingBufferSize = function(e) {
                    return e.set(k * T, E * T).floor()
                }, this.setDrawingBufferSize = function(e, n, r) {
                    k = e, E = n, T = r, t.width = Math.floor(e * r), t.height = Math.floor(n * r), this.setViewport(0, 0, e, n)
                }, this.getCurrentViewport = function(e) {
                    return e.copy(w)
                }, this.getViewport = function(e) {
                    return e.copy(C)
                }, this.setViewport = function(e, t, n, r) {
                    e.isVector4 ? C.set(e.x, e.y, e.z, e.w) : C.set(e, t, n, r), W.viewport(w.copy(C).multiplyScalar(T).floor())
                }, this.getScissor = function(e) {
                    return e.copy(P)
                }, this.setScissor = function(e, t, n, r) {
                    e.isVector4 ? P.set(e.x, e.y, e.z, e.w) : P.set(e, t, n, r), W.scissor(S.copy(P).multiplyScalar(T).floor())
                }, this.getScissorTest = function() {
                    return R
                }, this.setScissorTest = function(e) {
                    W.setScissorTest(R = e)
                }, this.setOpaqueSort = function(e) {
                    L = e
                }, this.setTransparentSort = function(e) {
                    A = e
                }, this.getClearColor = function(e) {
                    return e.copy(ae.getClearColor())
                }, this.setClearColor = function() {
                    ae.setClearColor.apply(ae, arguments)
                }, this.getClearAlpha = function() {
                    return ae.getClearAlpha()
                }, this.setClearAlpha = function() {
                    ae.setClearAlpha.apply(ae, arguments)
                }, this.clear = function(e, t, n) {
                    var r = 0;
                    (void 0 === e || e) && (r |= 16384), (void 0 === t || t) && (r |= 256), (void 0 === n || n) && (r |= 1024), fe.clear(r)
                }, this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }, this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }, this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }, this.dispose = function() {
                    t.removeEventListener("webglcontextlost", ge, !1), t.removeEventListener("webglcontextrestored", ye, !1), te.dispose(), ne.dispose(), q.dispose(), Y.dispose(), Z.dispose(), Q.dispose(), ce.dispose(), me.dispose(), me.removeEventListener("sessionstart", ke), me.removeEventListener("sessionend", Ee), D && (D.dispose(), D = null), Te.stop()
                }, this.renderBufferImmediate = function(e, t) {
                    ce.initAttributes();
                    var n = q.get(e);
                    e.hasPositions && !n.position && (n.position = fe.createBuffer()), e.hasNormals && !n.normal && (n.normal = fe.createBuffer()), e.hasUvs && !n.uv && (n.uv = fe.createBuffer()), e.hasColors && !n.color && (n.color = fe.createBuffer());
                    var r = t.getAttributes();
                    e.hasPositions && (fe.bindBuffer(34962, n.position), fe.bufferData(34962, e.positionArray, 35048), ce.enableAttribute(r.position), fe.vertexAttribPointer(r.position, 3, 5126, !1, 0, 0)), e.hasNormals && (fe.bindBuffer(34962, n.normal), fe.bufferData(34962, e.normalArray, 35048), ce.enableAttribute(r.normal), fe.vertexAttribPointer(r.normal, 3, 5126, !1, 0, 0)), e.hasUvs && (fe.bindBuffer(34962, n.uv), fe.bufferData(34962, e.uvArray, 35048), ce.enableAttribute(r.uv), fe.vertexAttribPointer(r.uv, 2, 5126, !1, 0, 0)), e.hasColors && (fe.bindBuffer(34962, n.color), fe.bufferData(34962, e.colorArray, 35048), ce.enableAttribute(r.color), fe.vertexAttribPointer(r.color, 3, 5126, !1, 0, 0)), ce.disableUnusedAttributes(), fe.drawArrays(4, 0, e.count), e.count = 0
                }, this.renderBufferDirect = function(e, t, n, r, i, a) {
                    null === t && (t = U);
                    var o = i.isMesh && i.matrixWorld.determinant() < 0,
                        s = Ie(e, t, r, i);
                    W.setMaterial(r, o);
                    var l = n.index,
                        u = n.attributes.position;
                    if (null === l) {
                        if (void 0 === u || 0 === u.count) return
                    } else if (0 === l.count) return;
                    var c, f = 1;
                    !0 === r.wireframe && (l = $.getWireframeAttribute(n), f = 2), void 0 === n.morphAttributes.position && void 0 === n.morphAttributes.normal || oe.update(i, n, r, s), ce.setup(i, r, s, n, l);
                    var d = se;
                    null !== l && (c = J.get(l), (d = le).setIndex(c));
                    var h = null !== l ? l.count : u.count,
                        p = n.drawRange.start * f,
                        v = n.drawRange.count * f,
                        m = null !== a ? a.start * f : 0,
                        g = null !== a ? a.count * f : 1 / 0,
                        y = Math.max(p, m),
                        x = Math.min(h, p + v, m + g) - 1,
                        b = Math.max(0, x - y + 1);
                    if (0 !== b) {
                        if (i.isMesh) !0 === r.wireframe ? (W.setLineWidth(r.wireframeLinewidth * H()), d.setMode(1)) : d.setMode(4);
                        else if (i.isLine) {
                            var _ = r.linewidth;
                            void 0 === _ && (_ = 1), W.setLineWidth(_ * H()), i.isLineSegments ? d.setMode(1) : i.isLineLoop ? d.setMode(2) : d.setMode(3)
                        } else i.isPoints ? d.setMode(0) : i.isSprite && d.setMode(4);
                        if (i.isInstancedMesh) d.renderInstances(y, b, i.count);
                        else if (n.isInstancedBufferGeometry) {
                            var w = Math.min(n.instanceCount, n._maxInstanceCount);
                            d.renderInstances(y, b, w)
                        } else d.render(y, b)
                    }
                }, this.compile = function(e, t) {
                    (d = ne.get(e)).init(), e.traverseVisible((function(e) {
                        e.isLight && e.layers.test(t.layers) && (d.pushLight(e), e.castShadow && d.pushShadow(e))
                    })), d.setupLights(), e.traverse((function(t) {
                        var n = t.material;
                        if (n)
                            if (Array.isArray(n))
                                for (var r = 0; r < n.length; r++) {
                                    Re(n[r], e, t)
                                } else Re(n, e, t)
                    }))
                };
                var Se = null;

                function Me(e) {
                    Se && Se(e)
                }

                function ke() {
                    Te.stop()
                }

                function Ee() {
                    Te.start()
                }
                var Te = new bi;

                function Le(e, t, n, r) {
                    if (!1 !== e.visible) {
                        if (e.layers.test(t.layers))
                            if (e.isGroup) n = e.renderOrder;
                            else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
                        else if (e.isLight) d.pushLight(e), e.castShadow && d.pushShadow(e);
                        else if (e.isSprite) {
                            if (!e.frustumCulled || I.intersectsSprite(e)) {
                                r && B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);
                                var i = Q.update(e),
                                    a = e.material;
                                a.visible && f.push(e, i, a, n, B.z, null)
                            }
                        } else if (e.isImmediateRenderObject) r && B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F), f.push(e, null, e.material, n, B.z, null);
                        else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== j.render.frame && (e.skeleton.update(), e.skeleton.frame = j.render.frame), !e.frustumCulled || I.intersectsObject(e))) {
                            r && B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(F);
                            var o = Q.update(e),
                                s = e.material;
                            if (Array.isArray(s))
                                for (var l = o.groups, u = 0, c = l.length; u < c; u++) {
                                    var h = l[u],
                                        p = s[h.materialIndex];
                                    p && p.visible && f.push(e, o, p, n, B.z, h)
                                } else s.visible && f.push(e, o, s, n, B.z, null)
                        }
                        for (var v = e.children, m = 0, g = v.length; m < g; m++) Le(v[m], t, n, r)
                    }
                }

                function Ae(e, t, n, r) {
                    if (null === D) {
                        var i = !0 === o && !0 === G.isWebGL2;
                        D = new(i ? Zt : Xt)(1024, 1024, {
                            generateMipmaps: !0,
                            type: null !== ue.convert(ot) ? ot : nt,
                            minFilter: tt,
                            magFilter: $e,
                            wrapS: Ze,
                            wrapT: Ze
                        })
                    }
                    var a = v.getRenderTarget();
                    v.setRenderTarget(D), v.clear();
                    var s = v.toneMapping;
                    v.toneMapping = 0, Ce(e, n, r), v.toneMapping = s, X.updateMultisampleRenderTarget(D), X.updateRenderTargetMipmap(D), v.setRenderTarget(a), Ce(t, n, r)
                }

                function Ce(e, t, n) {
                    var r = !0 === t.isScene ? t.overrideMaterial : null;
                    if (n.isArrayCamera)
                        for (var i = n.cameras, a = 0, o = i.length; a < o; a++) {
                            var s = i[a];
                            W.viewport(w.copy(s.viewport)), d.setupLightsView(s);
                            for (var l = 0, u = e.length; l < u; l++) {
                                var c = e[l],
                                    f = c.object,
                                    h = c.geometry,
                                    p = null === r ? c.material : r,
                                    v = c.group;
                                f.layers.test(s.layers) && Pe(f, t, s, h, p, v)
                            }
                        } else
                            for (var m = 0, g = e.length; m < g; m++) {
                                var y = e[m];
                                Pe(y.object, t, n, y.geometry, null === r ? y.material : r, y.group)
                            }
                }

                function Pe(e, t, n, r, i, a) {
                    if (e.onBeforeRender(v, t, n, r, i, a), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {
                        var o = Ie(n, t, i, e);
                        W.setMaterial(i), ce.reset(), we(e, o)
                    } else !0 === i.transparent && 2 === i.side ? (i.side = 1, i.needsUpdate = !0, v.renderBufferDirect(n, t, r, i, e, a), i.side = 0, i.needsUpdate = !0, v.renderBufferDirect(n, t, r, i, e, a), i.side = 2) : v.renderBufferDirect(n, t, r, i, e, a);
                    e.onAfterRender(v, t, n, r, i, a)
                }

                function Re(e, t, n) {
                    !0 !== t.isScene && (t = U);
                    var r = q.get(e),
                        i = d.state.lights,
                        a = d.state.shadowsArray,
                        o = i.state.version,
                        s = K.getParameters(e, i.state, a, t, n),
                        l = K.getProgramCacheKey(s),
                        u = r.programs;
                    r.environment = e.isMeshStandardMaterial ? t.environment : null, r.fog = t.fog, r.envMap = (e.isMeshStandardMaterial ? Z : Y).get(e.envMap || r.environment), void 0 === u && (e.addEventListener("dispose", xe), u = new Map, r.programs = u);
                    var c = u.get(l);
                    if (void 0 !== c) {
                        if (r.currentProgram === c && r.lightsStateVersion === o) return Ne(e, s), c
                    } else s.uniforms = K.getUniforms(e), e.onBuild(s, v), e.onBeforeCompile(s, v), c = K.acquireProgram(s, l), u.set(l, c), r.uniforms = s.uniforms;
                    var f = r.uniforms;
                    (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (f.clippingPlanes = re.uniform), Ne(e, s), r.needsLights = Oe(e), r.lightsStateVersion = o, r.needsLights && (f.ambientLightColor.value = i.state.ambient, f.lightProbe.value = i.state.probe, f.directionalLights.value = i.state.directional, f.directionalLightShadows.value = i.state.directionalShadow, f.spotLights.value = i.state.spot, f.spotLightShadows.value = i.state.spotShadow, f.rectAreaLights.value = i.state.rectArea, f.ltc_1.value = i.state.rectAreaLTC1, f.ltc_2.value = i.state.rectAreaLTC2, f.pointLights.value = i.state.point, f.pointLightShadows.value = i.state.pointShadow, f.hemisphereLights.value = i.state.hemi, f.directionalShadowMap.value = i.state.directionalShadowMap, f.directionalShadowMatrix.value = i.state.directionalShadowMatrix, f.spotShadowMap.value = i.state.spotShadowMap, f.spotShadowMatrix.value = i.state.spotShadowMatrix, f.pointShadowMap.value = i.state.pointShadowMap, f.pointShadowMatrix.value = i.state.pointShadowMatrix);
                    var h = c.getUniforms(),
                        p = yo.seqWithValue(h.seq, f);
                    return r.currentProgram = c, r.uniformsList = p, c
                }

                function Ne(e, t) {
                    var n = q.get(e);
                    n.outputEncoding = t.outputEncoding, n.instancing = t.instancing, n.skinning = t.skinning, n.morphTargets = t.morphTargets, n.morphNormals = t.morphNormals, n.numClippingPlanes = t.numClippingPlanes, n.numIntersection = t.numClipIntersection, n.vertexAlphas = t.vertexAlphas, n.vertexTangents = t.vertexTangents
                }

                function Ie(e, t, n, r) {
                    !0 !== t.isScene && (t = U), X.resetTextureUnits();
                    var i = t.fog,
                        a = n.isMeshStandardMaterial ? t.environment : null,
                        o = null === x ? v.outputEncoding : x.texture.encoding,
                        s = (n.isMeshStandardMaterial ? Z : Y).get(n.envMap || a),
                        l = !0 === n.vertexColors && r.geometry && r.geometry.attributes.color && 4 === r.geometry.attributes.color.itemSize,
                        u = r.geometry && r.geometry.attributes.tangent,
                        c = r.geometry && r.geometry.morphAttributes.position,
                        f = r.geometry && r.geometry.morphAttributes.normal,
                        h = q.get(n),
                        p = d.state.lights;
                    if (!0 === z && (!0 === O || e !== _)) {
                        var m = e === _ && n.id === b;
                        re.setState(n, e, m)
                    }
                    var g = !1;
                    n.version === h.__version ? h.needsLights && h.lightsStateVersion !== p.state.version || h.outputEncoding !== o || r.isInstancedMesh && !1 === h.instancing ? g = !0 : r.isInstancedMesh || !0 !== h.instancing ? r.isSkinnedMesh && !1 === h.skinning ? g = !0 : r.isSkinnedMesh || !0 !== h.skinning ? h.envMap !== s || n.fog && h.fog !== i ? g = !0 : void 0 === h.numClippingPlanes || h.numClippingPlanes === re.numPlanes && h.numIntersection === re.numIntersection ? (h.vertexAlphas !== l || h.vertexTangents !== u || h.morphTargets !== c || h.morphNormals !== f) && (g = !0) : g = !0 : g = !0 : g = !0 : (g = !0, h.__version = n.version);
                    var y = h.currentProgram;
                    !0 === g && (y = Re(n, t, r));
                    var w = !1,
                        S = !1,
                        M = !1,
                        k = y.getUniforms(),
                        L = h.uniforms;
                    if (W.useProgram(y.program) && (w = !0, S = !0, M = !0), n.id !== b && (b = n.id, S = !0), w || _ !== e) {
                        if (k.setValue(fe, "projectionMatrix", e.projectionMatrix), G.logarithmicDepthBuffer && k.setValue(fe, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), _ !== e && (_ = e, S = !0, M = !0), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) {
                            var A = k.map.cameraPosition;
                            void 0 !== A && A.setValue(fe, B.setFromMatrixPosition(e.matrixWorld))
                        }(n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && k.setValue(fe, "isOrthographic", !0 === e.isOrthographicCamera), (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.isShadowMaterial || r.isSkinnedMesh) && k.setValue(fe, "viewMatrix", e.matrixWorldInverse)
                    }
                    if (r.isSkinnedMesh) {
                        k.setOptional(fe, r, "bindMatrix"), k.setOptional(fe, r, "bindMatrixInverse");
                        var C = r.skeleton;
                        C && (G.floatVertexTextures ? (null === C.boneTexture && C.computeBoneTexture(), k.setValue(fe, "boneTexture", C.boneTexture, X), k.setValue(fe, "boneTextureSize", C.boneTextureSize)) : k.setOptional(fe, C, "boneMatrices"))
                    }
                    return (S || h.receiveShadow !== r.receiveShadow) && (h.receiveShadow = r.receiveShadow, k.setValue(fe, "receiveShadow", r.receiveShadow)), S && (k.setValue(fe, "toneMappingExposure", v.toneMappingExposure), h.needsLights && ze(L, M), i && n.fog && ee.refreshFogUniforms(L, i), ee.refreshMaterialUniforms(L, n, T, E, D), yo.upload(fe, h.uniformsList, L, X)), n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (yo.upload(fe, h.uniformsList, L, X), n.uniformsNeedUpdate = !1), n.isSpriteMaterial && k.setValue(fe, "center", r.center), k.setValue(fe, "modelViewMatrix", r.modelViewMatrix), k.setValue(fe, "normalMatrix", r.normalMatrix), k.setValue(fe, "modelMatrix", r.matrixWorld), y
                }

                function ze(e, t) {
                    e.ambientLightColor.needsUpdate = t, e.lightProbe.needsUpdate = t, e.directionalLights.needsUpdate = t, e.directionalLightShadows.needsUpdate = t, e.pointLights.needsUpdate = t, e.pointLightShadows.needsUpdate = t, e.spotLights.needsUpdate = t, e.spotLightShadows.needsUpdate = t, e.rectAreaLights.needsUpdate = t, e.hemisphereLights.needsUpdate = t
                }

                function Oe(e) {
                    return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
                }
                Te.setAnimationLoop(Me), "undefined" !== typeof window && Te.setContext(window), this.setAnimationLoop = function(e) {
                    Se = e, me.setAnimationLoop(e), null === e ? Te.stop() : Te.start()
                }, me.addEventListener("sessionstart", ke), me.addEventListener("sessionend", Ee), this.render = function(e, t) {
                    if (void 0 === t || !0 === t.isCamera) {
                        if (!0 !== m) {
                            !0 === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), !0 === me.enabled && !0 === me.isPresenting && (!0 === me.cameraAutoUpdate && me.updateCamera(t), t = me.getCamera()), !0 === e.isScene && e.onBeforeRender(v, e, t, x), (d = ne.get(e, p.length)).init(), p.push(d), F.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), I.setFromProjectionMatrix(F), O = this.localClippingEnabled, z = re.init(this.clippingPlanes, O, t), (f = te.get(e, h.length)).init(), h.push(f), Le(e, t, 0, v.sortObjects), f.finish(), !0 === v.sortObjects && f.sort(L, A), !0 === z && re.beginShadows();
                            var n = d.state.shadowsArray;
                            ie.render(n, e, t), d.setupLights(), d.setupLightsView(t), !0 === z && re.endShadows(), !0 === this.info.autoReset && this.info.reset(), ae.render(f, e);
                            var r = f.opaque,
                                i = f.transmissive,
                                a = f.transparent;
                            r.length > 0 && Ce(r, e, t), i.length > 0 && Ae(r, i, e, t), a.length > 0 && Ce(a, e, t), null !== x && (X.updateMultisampleRenderTarget(x), X.updateRenderTargetMipmap(x)), !0 === e.isScene && e.onAfterRender(v, e, t), W.buffers.depth.setTest(!0), W.buffers.depth.setMask(!0), W.buffers.color.setMask(!0), W.setPolygonOffset(!1), ce.resetDefaultState(), b = -1, _ = null, p.pop(), d = p.length > 0 ? p[p.length - 1] : null, h.pop(), f = h.length > 0 ? h[h.length - 1] : null
                        }
                    } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
                }, this.getActiveCubeFace = function() {
                    return g
                }, this.getActiveMipmapLevel = function() {
                    return y
                }, this.getRenderTarget = function() {
                    return x
                }, this.setRenderTarget = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    x = e, g = t, y = n, e && void 0 === q.get(e).__webglFramebuffer && X.setupRenderTarget(e);
                    var r = null,
                        i = !1,
                        a = !1;
                    if (e) {
                        var o = e.texture;
                        (o.isDataTexture3D || o.isDataTexture2DArray) && (a = !0);
                        var s = q.get(e).__webglFramebuffer;
                        e.isWebGLCubeRenderTarget ? (r = s[t], i = !0) : r = e.isWebGLMultisampleRenderTarget ? q.get(e).__webglMultisampledFramebuffer : s, w.copy(e.viewport), S.copy(e.scissor), M = e.scissorTest
                    } else w.copy(C).multiplyScalar(T).floor(), S.copy(P).multiplyScalar(T).floor(), M = R;
                    var l = W.bindFramebuffer(36160, r);
                    if (l && G.drawBuffers) {
                        var u = !1;
                        if (e)
                            if (e.isWebGLMultipleRenderTargets) {
                                var c = e.texture;
                                if (N.length !== c.length || 36064 !== N[0]) {
                                    for (var f = 0, d = c.length; f < d; f++) N[f] = 36064 + f;
                                    N.length = c.length, u = !0
                                }
                            } else 1 === N.length && 36064 === N[0] || (N[0] = 36064, N.length = 1, u = !0);
                        else 1 === N.length && 1029 === N[0] || (N[0] = 1029, N.length = 1, u = !0);
                        u && (G.isWebGL2 ? fe.drawBuffers(N) : V.get("WEBGL_draw_buffers").drawBuffersWEBGL(N))
                    }
                    if (W.viewport(w), W.scissor(S), W.setScissorTest(M), i) {
                        var h = q.get(e.texture);
                        fe.framebufferTexture2D(36160, 36064, 34069 + t, h.__webglTexture, n)
                    } else if (a) {
                        var p = q.get(e.texture),
                            v = t || 0;
                        fe.framebufferTextureLayer(36160, 36064, p.__webglTexture, n || 0, v)
                    }
                }, this.readRenderTargetPixels = function(e, t, n, r, i, a, o) {
                    if (e && e.isWebGLRenderTarget) {
                        var s = q.get(e).__webglFramebuffer;
                        if (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s) {
                            W.bindFramebuffer(36160, s);
                            try {
                                var l = e.texture,
                                    u = l.format,
                                    c = l.type;
                                if (u !== ut && ue.convert(u) !== fe.getParameter(35739)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                                var f = c === ot && (V.has("EXT_color_buffer_half_float") || G.isWebGL2 && V.has("EXT_color_buffer_float"));
                                if (c !== nt && ue.convert(c) !== fe.getParameter(35738) && (c !== at || !(G.isWebGL2 || V.has("OES_texture_float") || V.has("WEBGL_color_buffer_float"))) && !f) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                                36053 === fe.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && fe.readPixels(t, n, r, i, ue.convert(u), ue.convert(c), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                            } finally {
                                var d = null !== x ? q.get(x).__webglFramebuffer : null;
                                W.bindFramebuffer(36160, d)
                            }
                        }
                    } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
                }, this.copyFramebufferToTexture = function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        r = Math.pow(2, -n),
                        i = Math.floor(t.image.width * r),
                        a = Math.floor(t.image.height * r),
                        o = ue.convert(t.format);
                    G.isWebGL2 && (6407 === o && (o = 32849), 6408 === o && (o = 32856)), X.setTexture2D(t, 0), fe.copyTexImage2D(3553, n, o, e.x, e.y, i, a, 0), W.unbindTexture()
                }, this.copyTextureToTexture = function(e, t, n) {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                        i = t.image.width,
                        a = t.image.height,
                        o = ue.convert(n.format),
                        s = ue.convert(n.type);
                    X.setTexture2D(n, 0), fe.pixelStorei(37440, n.flipY), fe.pixelStorei(37441, n.premultiplyAlpha), fe.pixelStorei(3317, n.unpackAlignment), t.isDataTexture ? fe.texSubImage2D(3553, r, e.x, e.y, i, a, o, s, t.image.data) : t.isCompressedTexture ? fe.compressedTexSubImage2D(3553, r, e.x, e.y, t.mipmaps[0].width, t.mipmaps[0].height, o, t.mipmaps[0].data) : fe.texSubImage2D(3553, r, e.x, e.y, o, s, t.image), 0 === r && n.generateMipmaps && fe.generateMipmap(3553), W.unbindTexture()
                }, this.copyTextureToTexture3D = function(e, t, n, r) {
                    var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                    if (v.isWebGL1Renderer) console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
                    else {
                        var a, o = e.max.x - e.min.x + 1,
                            s = e.max.y - e.min.y + 1,
                            l = e.max.z - e.min.z + 1,
                            u = ue.convert(r.format),
                            c = ue.convert(r.type);
                        if (r.isDataTexture3D) X.setTexture3D(r, 0), a = 32879;
                        else {
                            if (!r.isDataTexture2DArray) return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
                            X.setTexture2DArray(r, 0), a = 35866
                        }
                        fe.pixelStorei(37440, r.flipY), fe.pixelStorei(37441, r.premultiplyAlpha), fe.pixelStorei(3317, r.unpackAlignment);
                        var f = fe.getParameter(3314),
                            d = fe.getParameter(32878),
                            h = fe.getParameter(3316),
                            p = fe.getParameter(3315),
                            m = fe.getParameter(32877),
                            g = n.isCompressedTexture ? n.mipmaps[0] : n.image;
                        fe.pixelStorei(3314, g.width), fe.pixelStorei(32878, g.height), fe.pixelStorei(3316, e.min.x), fe.pixelStorei(3315, e.min.y), fe.pixelStorei(32877, e.min.z), n.isDataTexture || n.isDataTexture3D ? fe.texSubImage3D(a, i, t.x, t.y, t.z, o, s, l, u, c, g.data) : n.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), fe.compressedTexSubImage3D(a, i, t.x, t.y, t.z, o, s, l, u, g.data)) : fe.texSubImage3D(a, i, t.x, t.y, t.z, o, s, l, u, c, g), fe.pixelStorei(3314, f), fe.pixelStorei(32878, d), fe.pixelStorei(3316, h), fe.pixelStorei(3315, p), fe.pixelStorei(32877, m), 0 === i && r.generateMipmaps && fe.generateMipmap(a), W.unbindTexture()
                    }
                }, this.initTexture = function(e) {
                    X.setTexture2D(e, 0), W.unbindTexture()
                }, this.resetState = function() {
                    g = 0, y = 0, x = null, W.reset(), ce.reset()
                }, "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                    detail: this
                }))
            }
            var fs = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.apply(this, arguments)
                }
                return p(n)
            }(cs);
            fs.prototype.isWebGL1Renderer = !0;
            var ds = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 25e-5;
                    d(this, e), this.name = "", this.color = new br(t), this.density = n
                }
                return p(e, [{
                    key: "clone",
                    value: function() {
                        return new e(this.color, this.density)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            type: "FogExp2",
                            color: this.color.getHex(),
                            density: this.density
                        }
                    }
                }]), e
            }();
            ds.prototype.isFogExp2 = !0;
            var hs = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e3;
                    d(this, e), this.name = "", this.color = new br(t), this.near = n, this.far = r
                }
                return p(e, [{
                    key: "clone",
                    value: function() {
                        return new e(this.color, this.near, this.far)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            type: "Fog",
                            color: this.color.getHex(),
                            near: this.near,
                            far: this.far
                        }
                    }
                }]), e
            }();
            hs.prototype.isFog = !0;
            var ps = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return d(this, n), (e = t.call(this)).type = "Scene", e.background = null, e.environment = null, e.fog = null, e.overrideMaterial = null, e.autoUpdate = !0, "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                        detail: b(e)
                    })), e
                }
                return p(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return Ue(g(n.prototype), "copy", this).call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.environment && (this.environment = e.environment.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                        return null !== this.fog && (t.object.fog = this.fog.toJSON()), t
                    }
                }]), n
            }(er);
            ps.prototype.isScene = !0;
            var vs = function() {
                function e(t, n) {
                    d(this, e), this.array = t, this.stride = n, this.count = void 0 !== t ? t.length / n : 0, this.usage = kt, this.updateRange = {
                        offset: 0,
                        count: -1
                    }, this.version = 0, this.uuid = Nt()
                }
                return p(e, [{
                    key: "onUploadCallback",
                    value: function() {}
                }, {
                    key: "needsUpdate",
                    set: function(e) {
                        !0 === e && this.version++
                    }
                }, {
                    key: "setUsage",
                    value: function(e) {
                        return this.usage = e, this
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this
                    }
                }, {
                    key: "copyAt",
                    value: function(e, t, n) {
                        e *= this.stride, n *= t.stride;
                        for (var r = 0, i = this.stride; r < i; r++) this.array[e + r] = t.array[n + r];
                        return this
                    }
                }, {
                    key: "set",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.array.set(e, t), this
                    }
                }, {
                    key: "clone",
                    value: function(e) {
                        void 0 === e.arrayBuffers && (e.arrayBuffers = {}), void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = Nt()), void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
                        var t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),
                            n = new this.constructor(t, this.stride);
                        return n.setUsage(this.usage), n
                    }
                }, {
                    key: "onUpload",
                    value: function(e) {
                        return this.onUploadCallback = e, this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        return void 0 === e.arrayBuffers && (e.arrayBuffers = {}), void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = Nt()), void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
                            uuid: this.uuid,
                            buffer: this.array.buffer._uuid,
                            type: this.array.constructor.name,
                            stride: this.stride
                        }
                    }
                }]), e
            }();
            vs.prototype.isInterleavedBuffer = !0;
            var ms = new $t,
                gs = function() {
                    function e(t, n, r) {
                        var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                        d(this, e), this.name = "", this.data = t, this.itemSize = n, this.offset = r, this.normalized = !0 === i
                    }
                    return p(e, [{
                        key: "count",
                        get: function() {
                            return this.data.count
                        }
                    }, {
                        key: "array",
                        get: function() {
                            return this.data.array
                        }
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            this.data.needsUpdate = e
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            for (var t = 0, n = this.data.count; t < n; t++) ms.x = this.getX(t), ms.y = this.getY(t), ms.z = this.getZ(t), ms.applyMatrix4(e), this.setXYZ(t, ms.x, ms.y, ms.z);
                            return this
                        }
                    }, {
                        key: "applyNormalMatrix",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) ms.x = this.getX(t), ms.y = this.getY(t), ms.z = this.getZ(t), ms.applyNormalMatrix(e), this.setXYZ(t, ms.x, ms.y, ms.z);
                            return this
                        }
                    }, {
                        key: "transformDirection",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) ms.x = this.getX(t), ms.y = this.getY(t), ms.z = this.getZ(t), ms.transformDirection(e), this.setXYZ(t, ms.x, ms.y, ms.z);
                            return this
                        }
                    }, {
                        key: "setX",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset] = t, this
                        }
                    }, {
                        key: "setY",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset + 1] = t, this
                        }
                    }, {
                        key: "setZ",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset + 2] = t, this
                        }
                    }, {
                        key: "setW",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset + 3] = t, this
                        }
                    }, {
                        key: "getX",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset]
                        }
                    }, {
                        key: "getY",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset + 1]
                        }
                    }, {
                        key: "getZ",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset + 2]
                        }
                    }, {
                        key: "getW",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset + 3]
                        }
                    }, {
                        key: "setXY",
                        value: function(e, t, n) {
                            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this
                        }
                    }, {
                        key: "setXYZ",
                        value: function(e, t, n, r) {
                            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this
                        }
                    }, {
                        key: "setXYZW",
                        value: function(e, t, n, r, i) {
                            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this.data.array[e + 3] = i, this
                        }
                    }, {
                        key: "clone",
                        value: function(t) {
                            if (void 0 === t) {
                                console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
                                for (var n = [], r = 0; r < this.count; r++)
                                    for (var i = r * this.data.stride + this.offset, a = 0; a < this.itemSize; a++) n.push(this.data.array[i + a]);
                                return new Mr(new this.array.constructor(n), this.itemSize, this.normalized)
                            }
                            return void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}), void 0 === t.interleavedBuffers[this.data.uuid] && (t.interleavedBuffers[this.data.uuid] = this.data.clone(t)), new e(t.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized)
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            if (void 0 === e) {
                                console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
                                for (var t = [], n = 0; n < this.count; n++)
                                    for (var r = n * this.data.stride + this.offset, i = 0; i < this.itemSize; i++) t.push(this.data.array[r + i]);
                                return {
                                    itemSize: this.itemSize,
                                    type: this.array.constructor.name,
                                    array: t,
                                    normalized: this.normalized
                                }
                            }
                            return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}), void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
                                isInterleavedBufferAttribute: !0,
                                itemSize: this.itemSize,
                                data: this.data.uuid,
                                offset: this.offset,
                                normalized: this.normalized
                            }
                        }
                    }]), e
                }();
            gs.prototype.isInterleavedBufferAttribute = !0;
            var ys, xs = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "SpriteMaterial", r.color = new br(16777215), r.map = null, r.alphaMap = null, r.rotation = 0, r.sizeAttenuation = !0, r.transparent = !0, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this
                    }
                }]), n
            }(hr);
            xs.prototype.isSpriteMaterial = !0;
            var bs = new $t,
                _s = new $t,
                ws = new $t,
                Ss = new Bt,
                Ms = new Bt,
                ks = new An,
                Es = new $t,
                Ts = new $t,
                Ls = new $t,
                As = new Bt,
                Cs = new Bt,
                Ps = new Bt,
                Rs = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        if (d(this, n), (r = t.call(this)).type = "Sprite", void 0 === ys) {
                            ys = new Or;
                            var i = new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]),
                                a = new vs(i, 5);
                            ys.setIndex([0, 1, 2, 0, 2, 3]), ys.setAttribute("position", new gs(a, 3, 0, !1)), ys.setAttribute("uv", new gs(a, 2, 3, !1))
                        }
                        return r.geometry = ys, r.material = void 0 !== e ? e : new xs, r.center = new Bt(.5, .5), r
                    }
                    return p(n, [{
                        key: "raycast",
                        value: function(e, t) {
                            null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), _s.setFromMatrixScale(this.matrixWorld), ks.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), ws.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && _s.multiplyScalar(-ws.z);
                            var n, r, i = this.material.rotation;
                            0 !== i && (r = Math.cos(i), n = Math.sin(i));
                            var a = this.center;
                            Ns(Es.set(-.5, -.5, 0), ws, a, _s, n, r), Ns(Ts.set(.5, -.5, 0), ws, a, _s, n, r), Ns(Ls.set(.5, .5, 0), ws, a, _s, n, r), As.set(0, 0), Cs.set(1, 0), Ps.set(1, 1);
                            var o = e.ray.intersectTriangle(Es, Ts, Ls, !1, bs);
                            if (null !== o || (Ns(Ts.set(-.5, .5, 0), ws, a, _s, n, r), Cs.set(0, 1), null !== (o = e.ray.intersectTriangle(Es, Ls, Ts, !1, bs)))) {
                                var s = e.ray.origin.distanceTo(bs);
                                s < e.near || s > e.far || t.push({
                                    distance: s,
                                    point: bs.clone(),
                                    uv: fr.getUV(bs, Es, Ts, Ls, As, Cs, Ps, new Bt),
                                    face: null,
                                    object: this
                                })
                            }
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), void 0 !== e.center && this.center.copy(e.center), this.material = e.material, this
                        }
                    }]), n
                }(er);

            function Ns(e, t, n, r, i, a) {
                Ss.subVectors(e, n).addScalar(.5).multiply(r), void 0 !== i ? (Ms.x = a * Ss.x - i * Ss.y, Ms.y = i * Ss.x + a * Ss.y) : Ms.copy(Ss), e.copy(t), e.x += Ms.x, e.y += Ms.y, e.applyMatrix4(ks)
            }
            Rs.prototype.isSprite = !0;
            var Is = new $t,
                zs = new qt,
                Os = new qt,
                Ds = new $t,
                Fs = new An,
                Bs = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        return d(this, n), (i = t.call(this, e, r)).type = "SkinnedMesh", i.bindMode = "attached", i.bindMatrix = new An, i.bindMatrixInverse = new An, i
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this
                        }
                    }, {
                        key: "bind",
                        value: function(e, t) {
                            this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert()
                        }
                    }, {
                        key: "pose",
                        value: function() {
                            this.skeleton.pose()
                        }
                    }, {
                        key: "normalizeSkinWeights",
                        value: function() {
                            for (var e = new qt, t = this.geometry.attributes.skinWeight, n = 0, r = t.count; n < r; n++) {
                                e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
                                var i = 1 / e.manhattanLength();
                                i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w)
                            }
                        }
                    }, {
                        key: "updateMatrixWorld",
                        value: function(e) {
                            Ue(g(n.prototype), "updateMatrixWorld", this).call(this, e), "attached" === this.bindMode ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : "detached" === this.bindMode ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
                        }
                    }, {
                        key: "boneTransform",
                        value: function(e, t) {
                            var n = this.skeleton,
                                r = this.geometry;
                            zs.fromBufferAttribute(r.attributes.skinIndex, e), Os.fromBufferAttribute(r.attributes.skinWeight, e), Is.fromBufferAttribute(r.attributes.position, e).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
                            for (var i = 0; i < 4; i++) {
                                var a = Os.getComponent(i);
                                if (0 !== a) {
                                    var o = zs.getComponent(i);
                                    Fs.multiplyMatrices(n.bones[o].matrixWorld, n.boneInverses[o]), t.addScaledVector(Ds.copy(Is).applyMatrix4(Fs), a)
                                }
                            }
                            return t.applyMatrix4(this.bindMatrixInverse)
                        }
                    }]), n
                }(ei);
            Bs.prototype.isSkinnedMesh = !0;
            var Us = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return d(this, n), (e = t.call(this)).type = "Bone", e
                }
                return p(n)
            }(er);
            Us.prototype.isBone = !0;
            var Hs = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 ? arguments[3] : void 0,
                        s = arguments.length > 4 ? arguments[4] : void 0,
                        l = arguments.length > 5 ? arguments[5] : void 0,
                        u = arguments.length > 6 ? arguments[6] : void 0,
                        c = arguments.length > 7 ? arguments[7] : void 0,
                        f = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : $e,
                        h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : $e,
                        p = arguments.length > 10 ? arguments[10] : void 0,
                        v = arguments.length > 11 ? arguments[11] : void 0;
                    return d(this, n), (e = t.call(this, null, l, u, c, f, h, o, s, p, v)).image = {
                        data: r,
                        width: i,
                        height: a
                    }, e.magFilter = f, e.minFilter = h, e.generateMipmaps = !1, e.flipY = !1, e.unpackAlignment = 1, e.needsUpdate = !0, e
                }
                return p(n)
            }(Wt);
            Hs.prototype.isDataTexture = !0;
            var Vs = new An,
                Gs = new An,
                Ws = [],
                js = new ei,
                qs = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        return d(this, n), (a = t.call(this, e, r)).instanceMatrix = new Mr(new Float32Array(16 * i), 16), a.instanceColor = null, a.count = i, a.frustumCulled = !1, a
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.instanceMatrix.copy(e.instanceMatrix), null !== e.instanceColor && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this
                        }
                    }, {
                        key: "getColorAt",
                        value: function(e, t) {
                            t.fromArray(this.instanceColor.array, 3 * e)
                        }
                    }, {
                        key: "getMatrixAt",
                        value: function(e, t) {
                            t.fromArray(this.instanceMatrix.array, 16 * e)
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n = this.matrixWorld,
                                r = this.count;
                            if (js.geometry = this.geometry, js.material = this.material, void 0 !== js.material)
                                for (var i = 0; i < r; i++) {
                                    this.getMatrixAt(i, Vs), Gs.multiplyMatrices(n, Vs), js.matrixWorld = Gs, js.raycast(e, Ws);
                                    for (var a = 0, o = Ws.length; a < o; a++) {
                                        var s = Ws[a];
                                        s.instanceId = i, s.object = this, t.push(s)
                                    }
                                    Ws.length = 0
                                }
                        }
                    }, {
                        key: "setColorAt",
                        value: function(e, t) {
                            null === this.instanceColor && (this.instanceColor = new Mr(new Float32Array(3 * this.instanceMatrix.count), 3)), t.toArray(this.instanceColor.array, 3 * e)
                        }
                    }, {
                        key: "setMatrixAt",
                        value: function(e, t) {
                            t.toArray(this.instanceMatrix.array, 16 * e)
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {}
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }]), n
                }(ei);
            qs.prototype.isInstancedMesh = !0;
            var Xs = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "LineBasicMaterial", r.color = new br(16777215), r.linewidth = 1, r.linecap = "round", r.linejoin = "round", r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this
                    }
                }]), n
            }(hr);
            Xs.prototype.isLineBasicMaterial = !0;
            var Ys = new $t,
                Zs = new $t,
                Js = new An,
                $s = new Ln,
                Qs = new bn,
                Ks = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Or,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Xs;
                        return d(this, n), (e = t.call(this)).type = "Line", e.geometry = r, e.material = i, e.updateMorphTargets(), e
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.material = e.material, this.geometry = e.geometry, this
                        }
                    }, {
                        key: "computeLineDistances",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry)
                                if (null === e.index) {
                                    for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++) Ys.fromBufferAttribute(t, r - 1), Zs.fromBufferAttribute(t, r), n[r] = n[r - 1], n[r] += Ys.distanceTo(Zs);
                                    e.setAttribute("lineDistance", new Tr(n, 1))
                                } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                            else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
                            return this
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n = this.geometry,
                                r = this.matrixWorld,
                                i = e.params.Line.threshold,
                                a = n.drawRange;
                            if (null === n.boundingSphere && n.computeBoundingSphere(), Qs.copy(n.boundingSphere), Qs.applyMatrix4(r), Qs.radius += i, !1 !== e.ray.intersectsSphere(Qs)) {
                                Js.copy(r).invert(), $s.copy(e.ray).applyMatrix4(Js);
                                var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                    s = o * o,
                                    l = new $t,
                                    u = new $t,
                                    c = new $t,
                                    f = new $t,
                                    d = this.isLineSegments ? 2 : 1;
                                if (n.isBufferGeometry) {
                                    var h = n.index,
                                        p = n.attributes.position;
                                    if (null !== h)
                                        for (var v = Math.max(0, a.start), m = Math.min(h.count, a.start + a.count) - 1; v < m; v += d) {
                                            var g = h.getX(v),
                                                y = h.getX(v + 1);
                                            if (l.fromBufferAttribute(p, g), u.fromBufferAttribute(p, y), !($s.distanceSqToSegment(l, u, f, c) > s)) {
                                                f.applyMatrix4(this.matrixWorld);
                                                var x = e.ray.origin.distanceTo(f);
                                                x < e.near || x > e.far || t.push({
                                                    distance: x,
                                                    point: c.clone().applyMatrix4(this.matrixWorld),
                                                    index: v,
                                                    face: null,
                                                    faceIndex: null,
                                                    object: this
                                                })
                                            }
                                        } else
                                            for (var b = Math.max(0, a.start), _ = Math.min(p.count, a.start + a.count) - 1; b < _; b += d) {
                                                if (l.fromBufferAttribute(p, b), u.fromBufferAttribute(p, b + 1), !($s.distanceSqToSegment(l, u, f, c) > s)) {
                                                    f.applyMatrix4(this.matrixWorld);
                                                    var w = e.ray.origin.distanceTo(f);
                                                    w < e.near || w > e.far || t.push({
                                                        distance: w,
                                                        point: c.clone().applyMatrix4(this.matrixWorld),
                                                        index: b,
                                                        face: null,
                                                        faceIndex: null,
                                                        object: this
                                                    })
                                                }
                                            }
                                } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry) {
                                var t = e.morphAttributes,
                                    n = Object.keys(t);
                                if (n.length > 0) {
                                    var r = t[n[0]];
                                    if (void 0 !== r) {
                                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                                        for (var i = 0, a = r.length; i < a; i++) {
                                            var o = r[i].name || String(i);
                                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = i
                                        }
                                    }
                                }
                            } else {
                                var s = e.morphTargets;
                                void 0 !== s && s.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }]), n
                }(er);
            Ks.prototype.isLine = !0;
            var el = new $t,
                tl = new $t,
                nl = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        return d(this, n), (i = t.call(this, e, r)).type = "LineSegments", i
                    }
                    return p(n, [{
                        key: "computeLineDistances",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry)
                                if (null === e.index) {
                                    for (var t = e.attributes.position, n = [], r = 0, i = t.count; r < i; r += 2) el.fromBufferAttribute(t, r), tl.fromBufferAttribute(t, r + 1), n[r] = 0 === r ? 0 : n[r - 1], n[r + 1] = n[r] + el.distanceTo(tl);
                                    e.setAttribute("lineDistance", new Tr(n, 1))
                                } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                            else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
                            return this
                        }
                    }]), n
                }(Ks);
            nl.prototype.isLineSegments = !0;
            var rl = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i;
                    return d(this, n), (i = t.call(this, e, r)).type = "LineLoop", i
                }
                return p(n)
            }(Ks);
            rl.prototype.isLineLoop = !0;
            var il = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "PointsMaterial", r.color = new br(16777215), r.map = null, r.alphaMap = null, r.size = 1, r.sizeAttenuation = !0, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this
                    }
                }]), n
            }(hr);
            il.prototype.isPointsMaterial = !0;
            var al = new An,
                ol = new Ln,
                sl = new bn,
                ll = new $t,
                ul = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Or,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new il;
                        return d(this, n), (e = t.call(this)).type = "Points", e.geometry = r, e.material = i, e.updateMorphTargets(), e
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.material = e.material, this.geometry = e.geometry, this
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n = this.geometry,
                                r = this.matrixWorld,
                                i = e.params.Points.threshold,
                                a = n.drawRange;
                            if (null === n.boundingSphere && n.computeBoundingSphere(), sl.copy(n.boundingSphere), sl.applyMatrix4(r), sl.radius += i, !1 !== e.ray.intersectsSphere(sl)) {
                                al.copy(r).invert(), ol.copy(e.ray).applyMatrix4(al);
                                var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                    s = o * o;
                                if (n.isBufferGeometry) {
                                    var l = n.index,
                                        u = n.attributes.position;
                                    if (null !== l)
                                        for (var c = Math.max(0, a.start), f = Math.min(l.count, a.start + a.count); c < f; c++) {
                                            var d = l.getX(c);
                                            ll.fromBufferAttribute(u, d), cl(ll, d, s, r, e, t, this)
                                        } else
                                            for (var h = Math.max(0, a.start), p = Math.min(u.count, a.start + a.count); h < p; h++) ll.fromBufferAttribute(u, h), cl(ll, h, s, r, e, t, this)
                                } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry) {
                                var t = e.morphAttributes,
                                    n = Object.keys(t);
                                if (n.length > 0) {
                                    var r = t[n[0]];
                                    if (void 0 !== r) {
                                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                                        for (var i = 0, a = r.length; i < a; i++) {
                                            var o = r[i].name || String(i);
                                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = i
                                        }
                                    }
                                }
                            } else {
                                var s = e.morphTargets;
                                void 0 !== s && s.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }]), n
                }(er);

            function cl(e, t, n, r, i, a, o) {
                var s = ol.distanceSqToPoint(e);
                if (s < n) {
                    var l = new $t;
                    ol.closestPointToPoint(e, l), l.applyMatrix4(r);
                    var u = i.ray.origin.distanceTo(l);
                    if (u < i.near || u > i.far) return;
                    a.push({
                        distance: u,
                        distanceToRay: Math.sqrt(s),
                        point: l,
                        index: t,
                        face: null,
                        object: o
                    })
                }
            }
            ul.prototype.isPoints = !0,
                function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a, o, s, l, u, c) {
                        var f;
                        d(this, n), (f = t.call(this, e, r, i, a, o, s, l, u, c)).format = void 0 !== l ? l : lt, f.minFilter = void 0 !== s ? s : et, f.magFilter = void 0 !== o ? o : et, f.generateMipmaps = !1;
                        var h = b(f);
                        return "requestVideoFrameCallback" in e && e.requestVideoFrameCallback((function t() {
                            h.needsUpdate = !0, e.requestVideoFrameCallback(t)
                        })), f
                    }
                    return p(n, [{
                        key: "clone",
                        value: function() {
                            return new this.constructor(this.image).copy(this)
                        }
                    }, {
                        key: "update",
                        value: function() {
                            var e = this.image;
                            !1 === "requestVideoFrameCallback" in e && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
                        }
                    }]), n
                }(Wt).prototype.isVideoTexture = !0;
            var fl = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s, l, u, c, f, h, p) {
                    var v;
                    return d(this, n), (v = t.call(this, null, s, l, u, c, f, a, o, h, p)).image = {
                        width: r,
                        height: i
                    }, v.mipmaps = e, v.flipY = !1, v.generateMipmaps = !1, v
                }
                return p(n)
            }(Wt);
            fl.prototype.isCompressedTexture = !0,
                function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a, o, s, l, u, c) {
                        var f;
                        return d(this, n), (f = t.call(this, e, r, i, a, o, s, l, u, c)).needsUpdate = !0, f
                    }
                    return p(n)
                }(Wt).prototype.isCanvasTexture = !0;
            var dl = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s, l, u, c, f) {
                    var h;
                    if (d(this, n), (f = void 0 !== f ? f : ct) !== ct && f !== ft) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                    return void 0 === i && f === ct && (i = rt), void 0 === i && f === ft && (i = st), (h = t.call(this, null, a, o, s, l, u, f, i, c)).image = {
                        width: e,
                        height: r
                    }, h.magFilter = void 0 !== l ? l : $e, h.minFilter = void 0 !== u ? u : $e, h.flipY = !1, h.generateMipmaps = !1, h
                }
                return p(n)
            }(Wt);
            dl.prototype.isDepthTexture = !0;
            new $t, new $t, new $t, new fr;
            var hl = function() {
                    function e() {
                        d(this, e), this.type = "Curve", this.arcLengthDivisions = 200
                    }
                    return p(e, [{
                        key: "getPoint",
                        value: function() {
                            return console.warn("THREE.Curve: .getPoint() not implemented."), null
                        }
                    }, {
                        key: "getPointAt",
                        value: function(e, t) {
                            var n = this.getUtoTmapping(e);
                            return this.getPoint(n, t)
                        }
                    }, {
                        key: "getPoints",
                        value: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 5, t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
                            return t
                        }
                    }, {
                        key: "getSpacedPoints",
                        value: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 5, t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
                            return t
                        }
                    }, {
                        key: "getLength",
                        value: function() {
                            var e = this.getLengths();
                            return e[e.length - 1]
                        }
                    }, {
                        key: "getLengths",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.arcLengthDivisions;
                            if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
                            this.needsUpdate = !1;
                            var t, n = [],
                                r = this.getPoint(0),
                                i = 0;
                            n.push(0);
                            for (var a = 1; a <= e; a++) i += (t = this.getPoint(a / e)).distanceTo(r), n.push(i), r = t;
                            return this.cacheArcLengths = n, n
                        }
                    }, {
                        key: "updateArcLengths",
                        value: function() {
                            this.needsUpdate = !0, this.getLengths()
                        }
                    }, {
                        key: "getUtoTmapping",
                        value: function(e, t) {
                            var n, r = this.getLengths(),
                                i = 0,
                                a = r.length;
                            n = t || e * r[a - 1];
                            for (var o, s = 0, l = a - 1; s <= l;)
                                if ((o = r[i = Math.floor(s + (l - s) / 2)] - n) < 0) s = i + 1;
                                else {
                                    if (!(o > 0)) {
                                        l = i;
                                        break
                                    }
                                    l = i - 1
                                }
                            if (r[i = l] === n) return i / (a - 1);
                            var u = r[i];
                            return (i + (n - u) / (r[i + 1] - u)) / (a - 1)
                        }
                    }, {
                        key: "getTangent",
                        value: function(e, t) {
                            var n = 1e-4,
                                r = e - n,
                                i = e + n;
                            r < 0 && (r = 0), i > 1 && (i = 1);
                            var a = this.getPoint(r),
                                o = this.getPoint(i),
                                s = t || (a.isVector2 ? new Bt : new $t);
                            return s.copy(o).sub(a).normalize(), s
                        }
                    }, {
                        key: "getTangentAt",
                        value: function(e, t) {
                            var n = this.getUtoTmapping(e);
                            return this.getTangent(n, t)
                        }
                    }, {
                        key: "computeFrenetFrames",
                        value: function(e, t) {
                            for (var n = new $t, r = [], i = [], a = [], o = new $t, s = new An, l = 0; l <= e; l++) {
                                var u = l / e;
                                r[l] = this.getTangentAt(u, new $t), r[l].normalize()
                            }
                            i[0] = new $t, a[0] = new $t;
                            var c = Number.MAX_VALUE,
                                f = Math.abs(r[0].x),
                                d = Math.abs(r[0].y),
                                h = Math.abs(r[0].z);
                            f <= c && (c = f, n.set(1, 0, 0)), d <= c && (c = d, n.set(0, 1, 0)), h <= c && n.set(0, 0, 1), o.crossVectors(r[0], n).normalize(), i[0].crossVectors(r[0], o), a[0].crossVectors(r[0], i[0]);
                            for (var p = 1; p <= e; p++) {
                                if (i[p] = i[p - 1].clone(), a[p] = a[p - 1].clone(), o.crossVectors(r[p - 1], r[p]), o.length() > Number.EPSILON) {
                                    o.normalize();
                                    var v = Math.acos(It(r[p - 1].dot(r[p]), -1, 1));
                                    i[p].applyMatrix4(s.makeRotationAxis(o, v))
                                }
                                a[p].crossVectors(r[p], i[p])
                            }
                            if (!0 === t) {
                                var m = Math.acos(It(i[0].dot(i[e]), -1, 1));
                                m /= e, r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (m = -m);
                                for (var g = 1; g <= e; g++) i[g].applyMatrix4(s.makeRotationAxis(r[g], m * g)), a[g].crossVectors(r[g], i[g])
                            }
                            return {
                                tangents: r,
                                normals: i,
                                binormals: a
                            }
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.arcLengthDivisions = e.arcLengthDivisions, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                metadata: {
                                    version: 4.5,
                                    type: "Curve",
                                    generator: "Curve.toJSON"
                                }
                            };
                            return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return this.arcLengthDivisions = e.arcLengthDivisions, this
                        }
                    }]), e
                }(),
                pl = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                            l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2 * Math.PI,
                            u = arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
                            c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0;
                        return d(this, n), (e = t.call(this)).type = "EllipseCurve", e.aX = r, e.aY = i, e.xRadius = a, e.yRadius = o, e.aStartAngle = s, e.aEndAngle = l, e.aClockwise = u, e.aRotation = c, e
                    }
                    return p(n, [{
                        key: "getPoint",
                        value: function(e, t) {
                            for (var n = t || new Bt, r = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, a = Math.abs(i) < Number.EPSILON; i < 0;) i += r;
                            for (; i > r;) i -= r;
                            i < Number.EPSILON && (i = a ? 0 : r), !0 !== this.aClockwise || a || (i === r ? i = -r : i -= r);
                            var o = this.aStartAngle + e * i,
                                s = this.aX + this.xRadius * Math.cos(o),
                                l = this.aY + this.yRadius * Math.sin(o);
                            if (0 !== this.aRotation) {
                                var u = Math.cos(this.aRotation),
                                    c = Math.sin(this.aRotation),
                                    f = s - this.aX,
                                    d = l - this.aY;
                                s = f * u - d * c + this.aX, l = f * c + d * u + this.aY
                            }
                            return n.set(s, l)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
                        }
                    }]), n
                }(hl);
            pl.prototype.isEllipseCurve = !0;
            var vl = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s) {
                    var l;
                    return d(this, n), (l = t.call(this, e, r, i, i, a, o, s)).type = "ArcCurve", l
                }
                return p(n)
            }(pl);

            function ml() {
                var e = 0,
                    t = 0,
                    n = 0,
                    r = 0;

                function i(i, a, o, s) {
                    e = i, t = o, n = -3 * i + 3 * a - 2 * o - s, r = 2 * i - 2 * a + o + s
                }
                return {
                    initCatmullRom: function(e, t, n, r, a) {
                        i(t, n, a * (n - e), a * (r - t))
                    },
                    initNonuniformCatmullRom: function(e, t, n, r, a, o, s) {
                        var l = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
                            u = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
                        i(t, n, l *= o, u *= o)
                    },
                    calc: function(i) {
                        var a = i * i;
                        return e + t * i + n * a + r * (a * i)
                    }
                }
            }
            vl.prototype.isArcCurve = !0;
            var gl = new $t,
                yl = new ml,
                xl = new ml,
                bl = new ml,
                _l = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "centripetal",
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
                        return d(this, n), (e = t.call(this)).type = "CatmullRomCurve3", e.points = r, e.closed = i, e.curveType = a, e.tension = o, e
                    }
                    return p(n, [{
                        key: "getPoint",
                        value: function(e) {
                            var t, n, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                                i = r,
                                a = this.points,
                                o = a.length,
                                s = (o - (this.closed ? 0 : 1)) * e,
                                l = Math.floor(s),
                                u = s - l;
                            this.closed ? l += l > 0 ? 0 : (Math.floor(Math.abs(l) / o) + 1) * o : 0 === u && l === o - 1 && (l = o - 2, u = 1), this.closed || l > 0 ? t = a[(l - 1) % o] : (gl.subVectors(a[0], a[1]).add(a[0]), t = gl);
                            var c = a[l % o],
                                f = a[(l + 1) % o];
                            if (this.closed || l + 2 < o ? n = a[(l + 2) % o] : (gl.subVectors(a[o - 1], a[o - 2]).add(a[o - 1]), n = gl), "centripetal" === this.curveType || "chordal" === this.curveType) {
                                var d = "chordal" === this.curveType ? .5 : .25,
                                    h = Math.pow(t.distanceToSquared(c), d),
                                    p = Math.pow(c.distanceToSquared(f), d),
                                    v = Math.pow(f.distanceToSquared(n), d);
                                p < 1e-4 && (p = 1), h < 1e-4 && (h = p), v < 1e-4 && (v = p), yl.initNonuniformCatmullRom(t.x, c.x, f.x, n.x, h, p, v), xl.initNonuniformCatmullRom(t.y, c.y, f.y, n.y, h, p, v), bl.initNonuniformCatmullRom(t.z, c.z, f.z, n.z, h, p, v)
                            } else "catmullrom" === this.curveType && (yl.initCatmullRom(t.x, c.x, f.x, n.x, this.tension), xl.initCatmullRom(t.y, c.y, f.y, n.y, this.tension), bl.initCatmullRom(t.z, c.z, f.z, n.z, this.tension));
                            return i.set(yl.calc(u), xl.calc(u), bl.calc(u)), i
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            Ue(g(n.prototype), "copy", this).call(this, e), this.points = [];
                            for (var t = 0, r = e.points.length; t < r; t++) {
                                var i = e.points[t];
                                this.points.push(i.clone())
                            }
                            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            e.points = [];
                            for (var t = 0, r = this.points.length; t < r; t++) {
                                var i = this.points[t];
                                e.points.push(i.toArray())
                            }
                            return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            Ue(g(n.prototype), "fromJSON", this).call(this, e), this.points = [];
                            for (var t = 0, r = e.points.length; t < r; t++) {
                                var i = e.points[t];
                                this.points.push((new $t).fromArray(i))
                            }
                            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
                        }
                    }]), n
                }(hl);

            function wl(e, t, n, r, i) {
                var a = .5 * (r - t),
                    o = .5 * (i - n),
                    s = e * e;
                return (2 * n - 2 * r + a + o) * (e * s) + (-3 * n + 3 * r - 2 * a - o) * s + a * e + n
            }

            function Sl(e, t, n, r) {
                return function(e, t) {
                    var n = 1 - e;
                    return n * n * t
                }(e, t) + function(e, t) {
                    return 2 * (1 - e) * e * t
                }(e, n) + function(e, t) {
                    return e * e * t
                }(e, r)
            }

            function Ml(e, t, n, r, i) {
                return function(e, t) {
                    var n = 1 - e;
                    return n * n * n * t
                }(e, t) + function(e, t) {
                    var n = 1 - e;
                    return 3 * n * n * e * t
                }(e, n) + function(e, t) {
                    return 3 * (1 - e) * e * e * t
                }(e, r) + function(e, t) {
                    return e * e * e * t
                }(e, i)
            }
            _l.prototype.isCatmullRomCurve3 = !0;
            var kl = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Bt,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Bt,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new Bt;
                    return d(this, n), (e = t.call(this)).type = "CubicBezierCurve", e.v0 = r, e.v1 = i, e.v2 = a, e.v3 = o, e
                }
                return p(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt,
                            n = t,
                            r = this.v0,
                            i = this.v1,
                            a = this.v2,
                            o = this.v3;
                        return n.set(Ml(e, r.x, i.x, a.x, o.x), Ml(e, r.y, i.y, a.y, o.y)), n
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
                    }
                }]), n
            }(hl);
            kl.prototype.isCubicBezierCurve = !0;
            var El = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new $t,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new $t;
                    return d(this, n), (e = t.call(this)).type = "CubicBezierCurve3", e.v0 = r, e.v1 = i, e.v2 = a, e.v3 = o, e
                }
                return p(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                            n = t,
                            r = this.v0,
                            i = this.v1,
                            a = this.v2,
                            o = this.v3;
                        return n.set(Ml(e, r.x, i.x, a.x, o.x), Ml(e, r.y, i.y, a.y, o.y), Ml(e, r.z, i.z, a.z, o.z)), n
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
                    }
                }]), n
            }(hl);
            El.prototype.isCubicBezierCurve3 = !0;
            var Tl = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Bt,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt;
                    return d(this, n), (e = t.call(this)).type = "LineCurve", e.v1 = r, e.v2 = i, e
                }
                return p(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt,
                            n = t;
                        return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n
                    }
                }, {
                    key: "getPointAt",
                    value: function(e, t) {
                        return this.getPoint(e, t)
                    }
                }, {
                    key: "getTangent",
                    value: function(e, t) {
                        var n = t || new Bt;
                        return n.copy(this.v2).sub(this.v1).normalize(), n
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                    }
                }]), n
            }(hl);
            Tl.prototype.isLineCurve = !0;
            var Ll = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t;
                        return d(this, n), (e = t.call(this)).type = "LineCurve3", e.isLineCurve3 = !0, e.v1 = r, e.v2 = i, e
                    }
                    return p(n, [{
                        key: "getPoint",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                                n = t;
                            return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n
                        }
                    }, {
                        key: "getPointAt",
                        value: function(e, t) {
                            return this.getPoint(e, t)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                        }
                    }]), n
                }(hl),
                Al = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Bt,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Bt;
                        return d(this, n), (e = t.call(this)).type = "QuadraticBezierCurve", e.v0 = r, e.v1 = i, e.v2 = a, e
                    }
                    return p(n, [{
                        key: "getPoint",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt,
                                n = t,
                                r = this.v0,
                                i = this.v1,
                                a = this.v2;
                            return n.set(Sl(e, r.x, i.x, a.x), Sl(e, r.y, i.y, a.y)), n
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                        }
                    }]), n
                }(hl);
            Al.prototype.isQuadraticBezierCurve = !0;
            var Cl = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new $t;
                    return d(this, n), (e = t.call(this)).type = "QuadraticBezierCurve3", e.v0 = r, e.v1 = i, e.v2 = a, e
                }
                return p(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t,
                            n = t,
                            r = this.v0,
                            i = this.v1,
                            a = this.v2;
                        return n.set(Sl(e, r.x, i.x, a.x), Sl(e, r.y, i.y, a.y), Sl(e, r.z, i.z, a.z)), n
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                    }
                }]), n
            }(hl);
            Cl.prototype.isQuadraticBezierCurve3 = !0;
            var Pl = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    return d(this, n), (e = t.call(this)).type = "SplineCurve", e.points = r, e
                }
                return p(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt,
                            n = t,
                            r = this.points,
                            i = (r.length - 1) * e,
                            a = Math.floor(i),
                            o = i - a,
                            s = r[0 === a ? a : a - 1],
                            l = r[a],
                            u = r[a > r.length - 2 ? r.length - 1 : a + 1],
                            c = r[a > r.length - 3 ? r.length - 1 : a + 2];
                        return n.set(wl(o, s.x, l.x, u.x, c.x), wl(o, s.y, l.y, u.y, c.y)), n
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        Ue(g(n.prototype), "copy", this).call(this, e), this.points = [];
                        for (var t = 0, r = e.points.length; t < r; t++) {
                            var i = e.points[t];
                            this.points.push(i.clone())
                        }
                        return this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        e.points = [];
                        for (var t = 0, r = this.points.length; t < r; t++) {
                            var i = this.points[t];
                            e.points.push(i.toArray())
                        }
                        return e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        Ue(g(n.prototype), "fromJSON", this).call(this, e), this.points = [];
                        for (var t = 0, r = e.points.length; t < r; t++) {
                            var i = e.points[t];
                            this.points.push((new Bt).fromArray(i))
                        }
                        return this
                    }
                }]), n
            }(hl);
            Pl.prototype.isSplineCurve = !0;
            var Rl = Object.freeze({
                    __proto__: null,
                    ArcCurve: vl,
                    CatmullRomCurve3: _l,
                    CubicBezierCurve: kl,
                    CubicBezierCurve3: El,
                    EllipseCurve: pl,
                    LineCurve: Tl,
                    LineCurve3: Ll,
                    QuadraticBezierCurve: Al,
                    QuadraticBezierCurve3: Cl,
                    SplineCurve: Pl
                }),
                Nl = function(e, t) {
                    var n, r, i, a, o, s, l, u = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 2,
                        c = t && t.length,
                        f = c ? t[0] * u : e.length,
                        d = Il(e, 0, f, u, !0),
                        h = [];
                    if (!d || d.next === d.prev) return h;
                    if (c && (d = Hl(e, t, d, u)), e.length > 80 * u) {
                        n = i = e[0], r = a = e[1];
                        for (var p = u; p < f; p += u)(o = e[p]) < n && (n = o), (s = e[p + 1]) < r && (r = s), o > i && (i = o), s > a && (a = s);
                        l = 0 !== (l = Math.max(i - n, a - r)) ? 1 / l : 0
                    }
                    return Ol(d, h, u, n, r, l), h
                };

            function Il(e, t, n, r, i) {
                var a, o;
                if (i === function(e, t, n, r) {
                        for (var i = 0, a = t, o = n - r; a < n; a += r) i += (e[o] - e[a]) * (e[a + 1] + e[o + 1]), o = a;
                        return i
                    }(e, t, n, r) > 0)
                    for (a = t; a < n; a += r) o = nu(a, e[a], e[a + 1], o);
                else
                    for (a = n - r; a >= t; a -= r) o = nu(a, e[a], e[a + 1], o);
                return o && Jl(o, o.next) && (ru(o), o = o.next), o
            }

            function zl(e, t) {
                if (!e) return e;
                t || (t = e);
                var n, r = e;
                do {
                    if (n = !1, r.steiner || !Jl(r, r.next) && 0 !== Zl(r.prev, r, r.next)) r = r.next;
                    else {
                        if (ru(r), (r = t = r.prev) === r.next) break;
                        n = !0
                    }
                } while (n || r !== t);
                return t
            }

            function Ol(e, t, n, r, i, a, o) {
                if (e) {
                    !o && a && function(e, t, n, r) {
                        var i = e;
                        do {
                            null === i.z && (i.z = jl(i.x, i.y, t, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next
                        } while (i !== e);
                        i.prevZ.nextZ = null, i.prevZ = null,
                            function(e) {
                                var t, n, r, i, a, o, s, l, u = 1;
                                do {
                                    for (n = e, e = null, a = null, o = 0; n;) {
                                        for (o++, r = n, s = 0, t = 0; t < u && (s++, r = r.nextZ); t++);
                                        for (l = u; s > 0 || l > 0 && r;) 0 !== s && (0 === l || !r || n.z <= r.z) ? (i = n, n = n.nextZ, s--) : (i = r, r = r.nextZ, l--), a ? a.nextZ = i : e = i, i.prevZ = a, a = i;
                                        n = r
                                    }
                                    a.nextZ = null, u *= 2
                                } while (o > 1)
                            }(i)
                    }(e, r, i, a);
                    for (var s, l, u = e; e.prev !== e.next;)
                        if (s = e.prev, l = e.next, a ? Fl(e, r, i, a) : Dl(e)) t.push(s.i / n), t.push(e.i / n), t.push(l.i / n), ru(e), e = l.next, u = l.next;
                        else if ((e = l) === u) {
                        o ? 1 === o ? Ol(e = Bl(zl(e), t, n), t, n, r, i, a, 2) : 2 === o && Ul(e, t, n, r, i, a) : Ol(zl(e), t, n, r, i, a, 1);
                        break
                    }
                }
            }

            function Dl(e) {
                var t = e.prev,
                    n = e,
                    r = e.next;
                if (Zl(t, n, r) >= 0) return !1;
                for (var i = e.next.next; i !== e.prev;) {
                    if (Xl(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) && Zl(i.prev, i, i.next) >= 0) return !1;
                    i = i.next
                }
                return !0
            }

            function Fl(e, t, n, r) {
                var i = e.prev,
                    a = e,
                    o = e.next;
                if (Zl(i, a, o) >= 0) return !1;
                for (var s = i.x < a.x ? i.x < o.x ? i.x : o.x : a.x < o.x ? a.x : o.x, l = i.y < a.y ? i.y < o.y ? i.y : o.y : a.y < o.y ? a.y : o.y, u = i.x > a.x ? i.x > o.x ? i.x : o.x : a.x > o.x ? a.x : o.x, c = i.y > a.y ? i.y > o.y ? i.y : o.y : a.y > o.y ? a.y : o.y, f = jl(s, l, t, n, r), d = jl(u, c, t, n, r), h = e.prevZ, p = e.nextZ; h && h.z >= f && p && p.z <= d;) {
                    if (h !== e.prev && h !== e.next && Xl(i.x, i.y, a.x, a.y, o.x, o.y, h.x, h.y) && Zl(h.prev, h, h.next) >= 0) return !1;
                    if (h = h.prevZ, p !== e.prev && p !== e.next && Xl(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && Zl(p.prev, p, p.next) >= 0) return !1;
                    p = p.nextZ
                }
                for (; h && h.z >= f;) {
                    if (h !== e.prev && h !== e.next && Xl(i.x, i.y, a.x, a.y, o.x, o.y, h.x, h.y) && Zl(h.prev, h, h.next) >= 0) return !1;
                    h = h.prevZ
                }
                for (; p && p.z <= d;) {
                    if (p !== e.prev && p !== e.next && Xl(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && Zl(p.prev, p, p.next) >= 0) return !1;
                    p = p.nextZ
                }
                return !0
            }

            function Bl(e, t, n) {
                var r = e;
                do {
                    var i = r.prev,
                        a = r.next.next;
                    !Jl(i, a) && $l(i, r, r.next, a) && eu(i, a) && eu(a, i) && (t.push(i.i / n), t.push(r.i / n), t.push(a.i / n), ru(r), ru(r.next), r = e = a), r = r.next
                } while (r !== e);
                return zl(r)
            }

            function Ul(e, t, n, r, i, a) {
                var o = e;
                do {
                    for (var s = o.next.next; s !== o.prev;) {
                        if (o.i !== s.i && Yl(o, s)) {
                            var l = tu(o, s);
                            return o = zl(o, o.next), l = zl(l, l.next), Ol(o, t, n, r, i, a), void Ol(l, t, n, r, i, a)
                        }
                        s = s.next
                    }
                    o = o.next
                } while (o !== e)
            }

            function Hl(e, t, n, r) {
                var i, a, o, s = [];
                for (i = 0, a = t.length; i < a; i++)(o = Il(e, t[i] * r, i < a - 1 ? t[i + 1] * r : e.length, r, !1)) === o.next && (o.steiner = !0), s.push(ql(o));
                for (s.sort(Vl), i = 0; i < s.length; i++) Gl(s[i], n), n = zl(n, n.next);
                return n
            }

            function Vl(e, t) {
                return e.x - t.x
            }

            function Gl(e, t) {
                if (t = function(e, t) {
                        var n, r = t,
                            i = e.x,
                            a = e.y,
                            o = -1 / 0;
                        do {
                            if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                                var s = r.x + (a - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                                if (s <= i && s > o) {
                                    if (o = s, s === i) {
                                        if (a === r.y) return r;
                                        if (a === r.next.y) return r.next
                                    }
                                    n = r.x < r.next.x ? r : r.next
                                }
                            }
                            r = r.next
                        } while (r !== t);
                        if (!n) return null;
                        if (i === o) return n;
                        var l, u = n,
                            c = n.x,
                            f = n.y,
                            d = 1 / 0;
                        r = n;
                        do {
                            i >= r.x && r.x >= c && i !== r.x && Xl(a < f ? i : o, a, c, f, a < f ? o : i, a, r.x, r.y) && (l = Math.abs(a - r.y) / (i - r.x), eu(r, e) && (l < d || l === d && (r.x > n.x || r.x === n.x && Wl(n, r))) && (n = r, d = l)), r = r.next
                        } while (r !== u);
                        return n
                    }(e, t), t) {
                    var n = tu(t, e);
                    zl(t, t.next), zl(n, n.next)
                }
            }

            function Wl(e, t) {
                return Zl(e.prev, e, t.prev) < 0 && Zl(t.next, e, e.next) < 0
            }

            function jl(e, t, n, r, i) {
                return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
            }

            function ql(e) {
                var t = e,
                    n = e;
                do {
                    (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t), t = t.next
                } while (t !== e);
                return n
            }

            function Xl(e, t, n, r, i, a, o, s) {
                return (i - o) * (t - s) - (e - o) * (a - s) >= 0 && (e - o) * (r - s) - (n - o) * (t - s) >= 0 && (n - o) * (a - s) - (i - o) * (r - s) >= 0
            }

            function Yl(e, t) {
                return e.next.i !== t.i && e.prev.i !== t.i && ! function(e, t) {
                    var n = e;
                    do {
                        if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && $l(n, n.next, e, t)) return !0;
                        n = n.next
                    } while (n !== e);
                    return !1
                }(e, t) && (eu(e, t) && eu(t, e) && function(e, t) {
                    var n = e,
                        r = !1,
                        i = (e.x + t.x) / 2,
                        a = (e.y + t.y) / 2;
                    do {
                        n.y > a !== n.next.y > a && n.next.y !== n.y && i < (n.next.x - n.x) * (a - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next
                    } while (n !== e);
                    return r
                }(e, t) && (Zl(e.prev, e, t.prev) || Zl(e, t.prev, t)) || Jl(e, t) && Zl(e.prev, e, e.next) > 0 && Zl(t.prev, t, t.next) > 0)
            }

            function Zl(e, t, n) {
                return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
            }

            function Jl(e, t) {
                return e.x === t.x && e.y === t.y
            }

            function $l(e, t, n, r) {
                var i = Kl(Zl(e, t, n)),
                    a = Kl(Zl(e, t, r)),
                    o = Kl(Zl(n, r, e)),
                    s = Kl(Zl(n, r, t));
                return i !== a && o !== s || (!(0 !== i || !Ql(e, n, t)) || (!(0 !== a || !Ql(e, r, t)) || (!(0 !== o || !Ql(n, e, r)) || !(0 !== s || !Ql(n, t, r)))))
            }

            function Ql(e, t, n) {
                return t.x <= Math.max(e.x, n.x) && t.x >= Math.min(e.x, n.x) && t.y <= Math.max(e.y, n.y) && t.y >= Math.min(e.y, n.y)
            }

            function Kl(e) {
                return e > 0 ? 1 : e < 0 ? -1 : 0
            }

            function eu(e, t) {
                return Zl(e.prev, e, e.next) < 0 ? Zl(e, t, e.next) >= 0 && Zl(e, e.prev, t) >= 0 : Zl(e, t, e.prev) < 0 || Zl(e, e.next, t) < 0
            }

            function tu(e, t) {
                var n = new iu(e.i, e.x, e.y),
                    r = new iu(t.i, t.x, t.y),
                    i = e.next,
                    a = t.prev;
                return e.next = t, t.prev = e, n.next = i, i.prev = n, r.next = n, n.prev = r, a.next = r, r.prev = a, r
            }

            function nu(e, t, n, r) {
                var i = new iu(e, t, n);
                return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i
            }

            function ru(e) {
                e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ)
            }

            function iu(e, t, n) {
                this.i = e, this.x = t, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
            }
            var au = function() {
                function e() {
                    d(this, e)
                }
                return p(e, null, [{
                    key: "area",
                    value: function(e) {
                        for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++) n += e[r].x * e[i].y - e[i].x * e[r].y;
                        return .5 * n
                    }
                }, {
                    key: "isClockWise",
                    value: function(t) {
                        return e.area(t) < 0
                    }
                }, {
                    key: "triangulateShape",
                    value: function(e, t) {
                        var n = [],
                            r = [],
                            i = [];
                        ou(e), su(n, e);
                        var a = e.length;
                        t.forEach(ou);
                        for (var o = 0; o < t.length; o++) r.push(a), a += t[o].length, su(n, t[o]);
                        for (var s = Nl(n, r), l = 0; l < s.length; l += 3) i.push(s.slice(l, l + 3));
                        return i
                    }
                }]), e
            }();

            function ou(e) {
                var t = e.length;
                t > 2 && e[t - 1].equals(e[0]) && e.pop()
            }

            function su(e, t) {
                for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y)
            }
            var lu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        d(this, n), (i = t.call(this)).type = "ExtrudeGeometry", i.parameters = {
                            shapes: e,
                            options: r
                        }, e = Array.isArray(e) ? e : [e];
                        for (var a = b(i), o = [], s = [], l = 0, u = e.length; l < u; l++) {
                            c(e[l])
                        }

                        function c(e) {
                            var t = [],
                                n = void 0 !== r.curveSegments ? r.curveSegments : 12,
                                i = void 0 !== r.steps ? r.steps : 1,
                                l = void 0 !== r.depth ? r.depth : 100,
                                u = void 0 === r.bevelEnabled || r.bevelEnabled,
                                c = void 0 !== r.bevelThickness ? r.bevelThickness : 6,
                                f = void 0 !== r.bevelSize ? r.bevelSize : c - 2,
                                d = void 0 !== r.bevelOffset ? r.bevelOffset : 0,
                                h = void 0 !== r.bevelSegments ? r.bevelSegments : 3,
                                p = r.extrudePath,
                                v = void 0 !== r.UVGenerator ? r.UVGenerator : uu;
                            void 0 !== r.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), l = r.amount);
                            var m, g, y, x, b, _ = !1;
                            p && (m = p.getSpacedPoints(i), _ = !0, u = !1, g = p.computeFrenetFrames(i, !1), y = new $t, x = new $t, b = new $t), u || (h = 0, c = 0, f = 0, d = 0);
                            var w = e.extractPoints(n),
                                S = w.shape,
                                M = w.holes;
                            if (!au.isClockWise(S)) {
                                S = S.reverse();
                                for (var k = 0, E = M.length; k < E; k++) {
                                    var T = M[k];
                                    au.isClockWise(T) && (M[k] = T.reverse())
                                }
                            }
                            for (var L = au.triangulateShape(S, M), A = S, C = 0, P = M.length; C < P; C++) {
                                var R = M[C];
                                S = S.concat(R)
                            }

                            function N(e, t, n) {
                                return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e)
                            }
                            var I = S.length,
                                z = L.length;

                            function O(e, t, n) {
                                var r, i, a, o = e.x - t.x,
                                    s = e.y - t.y,
                                    l = n.x - e.x,
                                    u = n.y - e.y,
                                    c = o * o + s * s,
                                    f = o * u - s * l;
                                if (Math.abs(f) > Number.EPSILON) {
                                    var d = Math.sqrt(c),
                                        h = Math.sqrt(l * l + u * u),
                                        p = t.x - s / d,
                                        v = t.y + o / d,
                                        m = ((n.x - u / h - p) * u - (n.y + l / h - v) * l) / (o * u - s * l),
                                        g = (r = p + o * m - e.x) * r + (i = v + s * m - e.y) * i;
                                    if (g <= 2) return new Bt(r, i);
                                    a = Math.sqrt(g / 2)
                                } else {
                                    var y = !1;
                                    o > Number.EPSILON ? l > Number.EPSILON && (y = !0) : o < -Number.EPSILON ? l < -Number.EPSILON && (y = !0) : Math.sign(s) === Math.sign(u) && (y = !0), y ? (r = -s, i = o, a = Math.sqrt(c)) : (r = o, i = s, a = Math.sqrt(c / 2))
                                }
                                return new Bt(r / a, i / a)
                            }
                            for (var D = [], F = 0, B = A.length, U = B - 1, H = F + 1; F < B; F++, U++, H++) U === B && (U = 0), H === B && (H = 0), D[F] = O(A[F], A[U], A[H]);
                            for (var V, G = [], W = D.concat(), j = 0, q = M.length; j < q; j++) {
                                var X = M[j];
                                V = [];
                                for (var Y = 0, Z = X.length, J = Z - 1, $ = Y + 1; Y < Z; Y++, J++, $++) J === Z && (J = 0), $ === Z && ($ = 0), V[Y] = O(X[Y], X[J], X[$]);
                                G.push(V), W = W.concat(V)
                            }
                            for (var Q = 0; Q < h; Q++) {
                                for (var K = Q / h, ee = c * Math.cos(K * Math.PI / 2), te = f * Math.sin(K * Math.PI / 2) + d, ne = 0, re = A.length; ne < re; ne++) {
                                    var ie = N(A[ne], D[ne], te);
                                    Pe(ie.x, ie.y, -ee)
                                }
                                for (var ae = 0, oe = M.length; ae < oe; ae++) {
                                    var se = M[ae];
                                    V = G[ae];
                                    for (var le = 0, ue = se.length; le < ue; le++) {
                                        var ce = N(se[le], V[le], te);
                                        Pe(ce.x, ce.y, -ee)
                                    }
                                }
                            }
                            for (var fe = f + d, de = 0; de < I; de++) {
                                var he = u ? N(S[de], W[de], fe) : S[de];
                                _ ? (x.copy(g.normals[0]).multiplyScalar(he.x), y.copy(g.binormals[0]).multiplyScalar(he.y), b.copy(m[0]).add(x).add(y), Pe(b.x, b.y, b.z)) : Pe(he.x, he.y, 0)
                            }
                            for (var pe = 1; pe <= i; pe++)
                                for (var ve = 0; ve < I; ve++) {
                                    var me = u ? N(S[ve], W[ve], fe) : S[ve];
                                    _ ? (x.copy(g.normals[pe]).multiplyScalar(me.x), y.copy(g.binormals[pe]).multiplyScalar(me.y), b.copy(m[pe]).add(x).add(y), Pe(b.x, b.y, b.z)) : Pe(me.x, me.y, l / i * pe)
                                }
                            for (var ge = h - 1; ge >= 0; ge--) {
                                for (var ye = ge / h, xe = c * Math.cos(ye * Math.PI / 2), be = f * Math.sin(ye * Math.PI / 2) + d, _e = 0, we = A.length; _e < we; _e++) {
                                    var Se = N(A[_e], D[_e], be);
                                    Pe(Se.x, Se.y, l + xe)
                                }
                                for (var Me = 0, ke = M.length; Me < ke; Me++) {
                                    var Ee = M[Me];
                                    V = G[Me];
                                    for (var Te = 0, Le = Ee.length; Te < Le; Te++) {
                                        var Ae = N(Ee[Te], V[Te], be);
                                        _ ? Pe(Ae.x, Ae.y + m[i - 1].y, m[i - 1].x + xe) : Pe(Ae.x, Ae.y, l + xe)
                                    }
                                }
                            }

                            function Ce(e, t) {
                                for (var n = e.length; --n >= 0;) {
                                    var r = n,
                                        a = n - 1;
                                    a < 0 && (a = e.length - 1);
                                    for (var o = 0, s = i + 2 * h; o < s; o++) {
                                        var l = I * o,
                                            u = I * (o + 1);
                                        Ne(t + r + l, t + a + l, t + a + u, t + r + u)
                                    }
                                }
                            }

                            function Pe(e, n, r) {
                                t.push(e), t.push(n), t.push(r)
                            }

                            function Re(e, t, n) {
                                Ie(e), Ie(t), Ie(n);
                                var r = o.length / 3,
                                    i = v.generateTopUV(a, o, r - 3, r - 2, r - 1);
                                ze(i[0]), ze(i[1]), ze(i[2])
                            }

                            function Ne(e, t, n, r) {
                                Ie(e), Ie(t), Ie(r), Ie(t), Ie(n), Ie(r);
                                var i = o.length / 3,
                                    s = v.generateSideWallUV(a, o, i - 6, i - 3, i - 2, i - 1);
                                ze(s[0]), ze(s[1]), ze(s[3]), ze(s[1]), ze(s[2]), ze(s[3])
                            }

                            function Ie(e) {
                                o.push(t[3 * e + 0]), o.push(t[3 * e + 1]), o.push(t[3 * e + 2])
                            }

                            function ze(e) {
                                s.push(e.x), s.push(e.y)
                            }! function() {
                                var e = o.length / 3;
                                if (u) {
                                    for (var t = 0, n = I * t, r = 0; r < z; r++) {
                                        var s = L[r];
                                        Re(s[2] + n, s[1] + n, s[0] + n)
                                    }
                                    n = I * (t = i + 2 * h);
                                    for (var l = 0; l < z; l++) {
                                        var c = L[l];
                                        Re(c[0] + n, c[1] + n, c[2] + n)
                                    }
                                } else {
                                    for (var f = 0; f < z; f++) {
                                        var d = L[f];
                                        Re(d[2], d[1], d[0])
                                    }
                                    for (var p = 0; p < z; p++) {
                                        var v = L[p];
                                        Re(v[0] + I * i, v[1] + I * i, v[2] + I * i)
                                    }
                                }
                                a.addGroup(e, o.length / 3 - e, 0)
                            }(),
                            function() {
                                var e = o.length / 3,
                                    t = 0;
                                Ce(A, t), t += A.length;
                                for (var n = 0, r = M.length; n < r; n++) {
                                    var i = M[n];
                                    Ce(i, t), t += i.length
                                }
                                a.addGroup(e, o.length / 3 - e, 1)
                            }()
                        }
                        return i.setAttribute("position", new Tr(o, 3)), i.setAttribute("uv", new Tr(s, 2)), i.computeVertexNormals(), i
                    }
                    return p(n, [{
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            return function(e, t, n) {
                                if (n.shapes = [], Array.isArray(e))
                                    for (var r = 0, i = e.length; r < i; r++) {
                                        var a = e[r];
                                        n.shapes.push(a.uuid)
                                    } else n.shapes.push(e.uuid);
                                void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON());
                                return n
                            }(this.parameters.shapes, this.parameters.options, e)
                        }
                    }], [{
                        key: "fromJSON",
                        value: function(e, t) {
                            for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                                var o = t[e.shapes[i]];
                                r.push(o)
                            }
                            var s = e.options.extrudePath;
                            return void 0 !== s && (e.options.extrudePath = (new Rl[s.type]).fromJSON(s)), new n(r, e.options)
                        }
                    }]), n
                }(Or),
                uu = {
                    generateTopUV: function(e, t, n, r, i) {
                        var a = t[3 * n],
                            o = t[3 * n + 1],
                            s = t[3 * r],
                            l = t[3 * r + 1],
                            u = t[3 * i],
                            c = t[3 * i + 1];
                        return [new Bt(a, o), new Bt(s, l), new Bt(u, c)]
                    },
                    generateSideWallUV: function(e, t, n, r, i, a) {
                        var o = t[3 * n],
                            s = t[3 * n + 1],
                            l = t[3 * n + 2],
                            u = t[3 * r],
                            c = t[3 * r + 1],
                            f = t[3 * r + 2],
                            d = t[3 * i],
                            h = t[3 * i + 1],
                            p = t[3 * i + 2],
                            v = t[3 * a],
                            m = t[3 * a + 1],
                            g = t[3 * a + 2];
                        return Math.abs(s - c) < Math.abs(o - u) ? [new Bt(o, 1 - l), new Bt(u, 1 - f), new Bt(d, 1 - p), new Bt(v, 1 - g)] : [new Bt(s, 1 - l), new Bt(c, 1 - f), new Bt(h, 1 - p), new Bt(m, 1 - g)]
                    }
                };
            var cu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 12;
                    d(this, n), (r = t.call(this)).type = "ShapeGeometry", r.parameters = {
                        shapes: e,
                        curveSegments: i
                    };
                    var a = [],
                        o = [],
                        s = [],
                        l = [],
                        u = 0,
                        c = 0;
                    if (!1 === Array.isArray(e)) h(e);
                    else
                        for (var f = 0; f < e.length; f++) h(e[f]), r.addGroup(u, c, f), u += c, c = 0;

                    function h(e) {
                        var t = o.length / 3,
                            n = e.extractPoints(i),
                            r = n.shape,
                            u = n.holes;
                        !1 === au.isClockWise(r) && (r = r.reverse());
                        for (var f = 0, d = u.length; f < d; f++) {
                            var h = u[f];
                            !0 === au.isClockWise(h) && (u[f] = h.reverse())
                        }
                        for (var p = au.triangulateShape(r, u), v = 0, m = u.length; v < m; v++) {
                            var g = u[v];
                            r = r.concat(g)
                        }
                        for (var y = 0, x = r.length; y < x; y++) {
                            var b = r[y];
                            o.push(b.x, b.y, 0), s.push(0, 0, 1), l.push(b.x, b.y)
                        }
                        for (var _ = 0, w = p.length; _ < w; _++) {
                            var S = p[_],
                                M = S[0] + t,
                                k = S[1] + t,
                                E = S[2] + t;
                            a.push(M, k, E), c += 3
                        }
                    }
                    return r.setIndex(a), r.setAttribute("position", new Tr(o, 3)), r.setAttribute("normal", new Tr(s, 3)), r.setAttribute("uv", new Tr(l, 2)), r
                }
                return p(n, [{
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        return function(e, t) {
                            if (t.shapes = [], Array.isArray(e))
                                for (var n = 0, r = e.length; n < r; n++) {
                                    var i = e[n];
                                    t.shapes.push(i.uuid)
                                } else t.shapes.push(e.uuid);
                            return t
                        }(this.parameters.shapes, e)
                    }
                }], [{
                    key: "fromJSON",
                    value: function(e, t) {
                        for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                            var o = t[e.shapes[i]];
                            r.push(o)
                        }
                        return new n(r, e.curveSegments)
                    }
                }]), n
            }(Or);
            var fu = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 32,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 16,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2 * Math.PI,
                        l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                        u = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : Math.PI;
                    d(this, n), (e = t.call(this)).type = "SphereGeometry", e.parameters = {
                        radius: r,
                        widthSegments: i,
                        heightSegments: a,
                        phiStart: o,
                        phiLength: s,
                        thetaStart: l,
                        thetaLength: u
                    }, i = Math.max(3, Math.floor(i)), a = Math.max(2, Math.floor(a));
                    for (var c = Math.min(l + u, Math.PI), f = 0, h = [], p = new $t, v = new $t, m = [], g = [], y = [], x = [], b = 0; b <= a; b++) {
                        var _ = [],
                            w = b / a,
                            S = 0;
                        0 == b && 0 == l ? S = .5 / i : b == a && c == Math.PI && (S = -.5 / i);
                        for (var M = 0; M <= i; M++) {
                            var k = M / i;
                            p.x = -r * Math.cos(o + k * s) * Math.sin(l + w * u), p.y = r * Math.cos(l + w * u), p.z = r * Math.sin(o + k * s) * Math.sin(l + w * u), g.push(p.x, p.y, p.z), v.copy(p).normalize(), y.push(v.x, v.y, v.z), x.push(k + S, 1 - w), _.push(f++)
                        }
                        h.push(_)
                    }
                    for (var E = 0; E < a; E++)
                        for (var T = 0; T < i; T++) {
                            var L = h[E][T + 1],
                                A = h[E][T],
                                C = h[E + 1][T],
                                P = h[E + 1][T + 1];
                            (0 !== E || l > 0) && m.push(L, A, P), (E !== a - 1 || c < Math.PI) && m.push(A, C, P)
                        }
                    return e.setIndex(m), e.setAttribute("position", new Tr(g, 3)), e.setAttribute("normal", new Tr(y, 3)), e.setAttribute("uv", new Tr(x, 2)), e
                }
                return p(n, null, [{
                    key: "fromJSON",
                    value: function(e) {
                        return new n(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength)
                    }
                }]), n
            }(Or);
            var du = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "ShadowMaterial", r.color = new br(0), r.transparent = !0, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this
                    }
                }]), n
            }(hr);
            du.prototype.isShadowMaterial = !0;
            var hu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).defines = {
                        STANDARD: ""
                    }, r.type = "MeshStandardMaterial", r.color = new br(16777215), r.roughness = 1, r.metalness = 0, r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new br(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = 0, r.normalScale = new Bt(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.roughnessMap = null, r.metalnessMap = null, r.alphaMap = null, r.envMap = null, r.envMapIntensity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.flatShading = !1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.defines = {
                            STANDARD: ""
                        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(hr);
            hu.prototype.isMeshStandardMaterial = !0;
            var pu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).defines = {
                        STANDARD: "",
                        PHYSICAL: ""
                    }, r.type = "MeshPhysicalMaterial", r.clearcoat = 0, r.clearcoatMap = null, r.clearcoatRoughness = 0, r.clearcoatRoughnessMap = null, r.clearcoatNormalScale = new Bt(1, 1), r.clearcoatNormalMap = null, r.reflectivity = .5, Object.defineProperty(b(r), "ior", {
                        get: function() {
                            return (1 + .4 * this.reflectivity) / (1 - .4 * this.reflectivity)
                        },
                        set: function(e) {
                            this.reflectivity = It(2.5 * (e - 1) / (e + 1), 0, 1)
                        }
                    }), r.sheen = null, r.transmission = 0, r.transmissionMap = null, r.thickness = .01, r.thicknessMap = null, r.attenuationDistance = 0, r.attenuationTint = new br(1, 1, 1), r.specularIntensity = 1, r.specularIntensityMap = null, r.specularTint = new br(1, 1, 1), r.specularTintMap = null, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.defines = {
                            STANDARD: "",
                            PHYSICAL: ""
                        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.reflectivity = e.reflectivity, e.sheen ? this.sheen = (this.sheen || new br).copy(e.sheen) : this.sheen = null, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationTint.copy(e.attenuationTint), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularTint.copy(e.specularTint), this.specularTintMap = e.specularTintMap, this
                    }
                }]), n
            }(hu);
            pu.prototype.isMeshPhysicalMaterial = !0;
            var vu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "MeshPhongMaterial", r.color = new br(16777215), r.specular = new br(1118481), r.shininess = 30, r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new br(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = 0, r.normalScale = new Bt(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.specularMap = null, r.alphaMap = null, r.envMap = null, r.combine = 0, r.reflectivity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.flatShading = !1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(hr);
            vu.prototype.isMeshPhongMaterial = !0;
            var mu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).defines = {
                        TOON: ""
                    }, r.type = "MeshToonMaterial", r.color = new br(16777215), r.map = null, r.gradientMap = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new br(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = 0, r.normalScale = new Bt(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.alphaMap = null, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this
                    }
                }]), n
            }(hr);
            mu.prototype.isMeshToonMaterial = !0;
            var gu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "MeshNormalMaterial", r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = 0, r.normalScale = new Bt(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.wireframe = !1, r.wireframeLinewidth = 1, r.fog = !1, r.flatShading = !1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(hr);
            gu.prototype.isMeshNormalMaterial = !0;
            var yu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "MeshLambertMaterial", r.color = new br(16777215), r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new br(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.specularMap = null, r.alphaMap = null, r.envMap = null, r.combine = 0, r.reflectivity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this
                    }
                }]), n
            }(hr);
            yu.prototype.isMeshLambertMaterial = !0;
            var xu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).defines = {
                        MATCAP: ""
                    }, r.type = "MeshMatcapMaterial", r.color = new br(16777215), r.matcap = null, r.map = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = 0, r.normalScale = new Bt(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.alphaMap = null, r.flatShading = !1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.defines = {
                            MATCAP: ""
                        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(hr);
            xu.prototype.isMeshMatcapMaterial = !0;
            var bu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).type = "LineDashedMaterial", r.scale = 1, r.dashSize = 3, r.gapSize = 1, r.setValues(e), r
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this
                    }
                }]), n
            }(Xs);
            bu.prototype.isLineDashedMaterial = !0;
            var _u = {
                    arraySlice: function(e, t, n) {
                        return _u.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
                    },
                    convertArray: function(e, t, n) {
                        return !e || !n && e.constructor === t ? e : "number" === typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
                    },
                    isTypedArray: function(e) {
                        return ArrayBuffer.isView(e) && !(e instanceof DataView)
                    },
                    getKeyframeOrder: function(e) {
                        for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r) n[r] = r;
                        return n.sort((function(t, n) {
                            return e[t] - e[n]
                        })), n
                    },
                    sortedArray: function(e, t, n) {
                        for (var r = e.length, i = new e.constructor(r), a = 0, o = 0; o !== r; ++a)
                            for (var s = n[a] * t, l = 0; l !== t; ++l) i[o++] = e[s + l];
                        return i
                    },
                    flattenJSON: function(e, t, n, r) {
                        for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r];) a = e[i++];
                        if (void 0 !== a) {
                            var o = a[r];
                            if (void 0 !== o)
                                if (Array.isArray(o))
                                    do {
                                        void 0 !== (o = a[r]) && (t.push(a.time), n.push.apply(n, o)), a = e[i++]
                                    } while (void 0 !== a);
                                else if (void 0 !== o.toArray)
                                do {
                                    void 0 !== (o = a[r]) && (t.push(a.time), o.toArray(n, n.length)), a = e[i++]
                                } while (void 0 !== a);
                            else
                                do {
                                    void 0 !== (o = a[r]) && (t.push(a.time), n.push(o)), a = e[i++]
                                } while (void 0 !== a)
                        }
                    },
                    subclip: function(e, t, n, r) {
                        var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 30,
                            a = e.clone();
                        a.name = t;
                        for (var o = [], s = 0; s < a.tracks.length; ++s) {
                            for (var l = a.tracks[s], u = l.getValueSize(), c = [], f = [], d = 0; d < l.times.length; ++d) {
                                var h = l.times[d] * i;
                                if (!(h < n || h >= r)) {
                                    c.push(l.times[d]);
                                    for (var p = 0; p < u; ++p) f.push(l.values[d * u + p])
                                }
                            }
                            0 !== c.length && (l.times = _u.convertArray(c, l.times.constructor), l.values = _u.convertArray(f, l.values.constructor), o.push(l))
                        }
                        a.tracks = o;
                        for (var v = 1 / 0, m = 0; m < a.tracks.length; ++m) v > a.tracks[m].times[0] && (v = a.tracks[m].times[0]);
                        for (var g = 0; g < a.tracks.length; ++g) a.tracks[g].shift(-1 * v);
                        return a.resetDuration(), a
                    },
                    makeClipAdditive: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e,
                            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 30;
                        r <= 0 && (r = 30);
                        for (var i = n.tracks.length, a = t / r, o = function(t) {
                                var r = n.tracks[t],
                                    i = r.ValueTypeName;
                                if ("bool" === i || "string" === i) return "continue";
                                var o = e.tracks.find((function(e) {
                                    return e.name === r.name && e.ValueTypeName === i
                                }));
                                if (void 0 === o) return "continue";
                                var s = 0,
                                    l = r.getValueSize();
                                r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (s = l / 3);
                                var u = 0,
                                    c = o.getValueSize();
                                o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (u = c / 3);
                                var f = r.times.length - 1,
                                    d = void 0;
                                if (a <= r.times[0]) {
                                    var h = s,
                                        p = l - s;
                                    d = _u.arraySlice(r.values, h, p)
                                } else if (a >= r.times[f]) {
                                    var v = f * l + s,
                                        m = v + l - s;
                                    d = _u.arraySlice(r.values, v, m)
                                } else {
                                    var g = r.createInterpolant(),
                                        y = s,
                                        x = l - s;
                                    g.evaluate(a), d = _u.arraySlice(g.resultBuffer, y, x)
                                }
                                "quaternion" === i && (new Jt).fromArray(d).normalize().conjugate().toArray(d);
                                for (var b = o.times.length, _ = 0; _ < b; ++_) {
                                    var w = _ * c + u;
                                    if ("quaternion" === i) Jt.multiplyQuaternionsFlat(o.values, w, d, 0, o.values, w);
                                    else
                                        for (var S = c - 2 * u, M = 0; M < S; ++M) o.values[w + M] -= d[M]
                                }
                            }, s = 0; s < i; ++s) o(s);
                        return e.blendMode = xt, e
                    }
                },
                wu = function() {
                    function e(t, n, r, i) {
                        d(this, e), this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = void 0 !== i ? i : new n.constructor(r), this.sampleValues = n, this.valueSize = r, this.settings = null, this.DefaultSettings_ = {}
                    }
                    return p(e, [{
                        key: "evaluate",
                        value: function(e) {
                            var t = this.parameterPositions,
                                n = this._cachedIndex,
                                r = t[n],
                                i = t[n - 1];
                            e: {
                                t: {
                                    var a;n: {
                                        r: if (!(e < r)) {
                                            for (var o = n + 2;;) {
                                                if (void 0 === r) {
                                                    if (e < i) break r;
                                                    return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, i)
                                                }
                                                if (n === o) break;
                                                if (i = r, e < (r = t[++n])) break t
                                            }
                                            a = t.length;
                                            break n
                                        }if (e >= i) break e;
                                        var s = t[1];e < s && (n = 2, i = s);
                                        for (var l = n - 2;;) {
                                            if (void 0 === i) return this._cachedIndex = 0, this.beforeStart_(0, e, r);
                                            if (n === l) break;
                                            if (r = i, e >= (i = t[--n - 1])) break t
                                        }
                                        a = n,
                                        n = 0
                                    }
                                    for (; n < a;) {
                                        var u = n + a >>> 1;
                                        e < t[u] ? a = u : n = u + 1
                                    }
                                    if (r = t[n], void 0 === (i = t[n - 1])) return this._cachedIndex = 0, this.beforeStart_(0, e, r);
                                    if (void 0 === r) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, i, e)
                                }
                                this._cachedIndex = n,
                                this.intervalChanged_(n, i, r)
                            }
                            return this.interpolate_(n, i, e, r)
                        }
                    }, {
                        key: "getSettings_",
                        value: function() {
                            return this.settings || this.DefaultSettings_
                        }
                    }, {
                        key: "copySampleValue_",
                        value: function(e) {
                            for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, a = 0; a !== r; ++a) t[a] = n[i + a];
                            return t
                        }
                    }, {
                        key: "interpolate_",
                        value: function() {
                            throw new Error("call to abstract method")
                        }
                    }, {
                        key: "intervalChanged_",
                        value: function() {}
                    }]), e
                }();
            wu.prototype.beforeStart_ = wu.prototype.copySampleValue_, wu.prototype.afterEnd_ = wu.prototype.copySampleValue_;
            var Su = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        var o;
                        return d(this, n), (o = t.call(this, e, r, i, a))._weightPrev = -0, o._offsetPrev = -0, o._weightNext = -0, o._offsetNext = -0, o.DefaultSettings_ = {
                            endingStart: vt,
                            endingEnd: vt
                        }, o
                    }
                    return p(n, [{
                        key: "intervalChanged_",
                        value: function(e, t, n) {
                            var r = this.parameterPositions,
                                i = e - 2,
                                a = e + 1,
                                o = r[i],
                                s = r[a];
                            if (void 0 === o) switch (this.getSettings_().endingStart) {
                                case mt:
                                    i = e, o = 2 * t - n;
                                    break;
                                case gt:
                                    o = t + r[i = r.length - 2] - r[i + 1];
                                    break;
                                default:
                                    i = e, o = n
                            }
                            if (void 0 === s) switch (this.getSettings_().endingEnd) {
                                case mt:
                                    a = e, s = 2 * n - t;
                                    break;
                                case gt:
                                    a = 1, s = n + r[1] - r[0];
                                    break;
                                default:
                                    a = e - 1, s = t
                            }
                            var l = .5 * (n - t),
                                u = this.valueSize;
                            this._weightPrev = l / (t - o), this._weightNext = l / (s - n), this._offsetPrev = i * u, this._offsetNext = a * u
                        }
                    }, {
                        key: "interpolate_",
                        value: function(e, t, n, r) {
                            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = this._offsetPrev, c = this._offsetNext, f = this._weightPrev, d = this._weightNext, h = (n - t) / (r - t), p = h * h, v = p * h, m = -f * v + 2 * f * p - f * h, g = (1 + f) * v + (-1.5 - 2 * f) * p + (-.5 + f) * h + 1, y = (-1 - d) * v + (1.5 + d) * p + .5 * h, x = d * v - d * p, b = 0; b !== o; ++b) i[b] = m * a[u + b] + g * a[l + b] + y * a[s + b] + x * a[c + b];
                            return i
                        }
                    }]), n
                }(wu),
                Mu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        return d(this, n), t.call(this, e, r, i, a)
                    }
                    return p(n, [{
                        key: "interpolate_",
                        value: function(e, t, n, r) {
                            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = (n - t) / (r - t), c = 1 - u, f = 0; f !== o; ++f) i[f] = a[l + f] * c + a[s + f] * u;
                            return i
                        }
                    }]), n
                }(wu),
                ku = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        return d(this, n), t.call(this, e, r, i, a)
                    }
                    return p(n, [{
                        key: "interpolate_",
                        value: function(e) {
                            return this.copySampleValue_(e - 1)
                        }
                    }]), n
                }(wu),
                Eu = function() {
                    function e(t, n, r, i) {
                        if (d(this, e), void 0 === t) throw new Error("THREE.KeyframeTrack: track name is undefined");
                        if (void 0 === n || 0 === n.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
                        this.name = t, this.times = _u.convertArray(n, this.TimeBufferType), this.values = _u.convertArray(r, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation)
                    }
                    return p(e, [{
                        key: "InterpolantFactoryMethodDiscrete",
                        value: function(e) {
                            return new ku(this.times, this.values, this.getValueSize(), e)
                        }
                    }, {
                        key: "InterpolantFactoryMethodLinear",
                        value: function(e) {
                            return new Mu(this.times, this.values, this.getValueSize(), e)
                        }
                    }, {
                        key: "InterpolantFactoryMethodSmooth",
                        value: function(e) {
                            return new Su(this.times, this.values, this.getValueSize(), e)
                        }
                    }, {
                        key: "setInterpolation",
                        value: function(e) {
                            var t;
                            switch (e) {
                                case dt:
                                    t = this.InterpolantFactoryMethodDiscrete;
                                    break;
                                case ht:
                                    t = this.InterpolantFactoryMethodLinear;
                                    break;
                                case pt:
                                    t = this.InterpolantFactoryMethodSmooth
                            }
                            if (void 0 === t) {
                                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                                if (void 0 === this.createInterpolant) {
                                    if (e === this.DefaultInterpolation) throw new Error(n);
                                    this.setInterpolation(this.DefaultInterpolation)
                                }
                                return console.warn("THREE.KeyframeTrack:", n), this
                            }
                            return this.createInterpolant = t, this
                        }
                    }, {
                        key: "getInterpolation",
                        value: function() {
                            switch (this.createInterpolant) {
                                case this.InterpolantFactoryMethodDiscrete:
                                    return dt;
                                case this.InterpolantFactoryMethodLinear:
                                    return ht;
                                case this.InterpolantFactoryMethodSmooth:
                                    return pt
                            }
                        }
                    }, {
                        key: "getValueSize",
                        value: function() {
                            return this.values.length / this.times.length
                        }
                    }, {
                        key: "shift",
                        value: function(e) {
                            if (0 !== e)
                                for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] += e;
                            return this
                        }
                    }, {
                        key: "scale",
                        value: function(e) {
                            if (1 !== e)
                                for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] *= e;
                            return this
                        }
                    }, {
                        key: "trim",
                        value: function(e, t) {
                            for (var n = this.times, r = n.length, i = 0, a = r - 1; i !== r && n[i] < e;) ++i;
                            for (; - 1 !== a && n[a] > t;) --a;
                            if (++a, 0 !== i || a !== r) {
                                i >= a && (i = (a = Math.max(a, 1)) - 1);
                                var o = this.getValueSize();
                                this.times = _u.arraySlice(n, i, a), this.values = _u.arraySlice(this.values, i * o, a * o)
                            }
                            return this
                        }
                    }, {
                        key: "validate",
                        value: function() {
                            var e = !0,
                                t = this.getValueSize();
                            t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
                            var n = this.times,
                                r = this.values,
                                i = n.length;
                            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
                            for (var a = null, o = 0; o !== i; o++) {
                                var s = n[o];
                                if ("number" === typeof s && isNaN(s)) {
                                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, s), e = !1;
                                    break
                                }
                                if (null !== a && a > s) {
                                    console.error("THREE.KeyframeTrack: Out of order keys.", this, o, s, a), e = !1;
                                    break
                                }
                                a = s
                            }
                            if (void 0 !== r && _u.isTypedArray(r))
                                for (var l = 0, u = r.length; l !== u; ++l) {
                                    var c = r[l];
                                    if (isNaN(c)) {
                                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, l, c), e = !1;
                                        break
                                    }
                                }
                            return e
                        }
                    }, {
                        key: "optimize",
                        value: function() {
                            for (var e = _u.arraySlice(this.times), t = _u.arraySlice(this.values), n = this.getValueSize(), r = this.getInterpolation() === pt, i = e.length - 1, a = 1, o = 1; o < i; ++o) {
                                var s = !1,
                                    l = e[o];
                                if (l !== e[o + 1] && (1 !== o || l !== e[0]))
                                    if (r) s = !0;
                                    else
                                        for (var u = o * n, c = u - n, f = u + n, d = 0; d !== n; ++d) {
                                            var h = t[u + d];
                                            if (h !== t[c + d] || h !== t[f + d]) {
                                                s = !0;
                                                break
                                            }
                                        }
                                if (s) {
                                    if (o !== a) {
                                        e[a] = e[o];
                                        for (var p = o * n, v = a * n, m = 0; m !== n; ++m) t[v + m] = t[p + m]
                                    }++a
                                }
                            }
                            if (i > 0) {
                                e[a] = e[i];
                                for (var g = i * n, y = a * n, x = 0; x !== n; ++x) t[y + x] = t[g + x];
                                ++a
                            }
                            return a !== e.length ? (this.times = _u.arraySlice(e, 0, a), this.values = _u.arraySlice(t, 0, a * n)) : (this.times = e, this.values = t), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            var e = _u.arraySlice(this.times, 0),
                                t = _u.arraySlice(this.values, 0),
                                n = new(0, this.constructor)(this.name, e, t);
                            return n.createInterpolant = this.createInterpolant, n
                        }
                    }], [{
                        key: "toJSON",
                        value: function(e) {
                            var t, n = e.constructor;
                            if (n.toJSON !== this.toJSON) t = n.toJSON(e);
                            else {
                                t = {
                                    name: e.name,
                                    times: _u.convertArray(e.times, Array),
                                    values: _u.convertArray(e.values, Array)
                                };
                                var r = e.getInterpolation();
                                r !== e.DefaultInterpolation && (t.interpolation = r)
                            }
                            return t.type = e.ValueTypeName, t
                        }
                    }]), e
                }();
            Eu.prototype.TimeBufferType = Float32Array, Eu.prototype.ValueBufferType = Float32Array, Eu.prototype.DefaultInterpolation = ht;
            var Tu = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.apply(this, arguments)
                }
                return p(n)
            }(Eu);
            Tu.prototype.ValueTypeName = "bool", Tu.prototype.ValueBufferType = Array, Tu.prototype.DefaultInterpolation = dt, Tu.prototype.InterpolantFactoryMethodLinear = void 0, Tu.prototype.InterpolantFactoryMethodSmooth = void 0;
            var Lu = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.apply(this, arguments)
                }
                return p(n)
            }(Eu);
            Lu.prototype.ValueTypeName = "color";
            var Au = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.apply(this, arguments)
                }
                return p(n)
            }(Eu);
            Au.prototype.ValueTypeName = "number";
            var Cu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        return d(this, n), t.call(this, e, r, i, a)
                    }
                    return p(n, [{
                        key: "interpolate_",
                        value: function(e, t, n, r) {
                            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = (n - t) / (r - t), l = e * o, u = l + o; l !== u; l += 4) Jt.slerpFlat(i, 0, a, l - o, a, l, s);
                            return i
                        }
                    }]), n
                }(wu),
                Pu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        return d(this, n), t.apply(this, arguments)
                    }
                    return p(n, [{
                        key: "InterpolantFactoryMethodLinear",
                        value: function(e) {
                            return new Cu(this.times, this.values, this.getValueSize(), e)
                        }
                    }]), n
                }(Eu);
            Pu.prototype.ValueTypeName = "quaternion", Pu.prototype.DefaultInterpolation = ht, Pu.prototype.InterpolantFactoryMethodSmooth = void 0;
            var Ru = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.apply(this, arguments)
                }
                return p(n)
            }(Eu);
            Ru.prototype.ValueTypeName = "string", Ru.prototype.ValueBufferType = Array, Ru.prototype.DefaultInterpolation = dt, Ru.prototype.InterpolantFactoryMethodLinear = void 0, Ru.prototype.InterpolantFactoryMethodSmooth = void 0;
            var Nu = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.apply(this, arguments)
                }
                return p(n)
            }(Eu);
            Nu.prototype.ValueTypeName = "vector";
            var Iu = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1,
                        r = arguments.length > 2 ? arguments[2] : void 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : yt;
                    d(this, e), this.name = t, this.tracks = r, this.duration = n, this.blendMode = i, this.uuid = Nt(), this.duration < 0 && this.resetDuration()
                }
                return p(e, [{
                    key: "resetDuration",
                    value: function() {
                        for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                            var r = this.tracks[t];
                            e = Math.max(e, r.times[r.times.length - 1])
                        }
                        return this.duration = e, this
                    }
                }, {
                    key: "trim",
                    value: function() {
                        for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
                        return this
                    }
                }, {
                    key: "validate",
                    value: function() {
                        for (var e = !0, t = 0; t < this.tracks.length; t++) e = e && this.tracks[t].validate();
                        return e
                    }
                }, {
                    key: "optimize",
                    value: function() {
                        for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
                        return this
                    }
                }, {
                    key: "clone",
                    value: function() {
                        for (var e = [], t = 0; t < this.tracks.length; t++) e.push(this.tracks[t].clone());
                        return new this.constructor(this.name, this.duration, e, this.blendMode)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.constructor.toJSON(this)
                    }
                }], [{
                    key: "parse",
                    value: function(e) {
                        for (var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, a = n.length; i !== a; ++i) t.push(zu(n[i]).scale(r));
                        var o = new this(e.name, e.duration, t, e.blendMode);
                        return o.uuid = e.uuid, o
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        for (var t = [], n = e.tracks, r = {
                                name: e.name,
                                duration: e.duration,
                                tracks: t,
                                uuid: e.uuid,
                                blendMode: e.blendMode
                            }, i = 0, a = n.length; i !== a; ++i) t.push(Eu.toJSON(n[i]));
                        return r
                    }
                }, {
                    key: "CreateFromMorphTargetSequence",
                    value: function(e, t, n, r) {
                        for (var i = t.length, a = [], o = 0; o < i; o++) {
                            var s = [],
                                l = [];
                            s.push((o + i - 1) % i, o, (o + 1) % i), l.push(0, 1, 0);
                            var u = _u.getKeyframeOrder(s);
                            s = _u.sortedArray(s, 1, u), l = _u.sortedArray(l, 1, u), r || 0 !== s[0] || (s.push(i), l.push(l[0])), a.push(new Au(".morphTargetInfluences[" + t[o].name + "]", s, l).scale(1 / n))
                        }
                        return new this(e, -1, a)
                    }
                }, {
                    key: "findByName",
                    value: function(e, t) {
                        var n = e;
                        if (!Array.isArray(e)) {
                            var r = e;
                            n = r.geometry && r.geometry.animations || r.animations
                        }
                        for (var i = 0; i < n.length; i++)
                            if (n[i].name === t) return n[i];
                        return null
                    }
                }, {
                    key: "CreateClipsFromMorphTargetSequences",
                    value: function(e, t, n) {
                        for (var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length; a < o; a++) {
                            var s = e[a],
                                l = s.name.match(i);
                            if (l && l.length > 1) {
                                var u = l[1],
                                    c = r[u];
                                c || (r[u] = c = []), c.push(s)
                            }
                        }
                        var f = [];
                        for (var d in r) f.push(this.CreateFromMorphTargetSequence(d, r[d], t, n));
                        return f
                    }
                }, {
                    key: "parseAnimation",
                    value: function(e, t) {
                        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
                        for (var n = function(e, t, n, r, i) {
                                if (0 !== n.length) {
                                    var a = [],
                                        o = [];
                                    _u.flattenJSON(n, a, o, r), 0 !== a.length && i.push(new e(t, a, o))
                                }
                            }, r = [], i = e.name || "default", a = e.fps || 30, o = e.blendMode, s = e.length || -1, l = e.hierarchy || [], u = 0; u < l.length; u++) {
                            var c = l[u].keys;
                            if (c && 0 !== c.length)
                                if (c[0].morphTargets) {
                                    var f = {},
                                        d = void 0;
                                    for (d = 0; d < c.length; d++)
                                        if (c[d].morphTargets)
                                            for (var h = 0; h < c[d].morphTargets.length; h++) f[c[d].morphTargets[h]] = -1;
                                    for (var p in f) {
                                        for (var v = [], m = [], g = 0; g !== c[d].morphTargets.length; ++g) {
                                            var y = c[d];
                                            v.push(y.time), m.push(y.morphTarget === p ? 1 : 0)
                                        }
                                        r.push(new Au(".morphTargetInfluence[" + p + "]", v, m))
                                    }
                                    s = f.length * (a || 1)
                                } else {
                                    var x = ".bones[" + t[u].name + "]";
                                    n(Nu, x + ".position", c, "pos", r), n(Pu, x + ".quaternion", c, "rot", r), n(Nu, x + ".scale", c, "scl", r)
                                }
                        }
                        return 0 === r.length ? null : new this(i, s, r, o)
                    }
                }]), e
            }();

            function zu(e) {
                if (void 0 === e.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
                var t = function(e) {
                    switch (e.toLowerCase()) {
                        case "scalar":
                        case "double":
                        case "float":
                        case "number":
                        case "integer":
                            return Au;
                        case "vector":
                        case "vector2":
                        case "vector3":
                        case "vector4":
                            return Nu;
                        case "color":
                            return Lu;
                        case "quaternion":
                            return Pu;
                        case "bool":
                        case "boolean":
                            return Tu;
                        case "string":
                            return Ru
                    }
                    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
                }(e.type);
                if (void 0 === e.times) {
                    var n = [],
                        r = [];
                    _u.flattenJSON(e.keys, n, r, "value"), e.times = n, e.values = r
                }
                return void 0 !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation)
            }
            var Ou = {
                    enabled: !1,
                    files: {},
                    add: function(e, t) {
                        !1 !== this.enabled && (this.files[e] = t)
                    },
                    get: function(e) {
                        if (!1 !== this.enabled) return this.files[e]
                    },
                    remove: function(e) {
                        delete this.files[e]
                    },
                    clear: function() {
                        this.files = {}
                    }
                },
                Du = p((function e(t, n, r) {
                    d(this, e);
                    var i = this,
                        a = !1,
                        o = 0,
                        s = 0,
                        l = void 0,
                        u = [];
                    this.onStart = void 0, this.onLoad = t, this.onProgress = n, this.onError = r, this.itemStart = function(e) {
                        s++, !1 === a && void 0 !== i.onStart && i.onStart(e, o, s), a = !0
                    }, this.itemEnd = function(e) {
                        o++, void 0 !== i.onProgress && i.onProgress(e, o, s), o === s && (a = !1, void 0 !== i.onLoad && i.onLoad())
                    }, this.itemError = function(e) {
                        void 0 !== i.onError && i.onError(e)
                    }, this.resolveURL = function(e) {
                        return l ? l(e) : e
                    }, this.setURLModifier = function(e) {
                        return l = e, this
                    }, this.addHandler = function(e, t) {
                        return u.push(e, t), this
                    }, this.removeHandler = function(e) {
                        var t = u.indexOf(e);
                        return -1 !== t && u.splice(t, 2), this
                    }, this.getHandler = function(e) {
                        for (var t = 0, n = u.length; t < n; t += 2) {
                            var r = u[t],
                                i = u[t + 1];
                            if (r.global && (r.lastIndex = 0), r.test(e)) return i
                        }
                        return null
                    }
                })),
                Fu = new Du,
                Bu = function() {
                    function e(t) {
                        d(this, e), this.manager = void 0 !== t ? t : Fu, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {}
                    }
                    return p(e, [{
                        key: "load",
                        value: function() {}
                    }, {
                        key: "loadAsync",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r, i) {
                                n.load(e, r, t, i)
                            }))
                        }
                    }, {
                        key: "parse",
                        value: function() {}
                    }, {
                        key: "setCrossOrigin",
                        value: function(e) {
                            return this.crossOrigin = e, this
                        }
                    }, {
                        key: "setWithCredentials",
                        value: function(e) {
                            return this.withCredentials = e, this
                        }
                    }, {
                        key: "setPath",
                        value: function(e) {
                            return this.path = e, this
                        }
                    }, {
                        key: "setResourcePath",
                        value: function(e) {
                            return this.resourcePath = e, this
                        }
                    }, {
                        key: "setRequestHeader",
                        value: function(e) {
                            return this.requestHeader = e, this
                        }
                    }]), e
                }(),
                Uu = {},
                Hu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        return d(this, n), t.call(this, e)
                    }
                    return p(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                            var i = this,
                                a = Ou.get(e);
                            if (void 0 !== a) return i.manager.itemStart(e), setTimeout((function() {
                                t && t(a), i.manager.itemEnd(e)
                            }), 0), a;
                            if (void 0 === Uu[e]) {
                                var o, s = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                                if (s) {
                                    var l = s[1],
                                        u = !!s[2],
                                        c = s[3];
                                    c = decodeURIComponent(c), u && (c = atob(c));
                                    try {
                                        var f, d = (this.responseType || "").toLowerCase();
                                        switch (d) {
                                            case "arraybuffer":
                                            case "blob":
                                                for (var h = new Uint8Array(c.length), p = 0; p < c.length; p++) h[p] = c.charCodeAt(p);
                                                f = "blob" === d ? new Blob([h.buffer], {
                                                    type: l
                                                }) : h.buffer;
                                                break;
                                            case "document":
                                                var v = new DOMParser;
                                                f = v.parseFromString(c, l);
                                                break;
                                            case "json":
                                                f = JSON.parse(c);
                                                break;
                                            default:
                                                f = c
                                        }
                                        setTimeout((function() {
                                            t && t(f), i.manager.itemEnd(e)
                                        }), 0)
                                    } catch (g) {
                                        setTimeout((function() {
                                            r && r(g), i.manager.itemError(e), i.manager.itemEnd(e)
                                        }), 0)
                                    }
                                } else {
                                    for (var m in Uu[e] = [], Uu[e].push({
                                            onLoad: t,
                                            onProgress: n,
                                            onError: r
                                        }), (o = new XMLHttpRequest).open("GET", e, !0), o.addEventListener("load", (function(t) {
                                            var n = this.response,
                                                r = Uu[e];
                                            if (delete Uu[e], 200 === this.status || 0 === this.status) {
                                                0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."), Ou.add(e, n);
                                                for (var a = 0, o = r.length; a < o; a++) {
                                                    var s = r[a];
                                                    s.onLoad && s.onLoad(n)
                                                }
                                                i.manager.itemEnd(e)
                                            } else {
                                                for (var l = 0, u = r.length; l < u; l++) {
                                                    var c = r[l];
                                                    c.onError && c.onError(t)
                                                }
                                                i.manager.itemError(e), i.manager.itemEnd(e)
                                            }
                                        }), !1), o.addEventListener("progress", (function(t) {
                                            for (var n = Uu[e], r = 0, i = n.length; r < i; r++) {
                                                var a = n[r];
                                                a.onProgress && a.onProgress(t)
                                            }
                                        }), !1), o.addEventListener("error", (function(t) {
                                            var n = Uu[e];
                                            delete Uu[e];
                                            for (var r = 0, a = n.length; r < a; r++) {
                                                var o = n[r];
                                                o.onError && o.onError(t)
                                            }
                                            i.manager.itemError(e), i.manager.itemEnd(e)
                                        }), !1), o.addEventListener("abort", (function(t) {
                                            var n = Uu[e];
                                            delete Uu[e];
                                            for (var r = 0, a = n.length; r < a; r++) {
                                                var o = n[r];
                                                o.onError && o.onError(t)
                                            }
                                            i.manager.itemError(e), i.manager.itemEnd(e)
                                        }), !1), void 0 !== this.responseType && (o.responseType = this.responseType), void 0 !== this.withCredentials && (o.withCredentials = this.withCredentials), o.overrideMimeType && o.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) o.setRequestHeader(m, this.requestHeader[m]);
                                    o.send(null)
                                }
                                return i.manager.itemStart(e), o
                            }
                            Uu[e].push({
                                onLoad: t,
                                onProgress: n,
                                onError: r
                            })
                        }
                    }, {
                        key: "setResponseType",
                        value: function(e) {
                            return this.responseType = e, this
                        }
                    }, {
                        key: "setMimeType",
                        value: function(e) {
                            return this.mimeType = e, this
                        }
                    }]), n
                }(Bu),
                Vu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        return d(this, n), t.call(this, e)
                    }
                    return p(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                            var i = this,
                                a = Ou.get(e);
                            if (void 0 !== a) return i.manager.itemStart(e), setTimeout((function() {
                                t && t(a), i.manager.itemEnd(e)
                            }), 0), a;
                            var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");

                            function s() {
                                o.removeEventListener("load", s, !1), o.removeEventListener("error", l, !1), Ou.add(e, this), t && t(this), i.manager.itemEnd(e)
                            }

                            function l(t) {
                                o.removeEventListener("load", s, !1), o.removeEventListener("error", l, !1), r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                            }
                            return o.addEventListener("load", s, !1), o.addEventListener("error", l, !1), "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin), i.manager.itemStart(e), o.src = e, o
                        }
                    }]), n
                }(Bu),
                Gu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        return d(this, n), t.call(this, e)
                    }
                    return p(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = new fi,
                                a = new Vu(this.manager);
                            a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
                            var o = 0;

                            function s(n) {
                                a.load(e[n], (function(e) {
                                    i.images[n] = e, 6 === ++o && (i.needsUpdate = !0, t && t(i))
                                }), void 0, r)
                            }
                            for (var l = 0; l < e.length; ++l) s(l);
                            return i
                        }
                    }]), n
                }(Bu),
                Wu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        return d(this, n), t.call(this, e)
                    }
                    return p(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = new Wt,
                                a = new Vu(this.manager);
                            return a.setCrossOrigin(this.crossOrigin), a.setPath(this.path), a.load(e, (function(n) {
                                i.image = n;
                                var r = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                                i.format = r ? lt : ut, i.needsUpdate = !0, void 0 !== t && t(i)
                            }), n, r), i
                        }
                    }]), n
                }(Bu),
                ju = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return d(this, n), (e = t.call(this)).type = "CurvePath", e.curves = [], e.autoClose = !1, e
                    }
                    return p(n, [{
                        key: "add",
                        value: function(e) {
                            this.curves.push(e)
                        }
                    }, {
                        key: "closePath",
                        value: function() {
                            var e = this.curves[0].getPoint(0),
                                t = this.curves[this.curves.length - 1].getPoint(1);
                            e.equals(t) || this.curves.push(new Tl(t, e))
                        }
                    }, {
                        key: "getPoint",
                        value: function(e) {
                            for (var t = e * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length;) {
                                if (n[r] >= t) {
                                    var i = n[r] - t,
                                        a = this.curves[r],
                                        o = a.getLength(),
                                        s = 0 === o ? 0 : 1 - i / o;
                                    return a.getPointAt(s)
                                }
                                r++
                            }
                            return null
                        }
                    }, {
                        key: "getLength",
                        value: function() {
                            var e = this.getCurveLengths();
                            return e[e.length - 1]
                        }
                    }, {
                        key: "updateArcLengths",
                        value: function() {
                            this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths()
                        }
                    }, {
                        key: "getCurveLengths",
                        value: function() {
                            if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
                            for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++) t += this.curves[n].getLength(), e.push(t);
                            return this.cacheLengths = e, e
                        }
                    }, {
                        key: "getSpacedPoints",
                        value: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 40, t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
                            return this.autoClose && t.push(t[0]), t
                        }
                    }, {
                        key: "getPoints",
                        value: function() {
                            for (var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 12, n = [], r = 0, i = this.curves; r < i.length; r++)
                                for (var a = i[r], o = a && a.isEllipseCurve ? 2 * t : a && (a.isLineCurve || a.isLineCurve3) ? 1 : a && a.isSplineCurve ? t * a.points.length : t, s = a.getPoints(o), l = 0; l < s.length; l++) {
                                    var u = s[l];
                                    e && e.equals(u) || (n.push(u), e = u)
                                }
                            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            Ue(g(n.prototype), "copy", this).call(this, e), this.curves = [];
                            for (var t = 0, r = e.curves.length; t < r; t++) {
                                var i = e.curves[t];
                                this.curves.push(i.clone())
                            }
                            return this.autoClose = e.autoClose, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            e.autoClose = this.autoClose, e.curves = [];
                            for (var t = 0, r = this.curves.length; t < r; t++) {
                                var i = this.curves[t];
                                e.curves.push(i.toJSON())
                            }
                            return e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            Ue(g(n.prototype), "fromJSON", this).call(this, e), this.autoClose = e.autoClose, this.curves = [];
                            for (var t = 0, r = e.curves.length; t < r; t++) {
                                var i = e.curves[t];
                                this.curves.push((new Rl[i.type]).fromJSON(i))
                            }
                            return this
                        }
                    }]), n
                }(hl),
                qu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return d(this, n), (r = t.call(this)).type = "Path", r.currentPoint = new Bt, e && r.setFromPoints(e), r
                    }
                    return p(n, [{
                        key: "setFromPoints",
                        value: function(e) {
                            this.moveTo(e[0].x, e[0].y);
                            for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
                            return this
                        }
                    }, {
                        key: "moveTo",
                        value: function(e, t) {
                            return this.currentPoint.set(e, t), this
                        }
                    }, {
                        key: "lineTo",
                        value: function(e, t) {
                            var n = new Tl(this.currentPoint.clone(), new Bt(e, t));
                            return this.curves.push(n), this.currentPoint.set(e, t), this
                        }
                    }, {
                        key: "quadraticCurveTo",
                        value: function(e, t, n, r) {
                            var i = new Al(this.currentPoint.clone(), new Bt(e, t), new Bt(n, r));
                            return this.curves.push(i), this.currentPoint.set(n, r), this
                        }
                    }, {
                        key: "bezierCurveTo",
                        value: function(e, t, n, r, i, a) {
                            var o = new kl(this.currentPoint.clone(), new Bt(e, t), new Bt(n, r), new Bt(i, a));
                            return this.curves.push(o), this.currentPoint.set(i, a), this
                        }
                    }, {
                        key: "splineThru",
                        value: function(e) {
                            var t = [this.currentPoint.clone()].concat(e),
                                n = new Pl(t);
                            return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this
                        }
                    }, {
                        key: "arc",
                        value: function(e, t, n, r, i, a) {
                            var o = this.currentPoint.x,
                                s = this.currentPoint.y;
                            return this.absarc(e + o, t + s, n, r, i, a), this
                        }
                    }, {
                        key: "absarc",
                        value: function(e, t, n, r, i, a) {
                            return this.absellipse(e, t, n, n, r, i, a), this
                        }
                    }, {
                        key: "ellipse",
                        value: function(e, t, n, r, i, a, o, s) {
                            var l = this.currentPoint.x,
                                u = this.currentPoint.y;
                            return this.absellipse(e + l, t + u, n, r, i, a, o, s), this
                        }
                    }, {
                        key: "absellipse",
                        value: function(e, t, n, r, i, a, o, s) {
                            var l = new pl(e, t, n, r, i, a, o, s);
                            if (this.curves.length > 0) {
                                var u = l.getPoint(0);
                                u.equals(this.currentPoint) || this.lineTo(u.x, u.y)
                            }
                            this.curves.push(l);
                            var c = l.getPoint(1);
                            return this.currentPoint.copy(c), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.currentPoint.copy(e.currentPoint), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            return e.currentPoint = this.currentPoint.toArray(), e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return Ue(g(n.prototype), "fromJSON", this).call(this, e), this.currentPoint.fromArray(e.currentPoint), this
                        }
                    }]), n
                }(ju),
                Xu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return d(this, n), (r = t.call(this, e)).uuid = Nt(), r.type = "Shape", r.holes = [], r
                    }
                    return p(n, [{
                        key: "getPointsHoles",
                        value: function(e) {
                            for (var t = [], n = 0, r = this.holes.length; n < r; n++) t[n] = this.holes[n].getPoints(e);
                            return t
                        }
                    }, {
                        key: "extractPoints",
                        value: function(e) {
                            return {
                                shape: this.getPoints(e),
                                holes: this.getPointsHoles(e)
                            }
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            Ue(g(n.prototype), "copy", this).call(this, e), this.holes = [];
                            for (var t = 0, r = e.holes.length; t < r; t++) {
                                var i = e.holes[t];
                                this.holes.push(i.clone())
                            }
                            return this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this);
                            e.uuid = this.uuid, e.holes = [];
                            for (var t = 0, r = this.holes.length; t < r; t++) {
                                var i = this.holes[t];
                                e.holes.push(i.toJSON())
                            }
                            return e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            Ue(g(n.prototype), "fromJSON", this).call(this, e), this.uuid = e.uuid, this.holes = [];
                            for (var t = 0, r = e.holes.length; t < r; t++) {
                                var i = e.holes[t];
                                this.holes.push((new qu).fromJSON(i))
                            }
                            return this
                        }
                    }]), n
                }(qu),
                Yu = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                        return d(this, n), (r = t.call(this)).type = "Light", r.color = new br(e), r.intensity = i, r
                    }
                    return p(n, [{
                        key: "dispose",
                        value: function() {}
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                            return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.penumbra && (t.object.penumbra = this.penumbra), void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t
                        }
                    }]), n
                }(er);
            Yu.prototype.isLight = !0;
            var Zu = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    return d(this, n), (a = t.call(this, e, i)).type = "HemisphereLight", a.position.copy(er.DefaultUp), a.updateMatrix(), a.groundColor = new br(r), a
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Yu.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this
                    }
                }]), n
            }(Yu);
            Zu.prototype.isHemisphereLight = !0;
            var Ju = new An,
                $u = new $t,
                Qu = new $t,
                Ku = function() {
                    function e(t) {
                        d(this, e), this.camera = t, this.bias = 0, this.normalBias = 0, this.radius = 1, this.mapSize = new Bt(512, 512), this.map = null, this.mapPass = null, this.matrix = new An, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new xi, this._frameExtents = new Bt(1, 1), this._viewportCount = 1, this._viewports = [new qt(0, 0, 1, 1)]
                    }
                    return p(e, [{
                        key: "getViewportCount",
                        value: function() {
                            return this._viewportCount
                        }
                    }, {
                        key: "getFrustum",
                        value: function() {
                            return this._frustum
                        }
                    }, {
                        key: "updateMatrices",
                        value: function(e) {
                            var t = this.camera,
                                n = this.matrix;
                            $u.setFromMatrixPosition(e.matrixWorld), t.position.copy($u), Qu.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(Qu), t.updateMatrixWorld(), Ju.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(Ju), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse)
                        }
                    }, {
                        key: "getViewport",
                        value: function(e) {
                            return this._viewports[e]
                        }
                    }, {
                        key: "getFrameExtents",
                        value: function() {
                            return this._frameExtents
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose()
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {};
                            return 0 !== this.bias && (e.bias = this.bias), 0 !== this.normalBias && (e.normalBias = this.normalBias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e
                        }
                    }]), e
                }(),
                ec = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return d(this, n), (e = t.call(this, new li(50, 1, .5, 500))).focus = 1, e
                    }
                    return p(n, [{
                        key: "updateMatrices",
                        value: function(e) {
                            var t = this.camera,
                                r = 2 * Rt * e.angle * this.focus,
                                i = this.mapSize.width / this.mapSize.height,
                                a = e.distance || t.far;
                            r === t.fov && i === t.aspect && a === t.far || (t.fov = r, t.aspect = i, t.far = a, t.updateProjectionMatrix()), Ue(g(n.prototype), "updateMatrices", this).call(this, e)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.focus = e.focus, this
                        }
                    }]), n
                }(Ku);
            ec.prototype.isSpotLightShadow = !0;
            var tc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Math.PI / 3,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                        l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1;
                    return d(this, n), (i = t.call(this, e, r)).type = "SpotLight", i.position.copy(er.DefaultUp), i.updateMatrix(), i.target = new er, i.distance = a, i.angle = o, i.penumbra = s, i.decay = l, i.shadow = new ec, i
                }
                return p(n, [{
                    key: "power",
                    get: function() {
                        return this.intensity * Math.PI
                    },
                    set: function(e) {
                        this.intensity = e / Math.PI
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this.shadow.dispose()
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
                    }
                }]), n
            }(Yu);
            tc.prototype.isSpotLight = !0;
            var nc = new An,
                rc = new $t,
                ic = new $t,
                ac = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return d(this, n), (e = t.call(this, new li(90, 1, .5, 500)))._frameExtents = new Bt(4, 2), e._viewportCount = 6, e._viewports = [new qt(2, 1, 1, 1), new qt(0, 1, 1, 1), new qt(3, 1, 1, 1), new qt(1, 1, 1, 1), new qt(3, 0, 1, 1), new qt(1, 0, 1, 1)], e._cubeDirections = [new $t(1, 0, 0), new $t(-1, 0, 0), new $t(0, 0, 1), new $t(0, 0, -1), new $t(0, 1, 0), new $t(0, -1, 0)], e._cubeUps = [new $t(0, 1, 0), new $t(0, 1, 0), new $t(0, 1, 0), new $t(0, 1, 0), new $t(0, 0, 1), new $t(0, 0, -1)], e
                    }
                    return p(n, [{
                        key: "updateMatrices",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                n = this.camera,
                                r = this.matrix,
                                i = e.distance || n.far;
                            i !== n.far && (n.far = i, n.updateProjectionMatrix()), rc.setFromMatrixPosition(e.matrixWorld), n.position.copy(rc), ic.copy(n.position), ic.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(ic), n.updateMatrixWorld(), r.makeTranslation(-rc.x, -rc.y, -rc.z), nc.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(nc)
                        }
                    }]), n
                }(Ku);
            ac.prototype.isPointLightShadow = !0;
            var oc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return d(this, n), (i = t.call(this, e, r)).type = "PointLight", i.distance = a, i.decay = o, i.shadow = new ac, i
                }
                return p(n, [{
                    key: "power",
                    get: function() {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function(e) {
                        this.intensity = e / (4 * Math.PI)
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this.shadow.dispose()
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this
                    }
                }]), n
            }(Yu);
            oc.prototype.isPointLight = !0;
            var sc = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    return d(this, n), t.call(this, new Ri(-5, 5, 5, -5, .5, 500))
                }
                return p(n)
            }(Ku);
            sc.prototype.isDirectionalLightShadow = !0;
            var lc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i;
                    return d(this, n), (i = t.call(this, e, r)).type = "DirectionalLight", i.position.copy(er.DefaultUp), i.updateMatrix(), i.target = new er, i.shadow = new sc, i
                }
                return p(n, [{
                    key: "dispose",
                    value: function() {
                        this.shadow.dispose()
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
                    }
                }]), n
            }(Yu);
            lc.prototype.isDirectionalLight = !0;
            var uc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i;
                    return d(this, n), (i = t.call(this, e, r)).type = "AmbientLight", i
                }
                return p(n)
            }(Yu);
            uc.prototype.isAmbientLight = !0;
            var cc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 10;
                    return d(this, n), (i = t.call(this, e, r)).type = "RectAreaLight", i.width = a, i.height = o, i
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.width = e.width, this.height = e.height, this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                        return t.object.width = this.width, t.object.height = this.height, t
                    }
                }]), n
            }(Yu);
            cc.prototype.isRectAreaLight = !0;
            var fc = function() {
                function e() {
                    d(this, e), this.coefficients = [];
                    for (var t = 0; t < 9; t++) this.coefficients.push(new $t)
                }
                return p(e, [{
                    key: "set",
                    value: function(e) {
                        for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
                        return this
                    }
                }, {
                    key: "zero",
                    value: function() {
                        for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
                        return this
                    }
                }, {
                    key: "getAt",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z,
                            a = this.coefficients;
                        return t.copy(a[0]).multiplyScalar(.282095), t.addScaledVector(a[1], .488603 * r), t.addScaledVector(a[2], .488603 * i), t.addScaledVector(a[3], .488603 * n), t.addScaledVector(a[4], n * r * 1.092548), t.addScaledVector(a[5], r * i * 1.092548), t.addScaledVector(a[6], .315392 * (3 * i * i - 1)), t.addScaledVector(a[7], n * i * 1.092548), t.addScaledVector(a[8], .546274 * (n * n - r * r)), t
                    }
                }, {
                    key: "getIrradianceAt",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z,
                            a = this.coefficients;
                        return t.copy(a[0]).multiplyScalar(.886227), t.addScaledVector(a[1], 1.023328 * r), t.addScaledVector(a[2], 1.023328 * i), t.addScaledVector(a[3], 1.023328 * n), t.addScaledVector(a[4], .858086 * n * r), t.addScaledVector(a[5], .858086 * r * i), t.addScaledVector(a[6], .743125 * i * i - .247708), t.addScaledVector(a[7], .858086 * n * i), t.addScaledVector(a[8], .429043 * (n * n - r * r)), t
                    }
                }, {
                    key: "add",
                    value: function(e) {
                        for (var t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
                        return this
                    }
                }, {
                    key: "addScaledSH",
                    value: function(e, t) {
                        for (var n = 0; n < 9; n++) this.coefficients[n].addScaledVector(e.coefficients[n], t);
                        return this
                    }
                }, {
                    key: "scale",
                    value: function(e) {
                        for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
                        return this
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        for (var n = 0; n < 9; n++) this.coefficients[n].lerp(e.coefficients[n], t);
                        return this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        for (var t = 0; t < 9; t++)
                            if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
                        return !0
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.set(e.coefficients)
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).copy(this)
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = this.coefficients, r = 0; r < 9; r++) n[r].fromArray(e, t + 3 * r);
                        return this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = this.coefficients, r = 0; r < 9; r++) n[r].toArray(e, t + 3 * r);
                        return e
                    }
                }], [{
                    key: "getBasisAt",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z;
                        t[0] = .282095, t[1] = .488603 * r, t[2] = .488603 * i, t[3] = .488603 * n, t[4] = 1.092548 * n * r, t[5] = 1.092548 * r * i, t[6] = .315392 * (3 * i * i - 1), t[7] = 1.092548 * n * i, t[8] = .546274 * (n * n - r * r)
                    }
                }]), e
            }();
            fc.prototype.isSphericalHarmonics3 = !0;
            var dc = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new fc,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                    return d(this, n), (e = t.call(this, void 0, i)).sh = r, e
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.sh.copy(e.sh), this
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                        return t.object.sh = this.sh.toArray(), t
                    }
                }]), n
            }(Yu);
            dc.prototype.isLightProbe = !0;
            var hc = function() {
                    function e() {
                        d(this, e)
                    }
                    return p(e, null, [{
                        key: "decodeText",
                        value: function(e) {
                            if ("undefined" !== typeof TextDecoder) return (new TextDecoder).decode(e);
                            for (var t = "", n = 0, r = e.length; n < r; n++) t += String.fromCharCode(e[n]);
                            try {
                                return decodeURIComponent(escape(t))
                            } catch (bm) {
                                return t
                            }
                        }
                    }, {
                        key: "extractUrlBase",
                        value: function(e) {
                            var t = e.lastIndexOf("/");
                            return -1 === t ? "./" : e.substr(0, t + 1)
                        }
                    }]), e
                }(),
                pc = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return d(this, n), (e = t.call(this)).type = "InstancedBufferGeometry", e.instanceCount = 1 / 0, e
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.instanceCount = e.instanceCount, this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = Ue(g(n.prototype), "toJSON", this).call(this, this);
                            return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e
                        }
                    }]), n
                }(Or);
            pc.prototype.isInstancedBufferGeometry = !0;
            var vc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return d(this, n), "number" === typeof i && (o = i, i = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), (a = t.call(this, e, r, i)).meshPerAttribute = o, a
                }
                return p(n, [{
                    key: "copy",
                    value: function(e) {
                        return Ue(g(n.prototype), "copy", this).call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = Ue(g(n.prototype), "toJSON", this).call(this);
                        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e
                    }
                }]), n
            }(Mr);
            vc.prototype.isInstancedBufferAttribute = !0;
            var mc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), r = t.call(this, e), "undefined" === typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" === typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), r.options = {
                        premultiplyAlpha: "none"
                    }, r
                }
                return p(n, [{
                    key: "setOptions",
                    value: function(e) {
                        return this.options = e, this
                    }
                }, {
                    key: "load",
                    value: function(e, t, n, r) {
                        void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                        var i = this,
                            a = Ou.get(e);
                        if (void 0 !== a) return i.manager.itemStart(e), setTimeout((function() {
                            t && t(a), i.manager.itemEnd(e)
                        }), 0), a;
                        var o = {};
                        o.credentials = "anonymous" === this.crossOrigin ? "same-origin" : "include", o.headers = this.requestHeader, fetch(e, o).then((function(e) {
                            return e.blob()
                        })).then((function(e) {
                            return createImageBitmap(e, Object.assign(i.options, {
                                colorSpaceConversion: "none"
                            }))
                        })).then((function(n) {
                            Ou.add(e, n), t && t(n), i.manager.itemEnd(e)
                        })).catch((function(t) {
                            r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                        })), i.manager.itemStart(e)
                    }
                }]), n
            }(Bu);
            mc.prototype.isImageBitmapLoader = !0;
            var gc = function() {
                    function e() {
                        d(this, e), this.type = "ShapePath", this.color = new br, this.subPaths = [], this.currentPath = null
                    }
                    return p(e, [{
                        key: "moveTo",
                        value: function(e, t) {
                            return this.currentPath = new qu, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this
                        }
                    }, {
                        key: "lineTo",
                        value: function(e, t) {
                            return this.currentPath.lineTo(e, t), this
                        }
                    }, {
                        key: "quadraticCurveTo",
                        value: function(e, t, n, r) {
                            return this.currentPath.quadraticCurveTo(e, t, n, r), this
                        }
                    }, {
                        key: "bezierCurveTo",
                        value: function(e, t, n, r, i, a) {
                            return this.currentPath.bezierCurveTo(e, t, n, r, i, a), this
                        }
                    }, {
                        key: "splineThru",
                        value: function(e) {
                            return this.currentPath.splineThru(e), this
                        }
                    }, {
                        key: "toShapes",
                        value: function(e, t) {
                            function n(e) {
                                for (var t = [], n = 0, r = e.length; n < r; n++) {
                                    var i = e[n],
                                        a = new Xu;
                                    a.curves = i.curves, t.push(a)
                                }
                                return t
                            }

                            function r(e, t) {
                                for (var n = t.length, r = !1, i = n - 1, a = 0; a < n; i = a++) {
                                    var o = t[i],
                                        s = t[a],
                                        l = s.x - o.x,
                                        u = s.y - o.y;
                                    if (Math.abs(u) > Number.EPSILON) {
                                        if (u < 0 && (o = t[a], l = -l, s = t[i], u = -u), e.y < o.y || e.y > s.y) continue;
                                        if (e.y === o.y) {
                                            if (e.x === o.x) return !0
                                        } else {
                                            var c = u * (e.x - o.x) - l * (e.y - o.y);
                                            if (0 === c) return !0;
                                            if (c < 0) continue;
                                            r = !r
                                        }
                                    } else {
                                        if (e.y !== o.y) continue;
                                        if (s.x <= e.x && e.x <= o.x || o.x <= e.x && e.x <= s.x) return !0
                                    }
                                }
                                return r
                            }
                            var i, a, o, s = au.isClockWise,
                                l = this.subPaths;
                            if (0 === l.length) return [];
                            if (!0 === t) return n(l);
                            var u = [];
                            if (1 === l.length) return a = l[0], (o = new Xu).curves = a.curves, u.push(o), u;
                            var c = !s(l[0].getPoints());
                            c = e ? !c : c;
                            var f, d, h = [],
                                p = [],
                                v = [],
                                m = 0;
                            p[m] = void 0, v[m] = [];
                            for (var g = 0, y = l.length; g < y; g++) i = s(f = (a = l[g]).getPoints()), (i = e ? !i : i) ? (!c && p[m] && m++, p[m] = {
                                s: new Xu,
                                p: f
                            }, p[m].s.curves = a.curves, c && m++, v[m] = []) : v[m].push({
                                h: a,
                                p: f[0]
                            });
                            if (!p[0]) return n(l);
                            if (p.length > 1) {
                                for (var x = !1, b = [], _ = 0, w = p.length; _ < w; _++) h[_] = [];
                                for (var S = 0, M = p.length; S < M; S++)
                                    for (var k = v[S], E = 0; E < k.length; E++) {
                                        for (var T = k[E], L = !0, A = 0; A < p.length; A++) r(T.p, p[A].p) && (S !== A && b.push({
                                            froms: S,
                                            tos: A,
                                            hole: E
                                        }), L ? (L = !1, h[A].push(T)) : x = !0);
                                        L && h[S].push(T)
                                    }
                                b.length > 0 && (x || (v = h))
                            }
                            for (var C = 0, P = p.length; C < P; C++) {
                                o = p[C].s, u.push(o);
                                for (var R = 0, N = (d = v[C]).length; R < N; R++) o.holes.push(d[R].h)
                            }
                            return u
                        }
                    }]), e
                }(),
                yc = function() {
                    function e(t) {
                        d(this, e), this.type = "Font", this.data = t
                    }
                    return p(e, [{
                        key: "generateShapes",
                        value: function(e) {
                            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 100, n = [], r = xc(e, t, this.data), i = 0, a = r.length; i < a; i++) Array.prototype.push.apply(n, r[i].toShapes());
                            return n
                        }
                    }]), e
                }();

            function xc(e, t, n) {
                for (var r = Array.from(e), i = t / n.resolution, a = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * i, o = [], s = 0, l = 0, u = 0; u < r.length; u++) {
                    var c = r[u];
                    if ("\n" === c) s = 0, l -= a;
                    else {
                        var f = bc(c, i, s, l, n);
                        s += f.offsetX, o.push(f.path)
                    }
                }
                return o
            }

            function bc(e, t, n, r, i) {
                var a = i.glyphs[e] || i.glyphs["?"];
                if (a) {
                    var o, s, l, u, c, f, d, h, p = new gc;
                    if (a.o)
                        for (var v = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), m = 0, g = v.length; m < g;) {
                            switch (v[m++]) {
                                case "m":
                                    o = v[m++] * t + n, s = v[m++] * t + r, p.moveTo(o, s);
                                    break;
                                case "l":
                                    o = v[m++] * t + n, s = v[m++] * t + r, p.lineTo(o, s);
                                    break;
                                case "q":
                                    l = v[m++] * t + n, u = v[m++] * t + r, c = v[m++] * t + n, f = v[m++] * t + r, p.quadraticCurveTo(c, f, l, u);
                                    break;
                                case "b":
                                    l = v[m++] * t + n, u = v[m++] * t + r, c = v[m++] * t + n, f = v[m++] * t + r, d = v[m++] * t + n, h = v[m++] * t + r, p.bezierCurveTo(c, f, d, h, l, u)
                            }
                        }
                    return {
                        offsetX: a.ha * t,
                        path: p
                    }
                }
                console.error('THREE.Font: character "' + e + '" does not exists in font family ' + i.familyName + ".")
            }
            yc.prototype.isFont = !0;
            var _c, wc = function() {
                    return void 0 === _c && (_c = new(window.AudioContext || window.webkitAudioContext)), _c
                },
                Sc = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        return d(this, n), t.call(this, e)
                    }
                    return p(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new Hu(this.manager);
                            a.setResponseType("arraybuffer"), a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, (function(n) {
                                try {
                                    var a = n.slice(0);
                                    wc().decodeAudioData(a, (function(e) {
                                        t(e)
                                    }))
                                } catch (bm) {
                                    r ? r(bm) : console.error(bm), i.manager.itemError(e)
                                }
                            }), n, r)
                        }
                    }]), n
                }(Bu),
                Mc = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        d(this, n), i = t.call(this, void 0, a);
                        var o = (new br).set(e),
                            s = (new br).set(r),
                            l = new $t(o.r, o.g, o.b),
                            u = new $t(s.r, s.g, s.b),
                            c = Math.sqrt(Math.PI),
                            f = c * Math.sqrt(.75);
                        return i.sh.coefficients[0].copy(l).add(u).multiplyScalar(c), i.sh.coefficients[1].copy(l).sub(u).multiplyScalar(f), i
                    }
                    return p(n)
                }(dc);
            Mc.prototype.isHemisphereLightProbe = !0;
            var kc = function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                    d(this, n), r = t.call(this, void 0, i);
                    var a = (new br).set(e);
                    return r.sh.coefficients[0].set(a.r, a.g, a.b).multiplyScalar(2 * Math.sqrt(Math.PI)), r
                }
                return p(n)
            }(dc);
            kc.prototype.isAmbientLightProbe = !0;
            var Ec = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return d(this, n), (r = t.call(this)).type = "Audio", r.listener = e, r.context = e.context, r.gain = r.context.createGain(), r.gain.connect(e.getInput()), r.autoplay = !1, r.buffer = null, r.detune = 0, r.loop = !1, r.loopStart = 0, r.loopEnd = 0, r.offset = 0, r.duration = void 0, r.playbackRate = 1, r.isPlaying = !1, r.hasPlaybackControl = !0, r.source = null, r.sourceType = "empty", r._startedAt = 0, r._progress = 0, r._connected = !1, r.filters = [], r
                    }
                    return p(n, [{
                        key: "getOutput",
                        value: function() {
                            return this.gain
                        }
                    }, {
                        key: "setNodeSource",
                        value: function(e) {
                            return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this
                        }
                    }, {
                        key: "setMediaElementSource",
                        value: function(e) {
                            return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this
                        }
                    }, {
                        key: "setMediaStreamSource",
                        value: function(e) {
                            return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this
                        }
                    }, {
                        key: "setBuffer",
                        value: function(e) {
                            return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this
                        }
                    }, {
                        key: "play",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                            if (!0 !== this.isPlaying) {
                                if (!1 !== this.hasPlaybackControl) {
                                    this._startedAt = this.context.currentTime + e;
                                    var t = this.context.createBufferSource();
                                    return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect()
                                }
                                console.warn("THREE.Audio: this Audio has no playback control.")
                            } else console.warn("THREE.Audio: Audio is already playing.")
                        }
                    }, {
                        key: "pause",
                        value: function() {
                            if (!1 !== this.hasPlaybackControl) return !0 === this.isPlaying && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, !0 === this.loop && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            if (!1 !== this.hasPlaybackControl) return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "connect",
                        value: function() {
                            if (this.filters.length > 0) {
                                this.source.connect(this.filters[0]);
                                for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].connect(this.filters[e]);
                                this.filters[this.filters.length - 1].connect(this.getOutput())
                            } else this.source.connect(this.getOutput());
                            return this._connected = !0, this
                        }
                    }, {
                        key: "disconnect",
                        value: function() {
                            if (this.filters.length > 0) {
                                this.source.disconnect(this.filters[0]);
                                for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].disconnect(this.filters[e]);
                                this.filters[this.filters.length - 1].disconnect(this.getOutput())
                            } else this.source.disconnect(this.getOutput());
                            return this._connected = !1, this
                        }
                    }, {
                        key: "getFilters",
                        value: function() {
                            return this.filters
                        }
                    }, {
                        key: "setFilters",
                        value: function(e) {
                            return e || (e = []), !0 === this._connected ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this
                        }
                    }, {
                        key: "setDetune",
                        value: function(e) {
                            if (this.detune = e, void 0 !== this.source.detune) return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this
                        }
                    }, {
                        key: "getDetune",
                        value: function() {
                            return this.detune
                        }
                    }, {
                        key: "getFilter",
                        value: function() {
                            return this.getFilters()[0]
                        }
                    }, {
                        key: "setFilter",
                        value: function(e) {
                            return this.setFilters(e ? [e] : [])
                        }
                    }, {
                        key: "setPlaybackRate",
                        value: function(e) {
                            if (!1 !== this.hasPlaybackControl) return this.playbackRate = e, !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "getPlaybackRate",
                        value: function() {
                            return this.playbackRate
                        }
                    }, {
                        key: "onEnded",
                        value: function() {
                            this.isPlaying = !1
                        }
                    }, {
                        key: "getLoop",
                        value: function() {
                            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop
                        }
                    }, {
                        key: "setLoop",
                        value: function(e) {
                            if (!1 !== this.hasPlaybackControl) return this.loop = e, !0 === this.isPlaying && (this.source.loop = this.loop), this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "setLoopStart",
                        value: function(e) {
                            return this.loopStart = e, this
                        }
                    }, {
                        key: "setLoopEnd",
                        value: function(e) {
                            return this.loopEnd = e, this
                        }
                    }, {
                        key: "getVolume",
                        value: function() {
                            return this.gain.gain.value
                        }
                    }, {
                        key: "setVolume",
                        value: function(e) {
                            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
                        }
                    }]), n
                }(er),
                Tc = function() {
                    function e(t) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2048;
                        d(this, e), this.analyser = t.context.createAnalyser(), this.analyser.fftSize = n, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser)
                    }
                    return p(e, [{
                        key: "getFrequencyData",
                        value: function() {
                            return this.analyser.getByteFrequencyData(this.data), this.data
                        }
                    }, {
                        key: "getAverageFrequency",
                        value: function() {
                            for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++) e += t[n];
                            return e / t.length
                        }
                    }]), e
                }(),
                Lc = function() {
                    function e(t, n, r) {
                        var i, a, o;
                        switch (d(this, e), this.binding = t, this.valueSize = r, n) {
                            case "quaternion":
                                i = this._slerp, a = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(6 * r), this._workIndex = 5;
                                break;
                            case "string":
                            case "bool":
                                i = this._select, a = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(5 * r);
                                break;
                            default:
                                i = this._lerp, a = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(5 * r)
                        }
                        this._mixBufferRegion = i, this._mixBufferRegionAdditive = a, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0
                    }
                    return p(e, [{
                        key: "accumulate",
                        value: function(e, t) {
                            var n = this.buffer,
                                r = this.valueSize,
                                i = e * r + r,
                                a = this.cumulativeWeight;
                            if (0 === a) {
                                for (var o = 0; o !== r; ++o) n[i + o] = n[o];
                                a = t
                            } else {
                                var s = t / (a += t);
                                this._mixBufferRegion(n, i, 0, s, r)
                            }
                            this.cumulativeWeight = a
                        }
                    }, {
                        key: "accumulateAdditive",
                        value: function(e) {
                            var t = this.buffer,
                                n = this.valueSize,
                                r = n * this._addIndex;
                            0 === this.cumulativeWeightAdditive && this._setIdentity(), this._mixBufferRegionAdditive(t, r, 0, e, n), this.cumulativeWeightAdditive += e
                        }
                    }, {
                        key: "apply",
                        value: function(e) {
                            var t = this.valueSize,
                                n = this.buffer,
                                r = e * t + t,
                                i = this.cumulativeWeight,
                                a = this.cumulativeWeightAdditive,
                                o = this.binding;
                            if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, i < 1) {
                                var s = t * this._origIndex;
                                this._mixBufferRegion(n, r, s, 1 - i, t)
                            }
                            a > 0 && this._mixBufferRegionAdditive(n, r, this._addIndex * t, 1, t);
                            for (var l = t, u = t + t; l !== u; ++l)
                                if (n[l] !== n[l + t]) {
                                    o.setValue(n, r);
                                    break
                                }
                        }
                    }, {
                        key: "saveOriginalState",
                        value: function() {
                            var e = this.binding,
                                t = this.buffer,
                                n = this.valueSize,
                                r = n * this._origIndex;
                            e.getValue(t, r);
                            for (var i = n, a = r; i !== a; ++i) t[i] = t[r + i % n];
                            this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0
                        }
                    }, {
                        key: "restoreOriginalState",
                        value: function() {
                            var e = 3 * this.valueSize;
                            this.binding.setValue(this.buffer, e)
                        }
                    }, {
                        key: "_setAdditiveIdentityNumeric",
                        value: function() {
                            for (var e = this._addIndex * this.valueSize, t = e + this.valueSize, n = e; n < t; n++) this.buffer[n] = 0
                        }
                    }, {
                        key: "_setAdditiveIdentityQuaternion",
                        value: function() {
                            this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1
                        }
                    }, {
                        key: "_setAdditiveIdentityOther",
                        value: function() {
                            for (var e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize, n = 0; n < this.valueSize; n++) this.buffer[t + n] = this.buffer[e + n]
                        }
                    }, {
                        key: "_select",
                        value: function(e, t, n, r, i) {
                            if (r >= .5)
                                for (var a = 0; a !== i; ++a) e[t + a] = e[n + a]
                        }
                    }, {
                        key: "_slerp",
                        value: function(e, t, n, r) {
                            Jt.slerpFlat(e, t, e, t, e, n, r)
                        }
                    }, {
                        key: "_slerpAdditive",
                        value: function(e, t, n, r, i) {
                            var a = this._workIndex * i;
                            Jt.multiplyQuaternionsFlat(e, a, e, t, e, n), Jt.slerpFlat(e, t, e, t, e, a, r)
                        }
                    }, {
                        key: "_lerp",
                        value: function(e, t, n, r, i) {
                            for (var a = 1 - r, o = 0; o !== i; ++o) {
                                var s = t + o;
                                e[s] = e[s] * a + e[n + o] * r
                            }
                        }
                    }, {
                        key: "_lerpAdditive",
                        value: function(e, t, n, r, i) {
                            for (var a = 0; a !== i; ++a) {
                                var o = t + a;
                                e[o] = e[o] + e[n + a] * r
                            }
                        }
                    }]), e
                }(),
                Ac = "\\[\\]\\.:\\/",
                Cc = new RegExp("[\\[\\]\\.:\\/]", "g"),
                Pc = "[^\\[\\]\\.:\\/]",
                Rc = "[^" + Ac.replace("\\.", "") + "]",
                Nc = /((?:WC+[\/:])*)/.source.replace("WC", Pc),
                Ic = /(WCOD+)?/.source.replace("WCOD", Rc),
                zc = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Pc),
                Oc = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Pc),
                Dc = new RegExp("^" + Nc + Ic + zc + Oc + "$"),
                Fc = ["material", "materials", "bones"],
                Bc = function() {
                    function e(t, n, r) {
                        d(this, e);
                        var i = r || Uc.parseTrackName(n);
                        this._targetGroup = t, this._bindings = t.subscribe_(n, i)
                    }
                    return p(e, [{
                        key: "getValue",
                        value: function(e, t) {
                            this.bind();
                            var n = this._targetGroup.nCachedObjects_,
                                r = this._bindings[n];
                            void 0 !== r && r.getValue(e, t)
                        }
                    }, {
                        key: "setValue",
                        value: function(e, t) {
                            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r) n[r].setValue(e, t)
                        }
                    }, {
                        key: "bind",
                        value: function() {
                            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].bind()
                        }
                    }, {
                        key: "unbind",
                        value: function() {
                            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].unbind()
                        }
                    }]), e
                }(),
                Uc = function() {
                    function e(t, n, r) {
                        d(this, e), this.path = n, this.parsedPath = r || e.parseTrackName(n), this.node = e.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
                    }
                    return p(e, [{
                        key: "_getValue_unavailable",
                        value: function() {}
                    }, {
                        key: "_setValue_unavailable",
                        value: function() {}
                    }, {
                        key: "_getValue_direct",
                        value: function(e, t) {
                            e[t] = this.node[this.propertyName]
                        }
                    }, {
                        key: "_getValue_array",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) e[t++] = n[r]
                        }
                    }, {
                        key: "_getValue_arrayElement",
                        value: function(e, t) {
                            e[t] = this.resolvedProperty[this.propertyIndex]
                        }
                    }, {
                        key: "_getValue_toArray",
                        value: function(e, t) {
                            this.resolvedProperty.toArray(e, t)
                        }
                    }, {
                        key: "_setValue_direct",
                        value: function(e, t) {
                            this.targetObject[this.propertyName] = e[t]
                        }
                    }, {
                        key: "_setValue_direct_setNeedsUpdate",
                        value: function(e, t) {
                            this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_setValue_array",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++]
                        }
                    }, {
                        key: "_setValue_array_setNeedsUpdate",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                            this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_array_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_setValue_arrayElement",
                        value: function(e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t]
                        }
                    }, {
                        key: "_setValue_arrayElement_setNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_setValue_fromArray",
                        value: function(e, t) {
                            this.resolvedProperty.fromArray(e, t)
                        }
                    }, {
                        key: "_setValue_fromArray_setNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_getValue_unbound",
                        value: function(e, t) {
                            this.bind(), this.getValue(e, t)
                        }
                    }, {
                        key: "_setValue_unbound",
                        value: function(e, t) {
                            this.bind(), this.setValue(e, t)
                        }
                    }, {
                        key: "bind",
                        value: function() {
                            var t = this.node,
                                n = this.parsedPath,
                                r = n.objectName,
                                i = n.propertyName,
                                a = n.propertyIndex;
                            if (t || (t = e.findNode(this.rootNode, n.nodeName) || this.rootNode, this.node = t), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t) {
                                if (r) {
                                    var o = n.objectIndex;
                                    switch (r) {
                                        case "materials":
                                            if (!t.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                            if (!t.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                                            t = t.material.materials;
                                            break;
                                        case "bones":
                                            if (!t.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                                            t = t.skeleton.bones;
                                            for (var s = 0; s < t.length; s++)
                                                if (t[s].name === o) {
                                                    o = s;
                                                    break
                                                }
                                            break;
                                        default:
                                            if (void 0 === t[r]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                                            t = t[r]
                                    }
                                    if (void 0 !== o) {
                                        if (void 0 === t[o]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                                        t = t[o]
                                    }
                                }
                                var l = t[i];
                                if (void 0 !== l) {
                                    var u = this.Versioning.None;
                                    this.targetObject = t, void 0 !== t.needsUpdate ? u = this.Versioning.NeedsUpdate : void 0 !== t.matrixWorldNeedsUpdate && (u = this.Versioning.MatrixWorldNeedsUpdate);
                                    var c = this.BindingType.Direct;
                                    if (void 0 !== a) {
                                        if ("morphTargetInfluences" === i) {
                                            if (!t.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                                            if (!t.geometry.isBufferGeometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                                            if (!t.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                            void 0 !== t.morphTargetDictionary[a] && (a = t.morphTargetDictionary[a])
                                        }
                                        c = this.BindingType.ArrayElement, this.resolvedProperty = l, this.propertyIndex = a
                                    } else void 0 !== l.fromArray && void 0 !== l.toArray ? (c = this.BindingType.HasFromToArray, this.resolvedProperty = l) : Array.isArray(l) ? (c = this.BindingType.EntireArray, this.resolvedProperty = l) : this.propertyName = i;
                                    this.getValue = this.GetterByBindingType[c], this.setValue = this.SetterByBindingTypeAndVersioning[c][u]
                                } else {
                                    var f = n.nodeName;
                                    console.error("THREE.PropertyBinding: Trying to update property for track: " + f + "." + i + " but it wasn't found.", t)
                                }
                            } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
                        }
                    }, {
                        key: "unbind",
                        value: function() {
                            this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
                        }
                    }], [{
                        key: "create",
                        value: function(t, n, r) {
                            return t && t.isAnimationObjectGroup ? new e.Composite(t, n, r) : new e(t, n, r)
                        }
                    }, {
                        key: "sanitizeNodeName",
                        value: function(e) {
                            return e.replace(/\s/g, "_").replace(Cc, "")
                        }
                    }, {
                        key: "parseTrackName",
                        value: function(e) {
                            var t = Dc.exec(e);
                            if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
                            var n = {
                                    nodeName: t[2],
                                    objectName: t[3],
                                    objectIndex: t[4],
                                    propertyName: t[5],
                                    propertyIndex: t[6]
                                },
                                r = n.nodeName && n.nodeName.lastIndexOf(".");
                            if (void 0 !== r && -1 !== r) {
                                var i = n.nodeName.substring(r + 1); - 1 !== Fc.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r), n.objectName = i)
                            }
                            if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
                            return n
                        }
                    }, {
                        key: "findNode",
                        value: function(e, t) {
                            if (!t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid) return e;
                            if (e.skeleton) {
                                var n = e.skeleton.getBoneByName(t);
                                if (void 0 !== n) return n
                            }
                            if (e.children) {
                                var r = function e(n) {
                                    for (var r = 0; r < n.length; r++) {
                                        var i = n[r];
                                        if (i.name === t || i.uuid === t) return i;
                                        var a = e(i.children);
                                        if (a) return a
                                    }
                                    return null
                                }(e.children);
                                if (r) return r
                            }
                            return null
                        }
                    }]), e
                }();
            Uc.Composite = Bc, Uc.prototype.BindingType = {
                Direct: 0,
                EntireArray: 1,
                ArrayElement: 2,
                HasFromToArray: 3
            }, Uc.prototype.Versioning = {
                None: 0,
                NeedsUpdate: 1,
                MatrixWorldNeedsUpdate: 2
            }, Uc.prototype.GetterByBindingType = [Uc.prototype._getValue_direct, Uc.prototype._getValue_array, Uc.prototype._getValue_arrayElement, Uc.prototype._getValue_toArray], Uc.prototype.SetterByBindingTypeAndVersioning = [
                [Uc.prototype._setValue_direct, Uc.prototype._setValue_direct_setNeedsUpdate, Uc.prototype._setValue_direct_setMatrixWorldNeedsUpdate],
                [Uc.prototype._setValue_array, Uc.prototype._setValue_array_setNeedsUpdate, Uc.prototype._setValue_array_setMatrixWorldNeedsUpdate],
                [Uc.prototype._setValue_arrayElement, Uc.prototype._setValue_arrayElement_setNeedsUpdate, Uc.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],
                [Uc.prototype._setValue_fromArray, Uc.prototype._setValue_fromArray_setNeedsUpdate, Uc.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]
            ];
            var Hc = function() {
                function e() {
                    d(this, e), this.uuid = Nt(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
                    var t = {};
                    this._indicesByUUID = t;
                    for (var n = 0, r = arguments.length; n !== r; ++n) t[arguments[n].uuid] = n;
                    this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
                    var i = this;
                    this.stats = {
                        objects: {
                            get total() {
                                return i._objects.length
                            },
                            get inUse() {
                                return this.total - i.nCachedObjects_
                            }
                        },
                        get bindingsPerObject() {
                            return i._bindings.length
                        }
                    }
                }
                return p(e, [{
                    key: "add",
                    value: function() {
                        for (var e = this._objects, t = this._indicesByUUID, n = this._paths, r = this._parsedPaths, i = this._bindings, a = i.length, o = void 0, s = e.length, l = this.nCachedObjects_, u = 0, c = arguments.length; u !== c; ++u) {
                            var f = arguments[u],
                                d = f.uuid,
                                h = t[d];
                            if (void 0 === h) {
                                h = s++, t[d] = h, e.push(f);
                                for (var p = 0, v = a; p !== v; ++p) i[p].push(new Uc(f, n[p], r[p]))
                            } else if (h < l) {
                                o = e[h];
                                var m = --l,
                                    g = e[m];
                                t[g.uuid] = h, e[h] = g, t[d] = m, e[m] = f;
                                for (var y = 0, x = a; y !== x; ++y) {
                                    var b = i[y],
                                        _ = b[m],
                                        w = b[h];
                                    b[h] = _, void 0 === w && (w = new Uc(f, n[y], r[y])), b[m] = w
                                }
                            } else e[h] !== o && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                        }
                        this.nCachedObjects_ = l
                    }
                }, {
                    key: "remove",
                    value: function() {
                        for (var e = this._objects, t = this._indicesByUUID, n = this._bindings, r = n.length, i = this.nCachedObjects_, a = 0, o = arguments.length; a !== o; ++a) {
                            var s = arguments[a],
                                l = s.uuid,
                                u = t[l];
                            if (void 0 !== u && u >= i) {
                                var c = i++,
                                    f = e[c];
                                t[f.uuid] = u, e[u] = f, t[l] = c, e[c] = s;
                                for (var d = 0, h = r; d !== h; ++d) {
                                    var p = n[d],
                                        v = p[c],
                                        m = p[u];
                                    p[u] = v, p[c] = m
                                }
                            }
                        }
                        this.nCachedObjects_ = i
                    }
                }, {
                    key: "uncache",
                    value: function() {
                        for (var e = this._objects, t = this._indicesByUUID, n = this._bindings, r = n.length, i = this.nCachedObjects_, a = e.length, o = 0, s = arguments.length; o !== s; ++o) {
                            var l = arguments[o],
                                u = l.uuid,
                                c = t[u];
                            if (void 0 !== c)
                                if (delete t[u], c < i) {
                                    var f = --i,
                                        d = e[f],
                                        h = --a,
                                        p = e[h];
                                    t[d.uuid] = c, e[c] = d, t[p.uuid] = f, e[f] = p, e.pop();
                                    for (var v = 0, m = r; v !== m; ++v) {
                                        var g = n[v],
                                            y = g[f],
                                            x = g[h];
                                        g[c] = y, g[f] = x, g.pop()
                                    }
                                } else {
                                    var b = --a,
                                        _ = e[b];
                                    b > 0 && (t[_.uuid] = c), e[c] = _, e.pop();
                                    for (var w = 0, S = r; w !== S; ++w) {
                                        var M = n[w];
                                        M[c] = M[b], M.pop()
                                    }
                                }
                        }
                        this.nCachedObjects_ = i
                    }
                }, {
                    key: "subscribe_",
                    value: function(e, t) {
                        var n = this._bindingsIndicesByPath,
                            r = n[e],
                            i = this._bindings;
                        if (void 0 !== r) return i[r];
                        var a = this._paths,
                            o = this._parsedPaths,
                            s = this._objects,
                            l = s.length,
                            u = this.nCachedObjects_,
                            c = new Array(l);
                        r = i.length, n[e] = r, a.push(e), o.push(t), i.push(c);
                        for (var f = u, d = s.length; f !== d; ++f) {
                            var h = s[f];
                            c[f] = new Uc(h, e, t)
                        }
                        return c
                    }
                }, {
                    key: "unsubscribe_",
                    value: function(e) {
                        var t = this._bindingsIndicesByPath,
                            n = t[e];
                        if (void 0 !== n) {
                            var r = this._paths,
                                i = this._parsedPaths,
                                a = this._bindings,
                                o = a.length - 1,
                                s = a[o];
                            t[e[o]] = n, a[n] = s, a.pop(), i[n] = i[o], i.pop(), r[n] = r[o], r.pop()
                        }
                    }
                }]), e
            }();
            Hc.prototype.isAnimationObjectGroup = !0;
            var Vc = function() {
                    function e(t, n) {
                        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n.blendMode;
                        d(this, e), this._mixer = t, this._clip = n, this._localRoot = r, this.blendMode = i;
                        for (var a = n.tracks, o = a.length, s = new Array(o), l = {
                                endingStart: vt,
                                endingEnd: vt
                            }, u = 0; u !== o; ++u) {
                            var c = a[u].createInterpolant(null);
                            s[u] = c, c.settings = l
                        }
                        this._interpolantSettings = l, this._interpolants = s, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = 2201, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0
                    }
                    return p(e, [{
                        key: "play",
                        value: function() {
                            return this._mixer._activateAction(this), this
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            return this._mixer._deactivateAction(this), this.reset()
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
                        }
                    }, {
                        key: "isRunning",
                        value: function() {
                            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                        }
                    }, {
                        key: "isScheduled",
                        value: function() {
                            return this._mixer._isActiveAction(this)
                        }
                    }, {
                        key: "startAt",
                        value: function(e) {
                            return this._startTime = e, this
                        }
                    }, {
                        key: "setLoop",
                        value: function(e, t) {
                            return this.loop = e, this.repetitions = t, this
                        }
                    }, {
                        key: "setEffectiveWeight",
                        value: function(e) {
                            return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading()
                        }
                    }, {
                        key: "getEffectiveWeight",
                        value: function() {
                            return this._effectiveWeight
                        }
                    }, {
                        key: "fadeIn",
                        value: function(e) {
                            return this._scheduleFading(e, 0, 1)
                        }
                    }, {
                        key: "fadeOut",
                        value: function(e) {
                            return this._scheduleFading(e, 1, 0)
                        }
                    }, {
                        key: "crossFadeFrom",
                        value: function(e, t, n) {
                            if (e.fadeOut(t), this.fadeIn(t), n) {
                                var r = this._clip.duration,
                                    i = e._clip.duration,
                                    a = i / r,
                                    o = r / i;
                                e.warp(1, a, t), this.warp(o, 1, t)
                            }
                            return this
                        }
                    }, {
                        key: "crossFadeTo",
                        value: function(e, t, n) {
                            return e.crossFadeFrom(this, t, n)
                        }
                    }, {
                        key: "stopFading",
                        value: function() {
                            var e = this._weightInterpolant;
                            return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
                        }
                    }, {
                        key: "setEffectiveTimeScale",
                        value: function(e) {
                            return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping()
                        }
                    }, {
                        key: "getEffectiveTimeScale",
                        value: function() {
                            return this._effectiveTimeScale
                        }
                    }, {
                        key: "setDuration",
                        value: function(e) {
                            return this.timeScale = this._clip.duration / e, this.stopWarping()
                        }
                    }, {
                        key: "syncWith",
                        value: function(e) {
                            return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping()
                        }
                    }, {
                        key: "halt",
                        value: function(e) {
                            return this.warp(this._effectiveTimeScale, 0, e)
                        }
                    }, {
                        key: "warp",
                        value: function(e, t, n) {
                            var r = this._mixer,
                                i = r.time,
                                a = this.timeScale,
                                o = this._timeScaleInterpolant;
                            null === o && (o = r._lendControlInterpolant(), this._timeScaleInterpolant = o);
                            var s = o.parameterPositions,
                                l = o.sampleValues;
                            return s[0] = i, s[1] = i + n, l[0] = e / a, l[1] = t / a, this
                        }
                    }, {
                        key: "stopWarping",
                        value: function() {
                            var e = this._timeScaleInterpolant;
                            return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
                        }
                    }, {
                        key: "getMixer",
                        value: function() {
                            return this._mixer
                        }
                    }, {
                        key: "getClip",
                        value: function() {
                            return this._clip
                        }
                    }, {
                        key: "getRoot",
                        value: function() {
                            return this._localRoot || this._mixer._root
                        }
                    }, {
                        key: "_update",
                        value: function(e, t, n, r) {
                            if (this.enabled) {
                                var i = this._startTime;
                                if (null !== i) {
                                    var a = (e - i) * n;
                                    if (a < 0 || 0 === n) return;
                                    this._startTime = null, t = n * a
                                }
                                t *= this._updateTimeScale(e);
                                var o = this._updateTime(t),
                                    s = this._updateWeight(e);
                                if (s > 0) {
                                    var l = this._interpolants,
                                        u = this._propertyBindings;
                                    if (this.blendMode === xt)
                                        for (var c = 0, f = l.length; c !== f; ++c) l[c].evaluate(o), u[c].accumulateAdditive(s);
                                    else
                                        for (var d = 0, h = l.length; d !== h; ++d) l[d].evaluate(o), u[d].accumulate(r, s)
                                }
                            } else this._updateWeight(e)
                        }
                    }, {
                        key: "_updateWeight",
                        value: function(e) {
                            var t = 0;
                            if (this.enabled) {
                                t = this.weight;
                                var n = this._weightInterpolant;
                                if (null !== n) {
                                    var r = n.evaluate(e)[0];
                                    t *= r, e > n.parameterPositions[1] && (this.stopFading(), 0 === r && (this.enabled = !1))
                                }
                            }
                            return this._effectiveWeight = t, t
                        }
                    }, {
                        key: "_updateTimeScale",
                        value: function(e) {
                            var t = 0;
                            if (!this.paused) {
                                t = this.timeScale;
                                var n = this._timeScaleInterpolant;
                                if (null !== n) t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = !0 : this.timeScale = t)
                            }
                            return this._effectiveTimeScale = t, t
                        }
                    }, {
                        key: "_updateTime",
                        value: function(e) {
                            var t = this._clip.duration,
                                n = this.loop,
                                r = this.time + e,
                                i = this._loopCount,
                                a = 2202 === n;
                            if (0 === e) return -1 === i ? r : a && 1 === (1 & i) ? t - r : r;
                            if (2200 === n) {
                                -1 === i && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                                e: {
                                    if (r >= t) r = t;
                                    else {
                                        if (!(r < 0)) {
                                            this.time = r;
                                            break e
                                        }
                                        r = 0
                                    }
                                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                    this.time = r,
                                    this._mixer.dispatchEvent({
                                        type: "finished",
                                        action: this,
                                        direction: e < 0 ? -1 : 1
                                    })
                                }
                            } else {
                                if (-1 === i && (e >= 0 ? (i = 0, this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)), r >= t || r < 0) {
                                    var o = Math.floor(r / t);
                                    r -= t * o, i += Math.abs(o);
                                    var s = this.repetitions - i;
                                    if (s <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, r = e > 0 ? t : 0, this.time = r, this._mixer.dispatchEvent({
                                        type: "finished",
                                        action: this,
                                        direction: e > 0 ? 1 : -1
                                    });
                                    else {
                                        if (1 === s) {
                                            var l = e < 0;
                                            this._setEndings(l, !l, a)
                                        } else this._setEndings(!1, !1, a);
                                        this._loopCount = i, this.time = r, this._mixer.dispatchEvent({
                                            type: "loop",
                                            action: this,
                                            loopDelta: o
                                        })
                                    }
                                } else this.time = r;
                                if (a && 1 === (1 & i)) return t - r
                            }
                            return r
                        }
                    }, {
                        key: "_setEndings",
                        value: function(e, t, n) {
                            var r = this._interpolantSettings;
                            n ? (r.endingStart = mt, r.endingEnd = mt) : (r.endingStart = e ? this.zeroSlopeAtStart ? mt : vt : gt, r.endingEnd = t ? this.zeroSlopeAtEnd ? mt : vt : gt)
                        }
                    }, {
                        key: "_scheduleFading",
                        value: function(e, t, n) {
                            var r = this._mixer,
                                i = r.time,
                                a = this._weightInterpolant;
                            null === a && (a = r._lendControlInterpolant(), this._weightInterpolant = a);
                            var o = a.parameterPositions,
                                s = a.sampleValues;
                            return o[0] = i, s[0] = t, o[1] = i + e, s[1] = n, this
                        }
                    }]), e
                }(),
                Gc = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return d(this, n), (r = t.call(this))._root = e, r._initMemoryManager(), r._accuIndex = 0, r.time = 0, r.timeScale = 1, r
                    }
                    return p(n, [{
                        key: "_bindAction",
                        value: function(e, t) {
                            var n = e._localRoot || this._root,
                                r = e._clip.tracks,
                                i = r.length,
                                a = e._propertyBindings,
                                o = e._interpolants,
                                s = n.uuid,
                                l = this._bindingsByRootAndName,
                                u = l[s];
                            void 0 === u && (u = {}, l[s] = u);
                            for (var c = 0; c !== i; ++c) {
                                var f = r[c],
                                    d = f.name,
                                    h = u[d];
                                if (void 0 !== h) a[c] = h;
                                else {
                                    if (void 0 !== (h = a[c])) {
                                        null === h._cacheIndex && (++h.referenceCount, this._addInactiveBinding(h, s, d));
                                        continue
                                    }
                                    var p = t && t._propertyBindings[c].binding.parsedPath;
                                    ++(h = new Lc(Uc.create(n, d, p), f.ValueTypeName, f.getValueSize())).referenceCount, this._addInactiveBinding(h, s, d), a[c] = h
                                }
                                o[c].resultBuffer = h.buffer
                            }
                        }
                    }, {
                        key: "_activateAction",
                        value: function(e) {
                            if (!this._isActiveAction(e)) {
                                if (null === e._cacheIndex) {
                                    var t = (e._localRoot || this._root).uuid,
                                        n = e._clip.uuid,
                                        r = this._actionsByClip[n];
                                    this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, n, t)
                                }
                                for (var i = e._propertyBindings, a = 0, o = i.length; a !== o; ++a) {
                                    var s = i[a];
                                    0 === s.useCount++ && (this._lendBinding(s), s.saveOriginalState())
                                }
                                this._lendAction(e)
                            }
                        }
                    }, {
                        key: "_deactivateAction",
                        value: function(e) {
                            if (this._isActiveAction(e)) {
                                for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                                    var i = t[n];
                                    0 === --i.useCount && (i.restoreOriginalState(), this._takeBackBinding(i))
                                }
                                this._takeBackAction(e)
                            }
                        }
                    }, {
                        key: "_initMemoryManager",
                        value: function() {
                            this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
                            var e = this;
                            this.stats = {
                                actions: {
                                    get total() {
                                        return e._actions.length
                                    },
                                    get inUse() {
                                        return e._nActiveActions
                                    }
                                },
                                bindings: {
                                    get total() {
                                        return e._bindings.length
                                    },
                                    get inUse() {
                                        return e._nActiveBindings
                                    }
                                },
                                controlInterpolants: {
                                    get total() {
                                        return e._controlInterpolants.length
                                    },
                                    get inUse() {
                                        return e._nActiveControlInterpolants
                                    }
                                }
                            }
                        }
                    }, {
                        key: "_isActiveAction",
                        value: function(e) {
                            var t = e._cacheIndex;
                            return null !== t && t < this._nActiveActions
                        }
                    }, {
                        key: "_addInactiveAction",
                        value: function(e, t, n) {
                            var r = this._actions,
                                i = this._actionsByClip,
                                a = i[t];
                            if (void 0 === a) a = {
                                knownActions: [e],
                                actionByRoot: {}
                            }, e._byClipCacheIndex = 0, i[t] = a;
                            else {
                                var o = a.knownActions;
                                e._byClipCacheIndex = o.length, o.push(e)
                            }
                            e._cacheIndex = r.length, r.push(e), a.actionByRoot[n] = e
                        }
                    }, {
                        key: "_removeInactiveAction",
                        value: function(e) {
                            var t = this._actions,
                                n = t[t.length - 1],
                                r = e._cacheIndex;
                            n._cacheIndex = r, t[r] = n, t.pop(), e._cacheIndex = null;
                            var i = e._clip.uuid,
                                a = this._actionsByClip,
                                o = a[i],
                                s = o.knownActions,
                                l = s[s.length - 1],
                                u = e._byClipCacheIndex;
                            l._byClipCacheIndex = u, s[u] = l, s.pop(), e._byClipCacheIndex = null, delete o.actionByRoot[(e._localRoot || this._root).uuid], 0 === s.length && delete a[i], this._removeInactiveBindingsForAction(e)
                        }
                    }, {
                        key: "_removeInactiveBindingsForAction",
                        value: function(e) {
                            for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                                var i = t[n];
                                0 === --i.referenceCount && this._removeInactiveBinding(i)
                            }
                        }
                    }, {
                        key: "_lendAction",
                        value: function(e) {
                            var t = this._actions,
                                n = e._cacheIndex,
                                r = this._nActiveActions++,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_takeBackAction",
                        value: function(e) {
                            var t = this._actions,
                                n = e._cacheIndex,
                                r = --this._nActiveActions,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_addInactiveBinding",
                        value: function(e, t, n) {
                            var r = this._bindingsByRootAndName,
                                i = this._bindings,
                                a = r[t];
                            void 0 === a && (a = {}, r[t] = a), a[n] = e, e._cacheIndex = i.length, i.push(e)
                        }
                    }, {
                        key: "_removeInactiveBinding",
                        value: function(e) {
                            var t = this._bindings,
                                n = e.binding,
                                r = n.rootNode.uuid,
                                i = n.path,
                                a = this._bindingsByRootAndName,
                                o = a[r],
                                s = t[t.length - 1],
                                l = e._cacheIndex;
                            s._cacheIndex = l, t[l] = s, t.pop(), delete o[i], 0 === Object.keys(o).length && delete a[r]
                        }
                    }, {
                        key: "_lendBinding",
                        value: function(e) {
                            var t = this._bindings,
                                n = e._cacheIndex,
                                r = this._nActiveBindings++,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_takeBackBinding",
                        value: function(e) {
                            var t = this._bindings,
                                n = e._cacheIndex,
                                r = --this._nActiveBindings,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_lendControlInterpolant",
                        value: function() {
                            var e = this._controlInterpolants,
                                t = this._nActiveControlInterpolants++,
                                n = e[t];
                            return void 0 === n && ((n = new Mu(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = t, e[t] = n), n
                        }
                    }, {
                        key: "_takeBackControlInterpolant",
                        value: function(e) {
                            var t = this._controlInterpolants,
                                n = e.__cacheIndex,
                                r = --this._nActiveControlInterpolants,
                                i = t[r];
                            e.__cacheIndex = r, t[r] = e, i.__cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "clipAction",
                        value: function(e, t, n) {
                            var r = t || this._root,
                                i = r.uuid,
                                a = "string" === typeof e ? Iu.findByName(r, e) : e,
                                o = null !== a ? a.uuid : e,
                                s = this._actionsByClip[o],
                                l = null;
                            if (void 0 === n && (n = null !== a ? a.blendMode : yt), void 0 !== s) {
                                var u = s.actionByRoot[i];
                                if (void 0 !== u && u.blendMode === n) return u;
                                l = s.knownActions[0], null === a && (a = l._clip)
                            }
                            if (null === a) return null;
                            var c = new Vc(this, a, t, n);
                            return this._bindAction(c, l), this._addInactiveAction(c, o, i), c
                        }
                    }, {
                        key: "existingAction",
                        value: function(e, t) {
                            var n = t || this._root,
                                r = n.uuid,
                                i = "string" === typeof e ? Iu.findByName(n, e) : e,
                                a = i ? i.uuid : e,
                                o = this._actionsByClip[a];
                            return void 0 !== o && o.actionByRoot[r] || null
                        }
                    }, {
                        key: "stopAllAction",
                        value: function() {
                            for (var e = this._actions, t = this._nActiveActions - 1; t >= 0; --t) e[t].stop();
                            return this
                        }
                    }, {
                        key: "update",
                        value: function(e) {
                            e *= this.timeScale;
                            for (var t = this._actions, n = this._nActiveActions, r = this.time += e, i = Math.sign(e), a = this._accuIndex ^= 1, o = 0; o !== n; ++o) {
                                t[o]._update(r, e, i, a)
                            }
                            for (var s = this._bindings, l = this._nActiveBindings, u = 0; u !== l; ++u) s[u].apply(a);
                            return this
                        }
                    }, {
                        key: "setTime",
                        value: function(e) {
                            this.time = 0;
                            for (var t = 0; t < this._actions.length; t++) this._actions[t].time = 0;
                            return this.update(e)
                        }
                    }, {
                        key: "getRoot",
                        value: function() {
                            return this._root
                        }
                    }, {
                        key: "uncacheClip",
                        value: function(e) {
                            var t = this._actions,
                                n = e.uuid,
                                r = this._actionsByClip,
                                i = r[n];
                            if (void 0 !== i) {
                                for (var a = i.knownActions, o = 0, s = a.length; o !== s; ++o) {
                                    var l = a[o];
                                    this._deactivateAction(l);
                                    var u = l._cacheIndex,
                                        c = t[t.length - 1];
                                    l._cacheIndex = null, l._byClipCacheIndex = null, c._cacheIndex = u, t[u] = c, t.pop(), this._removeInactiveBindingsForAction(l)
                                }
                                delete r[n]
                            }
                        }
                    }, {
                        key: "uncacheRoot",
                        value: function(e) {
                            var t = e.uuid,
                                n = this._actionsByClip;
                            for (var r in n) {
                                var i = n[r].actionByRoot[t];
                                void 0 !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
                            }
                            var a = this._bindingsByRootAndName[t];
                            if (void 0 !== a)
                                for (var o in a) {
                                    var s = a[o];
                                    s.restoreOriginalState(), this._removeInactiveBinding(s)
                                }
                        }
                    }, {
                        key: "uncacheAction",
                        value: function(e, t) {
                            var n = this.existingAction(e, t);
                            null !== n && (this._deactivateAction(n), this._removeInactiveAction(n))
                        }
                    }]), n
                }(Lt);
            Gc.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
            var Wc = function() {
                    function e(t) {
                        d(this, e), "string" === typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."), t = arguments[1]), this.value = t
                    }
                    return p(e, [{
                        key: "clone",
                        value: function() {
                            return new e(void 0 === this.value.clone ? this.value : this.value.clone())
                        }
                    }]), e
                }(),
                jc = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        return d(this, n), (i = t.call(this, e, r)).meshPerAttribute = a, i
                    }
                    return p(n, [{
                        key: "copy",
                        value: function(e) {
                            return Ue(g(n.prototype), "copy", this).call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
                        }
                    }, {
                        key: "clone",
                        value: function(e) {
                            var t = Ue(g(n.prototype), "clone", this).call(this, e);
                            return t.meshPerAttribute = this.meshPerAttribute, t
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = Ue(g(n.prototype), "toJSON", this).call(this, e);
                            return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t
                        }
                    }]), n
                }(vs);
            jc.prototype.isInstancedInterleavedBuffer = !0,
                function() {
                    function e(t, n, r, i, a) {
                        d(this, e), this.buffer = t, this.type = n, this.itemSize = r, this.elementSize = i, this.count = a, this.version = 0
                    }
                    return p(e, [{
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }, {
                        key: "setBuffer",
                        value: function(e) {
                            return this.buffer = e, this
                        }
                    }, {
                        key: "setType",
                        value: function(e, t) {
                            return this.type = e, this.elementSize = t, this
                        }
                    }, {
                        key: "setItemSize",
                        value: function(e) {
                            return this.itemSize = e, this
                        }
                    }, {
                        key: "setCount",
                        value: function(e) {
                            return this.count = e, this
                        }
                    }]), e
                }().prototype.isGLBufferAttribute = !0;
            var qc = new Bt,
                Xc = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Bt(1 / 0, 1 / 0),
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Bt(-1 / 0, -1 / 0);
                        d(this, e), this.min = t, this.max = n
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.min.copy(e), this.max.copy(t), this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e) {
                            this.makeEmpty();
                            for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
                            return this
                        }
                    }, {
                        key: "setFromCenterAndSize",
                        value: function(e, t) {
                            var n = qc.copy(t).multiplyScalar(.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.min.copy(e.min), this.max.copy(e.max), this
                        }
                    }, {
                        key: "makeEmpty",
                        value: function() {
                            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return this.max.x < this.min.x || this.max.y < this.min.y
                        }
                    }, {
                        key: "getCenter",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                        }
                    }, {
                        key: "getSize",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
                        }
                    }, {
                        key: "expandByPoint",
                        value: function(e) {
                            return this.min.min(e), this.max.max(e), this
                        }
                    }, {
                        key: "expandByVector",
                        value: function(e) {
                            return this.min.sub(e), this.max.add(e), this
                        }
                    }, {
                        key: "expandByScalar",
                        value: function(e) {
                            return this.min.addScalar(-e), this.max.addScalar(e), this
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
                        }
                    }, {
                        key: "containsBox",
                        value: function(e) {
                            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
                        }
                    }, {
                        key: "getParameter",
                        value: function(e, t) {
                            return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
                        }
                    }, {
                        key: "clampPoint",
                        value: function(e, t) {
                            return t.copy(e).clamp(this.min, this.max)
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return qc.copy(e).clamp(this.min, this.max).sub(e).length()
                        }
                    }, {
                        key: "intersect",
                        value: function(e) {
                            return this.min.max(e.min), this.max.min(e.max), this
                        }
                    }, {
                        key: "union",
                        value: function(e) {
                            return this.min.min(e.min), this.max.max(e.max), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.min.add(e), this.max.add(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.min.equals(this.min) && e.max.equals(this.max)
                        }
                    }]), e
                }();
            Xc.prototype.isBox2 = !0;
            var Yc = new $t,
                Zc = new $t,
                Jc = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new $t,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new $t;
                        d(this, e), this.start = t, this.end = n
                    }
                    return p(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.start.copy(e), this.end.copy(t), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.start.copy(e.start), this.end.copy(e.end), this
                        }
                    }, {
                        key: "getCenter",
                        value: function(e) {
                            return e.addVectors(this.start, this.end).multiplyScalar(.5)
                        }
                    }, {
                        key: "delta",
                        value: function(e) {
                            return e.subVectors(this.end, this.start)
                        }
                    }, {
                        key: "distanceSq",
                        value: function() {
                            return this.start.distanceToSquared(this.end)
                        }
                    }, {
                        key: "distance",
                        value: function() {
                            return this.start.distanceTo(this.end)
                        }
                    }, {
                        key: "at",
                        value: function(e, t) {
                            return this.delta(t).multiplyScalar(e).add(this.start)
                        }
                    }, {
                        key: "closestPointToPointParameter",
                        value: function(e, t) {
                            Yc.subVectors(e, this.start), Zc.subVectors(this.end, this.start);
                            var n = Zc.dot(Zc),
                                r = Zc.dot(Yc) / n;
                            return t && (r = It(r, 0, 1)), r
                        }
                    }, {
                        key: "closestPointToPoint",
                        value: function(e, t, n) {
                            var r = this.closestPointToPointParameter(e, t);
                            return this.delta(n).multiplyScalar(r).add(this.start)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.start.equals(this.start) && e.end.equals(this.end)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }();
            (function(e) {
                m(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return d(this, n), (r = t.call(this)).material = e, r.render = function() {}, r.hasPositions = !1, r.hasNormals = !1, r.hasColors = !1, r.hasUvs = !1, r.positionArray = null, r.normalArray = null, r.colorArray = null, r.uvArray = null, r.count = 0, r
                }
                return p(n)
            })(er).prototype.isImmediateRenderObject = !0;
            var $c = new $t,
                Qc = new An,
                Kc = new An,
                ef = function(e) {
                    m(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        d(this, n);
                        for (var i = tf(e), a = new Or, o = [], s = [], l = new br(0, 0, 1), u = new br(0, 1, 0), c = 0; c < i.length; c++) {
                            var f = i[c];
                            f.parent && f.parent.isBone && (o.push(0, 0, 0), o.push(0, 0, 0), s.push(l.r, l.g, l.b), s.push(u.r, u.g, u.b))
                        }
                        a.setAttribute("position", new Tr(o, 3)), a.setAttribute("color", new Tr(s, 3));
                        var h = new Xs({
                            vertexColors: !0,
                            depthTest: !1,
                            depthWrite: !1,
                            toneMapped: !1,
                            transparent: !0
                        });
                        return (r = t.call(this, a, h)).type = "SkeletonHelper", r.isSkeletonHelper = !0, r.root = e, r.bones = i, r.matrix = e.matrixWorld, r.matrixAutoUpdate = !1, r
                    }
                    return p(n, [{
                        key: "updateMatrixWorld",
                        value: function(e) {
                            var t = this.bones,
                                r = this.geometry,
                                i = r.getAttribute("position");
                            Kc.copy(this.root.matrixWorld).invert();
                            for (var a = 0, o = 0; a < t.length; a++) {
                                var s = t[a];
                                s.parent && s.parent.isBone && (Qc.multiplyMatrices(Kc, s.matrixWorld), $c.setFromMatrixPosition(Qc), i.setXYZ(o, $c.x, $c.y, $c.z), Qc.multiplyMatrices(Kc, s.parent.matrixWorld), $c.setFromMatrixPosition(Qc), i.setXYZ(o + 1, $c.x, $c.y, $c.z), o += 2)
                            }
                            r.getAttribute("position").needsUpdate = !0, Ue(g(n.prototype), "updateMatrixWorld", this).call(this, e)
                        }
                    }]), n
                }(nl);

            function tf(e) {
                var t = [];
                e && e.isBone && t.push(e);
                for (var n = 0; n < e.children.length; n++) t.push.apply(t, tf(e.children[n]));
                return t
            }
            var nf = function(e) {
                m(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4473924,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 8947848;
                    d(this, n), a = new br(a), o = new br(o);
                    for (var s = i / 2, l = r / i, u = r / 2, c = [], f = [], h = 0, p = 0, v = -u; h <= i; h++, v += l) {
                        c.push(-u, 0, v, u, 0, v), c.push(v, 0, -u, v, 0, u);
                        var m = h === s ? a : o;
                        m.toArray(f, p), p += 3, m.toArray(f, p), p += 3, m.toArray(f, p), p += 3, m.toArray(f, p), p += 3
                    }
                    var g = new Or;
                    g.setAttribute("position", new Tr(c, 3)), g.setAttribute("color", new Tr(f, 3));
                    var y = new Xs({
                        vertexColors: !0,
                        toneMapped: !1
                    });
                    return (e = t.call(this, g, y)).type = "GridHelper", e
                }
                return p(n)
            }(nl);
            var rf = new Float32Array(1);
            new Int32Array(rf.buffer);
            hl.create = function(e, t) {
                return console.log("THREE.Curve.create() has been deprecated"), e.prototype = Object.create(hl.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e
            }, qu.prototype.fromPoints = function(e) {
                return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(e)
            }, nf.prototype.setColors = function() {
                console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
            }, ef.prototype.update = function() {
                console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
            }, Bu.prototype.extractUrlBase = function(e) {
                return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), hc.extractUrlBase(e)
            }, Bu.Handlers = {
                add: function() {
                    console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
                },
                get: function() {
                    console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
                }
            }, Xc.prototype.center = function(e) {
                return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, Xc.prototype.empty = function() {
                return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty()
            }, Xc.prototype.isIntersectionBox = function(e) {
                return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
            }, Xc.prototype.size = function(e) {
                return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(e)
            }, en.prototype.center = function(e) {
                return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, en.prototype.empty = function() {
                return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty()
            }, en.prototype.isIntersectionBox = function(e) {
                return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
            }, en.prototype.isIntersectionSphere = function(e) {
                return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
            }, en.prototype.size = function(e) {
                return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(e)
            }, bn.prototype.empty = function() {
                return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty()
            }, xi.prototype.setFromMatrix = function(e) {
                return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(e)
            }, Jc.prototype.center = function(e) {
                return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, Ht.prototype.flattenToArrayOffset = function(e, t) {
                return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
            }, Ht.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
            }, Ht.prototype.multiplyVector3Array = function() {
                console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
            }, Ht.prototype.applyToBufferAttribute = function(e) {
                return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
            }, Ht.prototype.applyToVector3Array = function() {
                console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
            }, Ht.prototype.getInverse = function(e) {
                return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(e).invert()
            }, An.prototype.extractPosition = function(e) {
                return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e)
            }, An.prototype.flattenToArrayOffset = function(e, t) {
                return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
            }, An.prototype.getPosition = function() {
                return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), (new $t).setFromMatrixColumn(this, 3)
            }, An.prototype.setRotationFromQuaternion = function(e) {
                return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e)
            }, An.prototype.multiplyToArray = function() {
                console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
            }, An.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, An.prototype.multiplyVector4 = function(e) {
                return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, An.prototype.multiplyVector3Array = function() {
                console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
            }, An.prototype.rotateAxis = function(e) {
                console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this)
            }, An.prototype.crossVector = function(e) {
                return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, An.prototype.translate = function() {
                console.error("THREE.Matrix4: .translate() has been removed.")
            }, An.prototype.rotateX = function() {
                console.error("THREE.Matrix4: .rotateX() has been removed.")
            }, An.prototype.rotateY = function() {
                console.error("THREE.Matrix4: .rotateY() has been removed.")
            }, An.prototype.rotateZ = function() {
                console.error("THREE.Matrix4: .rotateZ() has been removed.")
            }, An.prototype.rotateByAxis = function() {
                console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
            }, An.prototype.applyToBufferAttribute = function(e) {
                return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, An.prototype.applyToVector3Array = function() {
                console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
            }, An.prototype.makeFrustum = function(e, t, n, r, i, a) {
                return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(e, t, r, n, i, a)
            }, An.prototype.getInverse = function(e) {
                return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(e).invert()
            }, mi.prototype.isIntersectionLine = function(e) {
                return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(e)
            }, Jt.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this)
            }, Jt.prototype.inverse = function() {
                return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert()
            }, Ln.prototype.isIntersectionBox = function(e) {
                return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
            }, Ln.prototype.isIntersectionPlane = function(e) {
                return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(e)
            }, Ln.prototype.isIntersectionSphere = function(e) {
                return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
            }, fr.prototype.area = function() {
                return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea()
            }, fr.prototype.barycoordFromPoint = function(e, t) {
                return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(e, t)
            }, fr.prototype.midpoint = function(e) {
                return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(e)
            }, fr.prototypenormal = function(e) {
                return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(e)
            }, fr.prototype.plane = function(e) {
                return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(e)
            }, fr.barycoordFromPoint = function(e, t, n, r, i) {
                return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), fr.getBarycoord(e, t, n, r, i)
            }, fr.normal = function(e, t, n, r) {
                return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), fr.getNormal(e, t, n, r)
            }, Xu.prototype.extractAllPoints = function(e) {
                return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(e)
            }, Xu.prototype.extrude = function(e) {
                return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new lu(this, e)
            }, Xu.prototype.makeGeometry = function(e) {
                return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new cu(this, e)
            }, Bt.prototype.fromAttribute = function(e, t, n) {
                return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
            }, Bt.prototype.distanceToManhattan = function(e) {
                return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
            }, Bt.prototype.lengthManhattan = function() {
                return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
            }, $t.prototype.setEulerFromRotationMatrix = function() {
                console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
            }, $t.prototype.setEulerFromQuaternion = function() {
                console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
            }, $t.prototype.getPositionFromMatrix = function(e) {
                return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e)
            }, $t.prototype.getScaleFromMatrix = function(e) {
                return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e)
            }, $t.prototype.getColumnFromMatrix = function(e, t) {
                return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, e)
            }, $t.prototype.applyProjection = function(e) {
                return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(e)
            }, $t.prototype.fromAttribute = function(e, t, n) {
                return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
            }, $t.prototype.distanceToManhattan = function(e) {
                return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
            }, $t.prototype.lengthManhattan = function() {
                return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
            }, qt.prototype.fromAttribute = function(e, t, n) {
                return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
            }, qt.prototype.lengthManhattan = function() {
                return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
            }, er.prototype.getChildByName = function(e) {
                return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e)
            }, er.prototype.renderDepth = function() {
                console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
            }, er.prototype.translate = function(e, t) {
                return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e)
            }, er.prototype.getWorldRotation = function() {
                console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
            }, er.prototype.applyMatrix = function(e) {
                return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
            }, Object.defineProperties(er.prototype, {
                eulerOrder: {
                    get: function() {
                        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
                    },
                    set: function(e) {
                        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e
                    }
                },
                useQuaternion: {
                    get: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    }
                }
            }), ei.prototype.setDrawMode = function() {
                console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
            }, Object.defineProperties(ei.prototype, {
                drawMode: {
                    get: function() {
                        return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), 0
                    },
                    set: function() {
                        console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
                    }
                }
            }), Bs.prototype.initBones = function() {
                console.error("THREE.SkinnedMesh: initBones() has been removed.")
            }, li.prototype.setLens = function(e, t) {
                console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== t && (this.filmGauge = t), this.setFocalLength(e)
            }, Object.defineProperties(Yu.prototype, {
                onlyShadow: {
                    set: function() {
                        console.warn("THREE.Light: .onlyShadow has been removed.")
                    }
                },
                shadowCameraFov: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = e
                    }
                },
                shadowCameraLeft: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = e
                    }
                },
                shadowCameraRight: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = e
                    }
                },
                shadowCameraTop: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = e
                    }
                },
                shadowCameraBottom: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = e
                    }
                },
                shadowCameraNear: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = e
                    }
                },
                shadowCameraFar: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = e
                    }
                },
                shadowCameraVisible: {
                    set: function() {
                        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                    }
                },
                shadowBias: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = e
                    }
                },
                shadowDarkness: {
                    set: function() {
                        console.warn("THREE.Light: .shadowDarkness has been removed.")
                    }
                },
                shadowMapWidth: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = e
                    }
                },
                shadowMapHeight: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = e
                    }
                }
            }), Object.defineProperties(Mr.prototype, {
                length: {
                    get: function() {
                        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length
                    }
                },
                dynamic: {
                    get: function() {
                        return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === Et
                    },
                    set: function() {
                        console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(Et)
                    }
                }
            }), Mr.prototype.setDynamic = function(e) {
                return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? Et : kt), this
            }, Mr.prototype.copyIndicesArray = function() {
                console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
            }, Mr.prototype.setArray = function() {
                console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
            }, Or.prototype.addIndex = function(e) {
                console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e)
            }, Or.prototype.addAttribute = function(e, t) {
                return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(e, new Mr(arguments[1], arguments[2])))
            }, Or.prototype.addDrawCall = function(e, t, n) {
                void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t)
            }, Or.prototype.clearDrawCalls = function() {
                console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
            }, Or.prototype.computeOffsets = function() {
                console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
            }, Or.prototype.removeAttribute = function(e) {
                return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(e)
            }, Or.prototype.applyMatrix = function(e) {
                return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
            }, Object.defineProperties(Or.prototype, {
                drawcalls: {
                    get: function() {
                        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
                    }
                },
                offsets: {
                    get: function() {
                        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
                    }
                }
            }), vs.prototype.setDynamic = function(e) {
                return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? Et : kt), this
            }, vs.prototype.setArray = function() {
                console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
            }, lu.prototype.getArrays = function() {
                console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")
            }, lu.prototype.addShapeList = function() {
                console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")
            }, lu.prototype.addShape = function() {
                console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")
            }, ps.prototype.dispose = function() {
                console.error("THREE.Scene: .dispose() has been removed.")
            }, Wc.prototype.onUpdate = function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this
            }, Object.defineProperties(hr.prototype, {
                wrapAround: {
                    get: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    },
                    set: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    }
                },
                overdraw: {
                    get: function() {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    },
                    set: function() {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    }
                },
                wrapRGB: {
                    get: function() {
                        return console.warn("THREE.Material: .wrapRGB has been removed."), new br
                    }
                },
                shading: {
                    get: function() {
                        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
                    },
                    set: function(e) {
                        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === e
                    }
                },
                stencilMask: {
                    get: function() {
                        return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask
                    },
                    set: function(e) {
                        console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = e
                    }
                },
                vertexTangents: {
                    get: function() {
                        console.warn("THREE." + this.type + ": .vertexTangents has been removed.")
                    },
                    set: function() {
                        console.warn("THREE." + this.type + ": .vertexTangents has been removed.")
                    }
                }
            }), Object.defineProperties(oi.prototype, {
                derivatives: {
                    get: function() {
                        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives
                    },
                    set: function(e) {
                        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = e
                    }
                }
            }), cs.prototype.clearTarget = function(e, t, n, r) {
                console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(e), this.clear(t, n, r)
            }, cs.prototype.animate = function(e) {
                console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(e)
            }, cs.prototype.getCurrentRenderTarget = function() {
                return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget()
            }, cs.prototype.getMaxAnisotropy = function() {
                return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy()
            }, cs.prototype.getPrecision = function() {
                return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision
            }, cs.prototype.resetGLState = function() {
                return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset()
            }, cs.prototype.supportsFloatTextures = function() {
                return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float")
            }, cs.prototype.supportsHalfFloatTextures = function() {
                return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float")
            }, cs.prototype.supportsStandardDerivatives = function() {
                return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives")
            }, cs.prototype.supportsCompressedTextureS3TC = function() {
                return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc")
            }, cs.prototype.supportsCompressedTexturePVRTC = function() {
                return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc")
            }, cs.prototype.supportsBlendMinMax = function() {
                return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax")
            }, cs.prototype.supportsVertexTextures = function() {
                return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures
            }, cs.prototype.supportsInstancedArrays = function() {
                return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays")
            }, cs.prototype.enableScissorTest = function(e) {
                console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(e)
            }, cs.prototype.initMaterial = function() {
                console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
            }, cs.prototype.addPrePlugin = function() {
                console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
            }, cs.prototype.addPostPlugin = function() {
                console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
            }, cs.prototype.updateShadowMap = function() {
                console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
            }, cs.prototype.setFaceCulling = function() {
                console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
            }, cs.prototype.allocTextureUnit = function() {
                console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
            }, cs.prototype.setTexture = function() {
                console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
            }, cs.prototype.setTexture2D = function() {
                console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
            }, cs.prototype.setTextureCube = function() {
                console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
            }, cs.prototype.getActiveMipMapLevel = function() {
                return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel()
            }, Object.defineProperties(cs.prototype, {
                shadowMapEnabled: {
                    get: function() {
                        return this.shadowMap.enabled
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = e
                    }
                },
                shadowMapType: {
                    get: function() {
                        return this.shadowMap.type
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = e
                    }
                },
                shadowMapCullFace: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                context: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext()
                    }
                },
                vr: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr
                    }
                },
                gammaInput: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
                    }
                },
                gammaOutput: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = !0 === e ? _t : bt
                    }
                },
                toneMappingWhitePoint: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")
                    }
                }
            }), Object.defineProperties(Ko.prototype, {
                cullFace: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderReverseSided: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderSingleSided: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    }
                }
            }), Object.defineProperties(Xt.prototype, {
                wrapS: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e
                    }
                },
                wrapT: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e
                    }
                },
                magFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e
                    }
                },
                minFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e
                    }
                },
                anisotropy: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e
                    }
                },
                offset: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e
                    }
                },
                repeat: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e
                    }
                },
                format: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e
                    }
                },
                type: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e
                    }
                },
                generateMipmaps: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e
                    }
                }
            }), Ec.prototype.load = function(e) {
                console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                var t = this;
                return (new Sc).load(e, (function(e) {
                    t.setBuffer(e)
                })), this
            }, Tc.prototype.getData = function() {
                return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData()
            }, ci.prototype.updateCubeMap = function(e, t) {
                return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(e, t)
            }, ci.prototype.clear = function(e, t, n, r) {
                return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(e, t, n, r)
            }, Vt.crossOrigin = void 0, Vt.loadTexture = function(e, t, n, r) {
                console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                var i = new Wu;
                i.setCrossOrigin(this.crossOrigin);
                var a = i.load(e, n, void 0, r);
                return t && (a.mapping = t), a
            }, Vt.loadTextureCube = function(e, t, n, r) {
                console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                var i = new Gu;
                i.setCrossOrigin(this.crossOrigin);
                var a = i.load(e, n, void 0, r);
                return t && (a.mapping = t), a
            }, Vt.loadCompressedTexture = function() {
                console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
            }, Vt.loadCompressedTextureCube = function() {
                console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
            };
            "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
                detail: {
                    revision: "131"
                }
            })), "undefined" !== typeof window && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = "131");
            var af = {
                    Linear: {
                        None: function(e) {
                            return e
                        }
                    },
                    Quadratic: {
                        In: function(e) {
                            return e * e
                        },
                        Out: function(e) {
                            return e * (2 - e)
                        },
                        InOut: function(e) {
                            return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1)
                        }
                    },
                    Cubic: {
                        In: function(e) {
                            return e * e * e
                        },
                        Out: function(e) {
                            return --e * e * e + 1
                        },
                        InOut: function(e) {
                            return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2)
                        }
                    },
                    Quartic: {
                        In: function(e) {
                            return e * e * e * e
                        },
                        Out: function(e) {
                            return 1 - --e * e * e * e
                        },
                        InOut: function(e) {
                            return (e *= 2) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2)
                        }
                    },
                    Quintic: {
                        In: function(e) {
                            return e * e * e * e * e
                        },
                        Out: function(e) {
                            return --e * e * e * e * e + 1
                        },
                        InOut: function(e) {
                            return (e *= 2) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2)
                        }
                    },
                    Sinusoidal: {
                        In: function(e) {
                            return 1 - Math.cos(e * Math.PI / 2)
                        },
                        Out: function(e) {
                            return Math.sin(e * Math.PI / 2)
                        },
                        InOut: function(e) {
                            return .5 * (1 - Math.cos(Math.PI * e))
                        }
                    },
                    Exponential: {
                        In: function(e) {
                            return 0 === e ? 0 : Math.pow(1024, e - 1)
                        },
                        Out: function(e) {
                            return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
                        },
                        InOut: function(e) {
                            return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? .5 * Math.pow(1024, e - 1) : .5 * (2 - Math.pow(2, -10 * (e - 1)))
                        }
                    },
                    Circular: {
                        In: function(e) {
                            return 1 - Math.sqrt(1 - e * e)
                        },
                        Out: function(e) {
                            return Math.sqrt(1 - --e * e)
                        },
                        InOut: function(e) {
                            return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
                        }
                    },
                    Elastic: {
                        In: function(e) {
                            return 0 === e ? 0 : 1 === e ? 1 : -Math.pow(2, 10 * (e - 1)) * Math.sin(5 * (e - 1.1) * Math.PI)
                        },
                        Out: function(e) {
                            return 0 === e ? 0 : 1 === e ? 1 : Math.pow(2, -10 * e) * Math.sin(5 * (e - .1) * Math.PI) + 1
                        },
                        InOut: function(e) {
                            return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? -.5 * Math.pow(2, 10 * (e - 1)) * Math.sin(5 * (e - 1.1) * Math.PI) : .5 * Math.pow(2, -10 * (e - 1)) * Math.sin(5 * (e - 1.1) * Math.PI) + 1
                        }
                    },
                    Back: {
                        In: function(e) {
                            var t = 1.70158;
                            return e * e * ((t + 1) * e - t)
                        },
                        Out: function(e) {
                            var t = 1.70158;
                            return --e * e * ((t + 1) * e + t) + 1
                        },
                        InOut: function(e) {
                            var t = 2.5949095;
                            return (e *= 2) < 1 ? e * e * ((t + 1) * e - t) * .5 : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
                        }
                    },
                    Bounce: {
                        In: function(e) {
                            return 1 - af.Bounce.Out(1 - e)
                        },
                        Out: function(e) {
                            return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
                        },
                        InOut: function(e) {
                            return e < .5 ? .5 * af.Bounce.In(2 * e) : .5 * af.Bounce.Out(2 * e - 1) + .5
                        }
                    }
                },
                of = "undefined" === typeof self && "undefined" !== typeof process && process.hrtime ? function() {
                    var e = process.hrtime();
                    return 1e3 * e[0] + e[1] / 1e6
                } : "undefined" !== typeof self && void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now.bind(self.performance) : void 0 !== Date.now ? Date.now : function() {
                    return (new Date).getTime()
                },
                sf = function() {
                    function e() {
                        this._tweens = {}, this._tweensAddedDuringUpdate = {}
                    }
                    return e.prototype.getAll = function() {
                        var e = this;
                        return Object.keys(this._tweens).map((function(t) {
                            return e._tweens[t]
                        }))
                    }, e.prototype.removeAll = function() {
                        this._tweens = {}
                    }, e.prototype.add = function(e) {
                        this._tweens[e.getId()] = e, this._tweensAddedDuringUpdate[e.getId()] = e
                    }, e.prototype.remove = function(e) {
                        delete this._tweens[e.getId()], delete this._tweensAddedDuringUpdate[e.getId()]
                    }, e.prototype.update = function(e, t) {
                        void 0 === e && (e = of ()), void 0 === t && (t = !1);
                        var n = Object.keys(this._tweens);
                        if (0 === n.length) return !1;
                        for (; n.length > 0;) {
                            this._tweensAddedDuringUpdate = {};
                            for (var r = 0; r < n.length; r++) {
                                var i = this._tweens[n[r]],
                                    a = !t;
                                i && !1 === i.update(e, a) && !t && delete this._tweens[n[r]]
                            }
                            n = Object.keys(this._tweensAddedDuringUpdate)
                        }
                        return !0
                    }, e
                }(),
                lf = {
                    Linear: function(e, t) {
                        var n = e.length - 1,
                            r = n * t,
                            i = Math.floor(r),
                            a = lf.Utils.Linear;
                        return t < 0 ? a(e[0], e[1], r) : t > 1 ? a(e[n], e[n - 1], n - r) : a(e[i], e[i + 1 > n ? n : i + 1], r - i)
                    },
                    Bezier: function(e, t) {
                        for (var n = 0, r = e.length - 1, i = Math.pow, a = lf.Utils.Bernstein, o = 0; o <= r; o++) n += i(1 - t, r - o) * i(t, o) * e[o] * a(r, o);
                        return n
                    },
                    CatmullRom: function(e, t) {
                        var n = e.length - 1,
                            r = n * t,
                            i = Math.floor(r),
                            a = lf.Utils.CatmullRom;
                        return e[0] === e[n] ? (t < 0 && (i = Math.floor(r = n * (1 + t))), a(e[(i - 1 + n) % n], e[i], e[(i + 1) % n], e[(i + 2) % n], r - i)) : t < 0 ? e[0] - (a(e[0], e[0], e[1], e[1], -r) - e[0]) : t > 1 ? e[n] - (a(e[n], e[n], e[n - 1], e[n - 1], r - n) - e[n]) : a(e[i ? i - 1 : 0], e[i], e[n < i + 1 ? n : i + 1], e[n < i + 2 ? n : i + 2], r - i)
                    },
                    Utils: {
                        Linear: function(e, t, n) {
                            return (t - e) * n + e
                        },
                        Bernstein: function(e, t) {
                            var n = lf.Utils.Factorial;
                            return n(e) / n(t) / n(e - t)
                        },
                        Factorial: function() {
                            var e = [1];
                            return function(t) {
                                var n = 1;
                                if (e[t]) return e[t];
                                for (var r = t; r > 1; r--) n *= r;
                                return e[t] = n, n
                            }
                        }(),
                        CatmullRom: function(e, t, n, r, i) {
                            var a = .5 * (n - e),
                                o = .5 * (r - t),
                                s = i * i;
                            return (2 * t - 2 * n + a + o) * (i * s) + (-3 * t + 3 * n - 2 * a - o) * s + a * i + t
                        }
                    }
                },
                uf = function() {
                    function e() {}
                    return e.nextId = function() {
                        return e._nextId++
                    }, e._nextId = 0, e
                }(),
                cf = new sf,
                ff = function() {
                    function e(e, t) {
                        void 0 === t && (t = cf), this._object = e, this._group = t, this._isPaused = !1, this._pauseStart = 0, this._valuesStart = {}, this._valuesEnd = {}, this._valuesStartRepeat = {}, this._duration = 1e3, this._initialRepeat = 0, this._repeat = 0, this._yoyo = !1, this._isPlaying = !1, this._reversed = !1, this._delayTime = 0, this._startTime = 0, this._easingFunction = af.Linear.None, this._interpolationFunction = lf.Linear, this._chainedTweens = [], this._onStartCallbackFired = !1, this._id = uf.nextId(), this._isChainStopped = !1, this._goToEnd = !1
                    }
                    return e.prototype.getId = function() {
                        return this._id
                    }, e.prototype.isPlaying = function() {
                        return this._isPlaying
                    }, e.prototype.isPaused = function() {
                        return this._isPaused
                    }, e.prototype.to = function(e, t) {
                        return this._valuesEnd = Object.create(e), void 0 !== t && (this._duration = t), this
                    }, e.prototype.duration = function(e) {
                        return this._duration = e, this
                    }, e.prototype.start = function(e) {
                        if (this._isPlaying) return this;
                        if (this._group && this._group.add(this), this._repeat = this._initialRepeat, this._reversed)
                            for (var t in this._reversed = !1, this._valuesStartRepeat) this._swapEndStartRepeatValues(t), this._valuesStart[t] = this._valuesStartRepeat[t];
                        return this._isPlaying = !0, this._isPaused = !1, this._onStartCallbackFired = !1, this._isChainStopped = !1, this._startTime = void 0 !== e ? "string" === typeof e ? of () + parseFloat(e) : e : of (), this._startTime += this._delayTime, this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat), this
                    }, e.prototype._setupProperties = function(e, t, n, r) {
                        for (var i in n) {
                            var a = e[i],
                                o = Array.isArray(a),
                                s = o ? "array" : typeof a,
                                l = !o && Array.isArray(n[i]);
                            if ("undefined" !== s && "function" !== s) {
                                if (l) {
                                    var u = n[i];
                                    if (0 === u.length) continue;
                                    u = u.map(this._handleRelativeValue.bind(this, a)), n[i] = [a].concat(u)
                                }
                                if ("object" !== s && !o || !a || l) "undefined" === typeof t[i] && (t[i] = a), o || (t[i] *= 1), r[i] = l ? n[i].slice().reverse() : t[i] || 0;
                                else {
                                    for (var c in t[i] = o ? [] : {}, a) t[i][c] = a[c];
                                    r[i] = o ? [] : {}, this._setupProperties(a, t[i], n[i], r[i])
                                }
                            }
                        }
                    }, e.prototype.stop = function() {
                        return this._isChainStopped || (this._isChainStopped = !0, this.stopChainedTweens()), this._isPlaying ? (this._group && this._group.remove(this), this._isPlaying = !1, this._isPaused = !1, this._onStopCallback && this._onStopCallback(this._object), this) : this
                    }, e.prototype.end = function() {
                        return this._goToEnd = !0, this.update(1 / 0), this
                    }, e.prototype.pause = function(e) {
                        return void 0 === e && (e = of ()), this._isPaused || !this._isPlaying || (this._isPaused = !0, this._pauseStart = e, this._group && this._group.remove(this)), this
                    }, e.prototype.resume = function(e) {
                        return void 0 === e && (e = of ()), this._isPaused && this._isPlaying ? (this._isPaused = !1, this._startTime += e - this._pauseStart, this._pauseStart = 0, this._group && this._group.add(this), this) : this
                    }, e.prototype.stopChainedTweens = function() {
                        for (var e = 0, t = this._chainedTweens.length; e < t; e++) this._chainedTweens[e].stop();
                        return this
                    }, e.prototype.group = function(e) {
                        return this._group = e, this
                    }, e.prototype.delay = function(e) {
                        return this._delayTime = e, this
                    }, e.prototype.repeat = function(e) {
                        return this._initialRepeat = e, this._repeat = e, this
                    }, e.prototype.repeatDelay = function(e) {
                        return this._repeatDelayTime = e, this
                    }, e.prototype.yoyo = function(e) {
                        return this._yoyo = e, this
                    }, e.prototype.easing = function(e) {
                        return this._easingFunction = e, this
                    }, e.prototype.interpolation = function(e) {
                        return this._interpolationFunction = e, this
                    }, e.prototype.chain = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        return this._chainedTweens = e, this
                    }, e.prototype.onStart = function(e) {
                        return this._onStartCallback = e, this
                    }, e.prototype.onUpdate = function(e) {
                        return this._onUpdateCallback = e, this
                    }, e.prototype.onRepeat = function(e) {
                        return this._onRepeatCallback = e, this
                    }, e.prototype.onComplete = function(e) {
                        return this._onCompleteCallback = e, this
                    }, e.prototype.onStop = function(e) {
                        return this._onStopCallback = e, this
                    }, e.prototype.update = function(e, t) {
                        if (void 0 === e && (e = of ()), void 0 === t && (t = !0), this._isPaused) return !0;
                        var n, r, i = this._startTime + this._duration;
                        if (!this._goToEnd && !this._isPlaying) {
                            if (e > i) return !1;
                            t && this.start(e)
                        }
                        if (this._goToEnd = !1, e < this._startTime) return !0;
                        !1 === this._onStartCallbackFired && (this._onStartCallback && this._onStartCallback(this._object), this._onStartCallbackFired = !0), r = (e - this._startTime) / this._duration, r = 0 === this._duration || r > 1 ? 1 : r;
                        var a = this._easingFunction(r);
                        if (this._updateProperties(this._object, this._valuesStart, this._valuesEnd, a), this._onUpdateCallback && this._onUpdateCallback(this._object, r), 1 === r) {
                            if (this._repeat > 0) {
                                for (n in isFinite(this._repeat) && this._repeat--, this._valuesStartRepeat) this._yoyo || "string" !== typeof this._valuesEnd[n] || (this._valuesStartRepeat[n] = this._valuesStartRepeat[n] + parseFloat(this._valuesEnd[n])), this._yoyo && this._swapEndStartRepeatValues(n), this._valuesStart[n] = this._valuesStartRepeat[n];
                                return this._yoyo && (this._reversed = !this._reversed), void 0 !== this._repeatDelayTime ? this._startTime = e + this._repeatDelayTime : this._startTime = e + this._delayTime, this._onRepeatCallback && this._onRepeatCallback(this._object), !0
                            }
                            this._onCompleteCallback && this._onCompleteCallback(this._object);
                            for (var o = 0, s = this._chainedTweens.length; o < s; o++) this._chainedTweens[o].start(this._startTime + this._duration);
                            return this._isPlaying = !1, !1
                        }
                        return !0
                    }, e.prototype._updateProperties = function(e, t, n, r) {
                        for (var i in n)
                            if (void 0 !== t[i]) {
                                var a = t[i] || 0,
                                    o = n[i],
                                    s = Array.isArray(e[i]),
                                    l = Array.isArray(o);
                                !s && l ? e[i] = this._interpolationFunction(o, r) : "object" === typeof o && o ? this._updateProperties(e[i], a, o, r) : "number" === typeof(o = this._handleRelativeValue(a, o)) && (e[i] = a + (o - a) * r)
                            }
                    }, e.prototype._handleRelativeValue = function(e, t) {
                        return "string" !== typeof t ? t : "+" === t.charAt(0) || "-" === t.charAt(0) ? e + parseFloat(t) : parseFloat(t)
                    }, e.prototype._swapEndStartRepeatValues = function(e) {
                        var t = this._valuesStartRepeat[e],
                            n = this._valuesEnd[e];
                        this._valuesStartRepeat[e] = "string" === typeof n ? this._valuesStartRepeat[e] + parseFloat(n) : this._valuesEnd[e], this._valuesEnd[e] = t
                    }, e
                }(),
                df = uf.nextId,
                hf = cf,
                pf = hf.getAll.bind(hf),
                vf = hf.removeAll.bind(hf),
                mf = hf.add.bind(hf),
                gf = hf.remove.bind(hf),
                yf = hf.update.bind(hf),
                xf = {
                    Easing: af,
                    Group: sf,
                    Interpolation: lf,
                    now: of ,
                    Sequence: uf,
                    nextId: df,
                    Tween: ff,
                    VERSION: "18.6.4",
                    getAll: pf,
                    removeAll: vf,
                    add: mf,
                    remove: gf,
                    update: yf
                },
                bf = n(802),
                _f = n.n(bf),
                wf = "#180427",
                Sf = "#fff0f5",
                Mf = "nuzair46.github.io_darkmode",
                kf = n(184),
                Ef = function(e) {
                    var n = (0, t.useRef)(null);
                    return (0, t.useEffect)((function() {
                        var e = n.current,
                            t = Date.now(),
                            r = Math.random(),
                            i = new cs({
                                canvas: e,
                                powerPreference: "high-performance",
                                alpha: !0,
                                antialias: !0
                            });
                        i.setClearColor(0, 0);
                        var a = new li(60, window.innerWidth / window.innerHeight, 1, 200),
                            o = new ps,
                            s = ai.merge([Mi.ambient, Mi.lights, ki.phong.uniforms, {
                                time: {
                                    type: "f",
                                    value: 0
                                }
                            }]),
                            l = new oi({
                                uniforms: s,
                                vertexShader: "\n\t\t\tvec3 mod289(vec3 x)\n\t\t\t{\n\t\t\t\t\treturn x - floor(x * (1.0 / 289.0)) * 289.0;\n\t\t\t}\n\t\t\tvec4 mod289(vec4 x)\n\t\t\t{\n\t\t\t\t\treturn x - floor(x * (1.0 / 289.0)) * 289.0;\n\t\t\t}\n\t\t\tvec4 permute(vec4 x)\n\t\t\t{\n\t\t\t\t\treturn mod289(((x * 34.0) + 1.0) * x);\n\t\t\t}\n\t\t\tvec4 taylorInvSqrt(vec4 r)\n\t\t\t{\n\t\t\t\t\treturn 1.79284291400159 - 0.85373472095314 * r;\n\t\t\t}\n\t\t\tvec3 fade(vec3 t) {\n\t\t\t\t\treturn t*t*t*(t*(t*6.0-15.0)+10.0);\n\t\t\t}\n\n\t\t\t// Classic Perlin noise\n\t\t\tfloat cnoise(vec3 P)\n\t\t\t{\n\t\t\t\t\tvec3 Pi0 = floor(P); // Integer part for indexing\n\t\t\t\t\tvec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n\t\t\t\t\tPi0 = mod289(Pi0);\n\t\t\t\t\tPi1 = mod289(Pi1);\n\t\t\t\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\t\t\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\t\t\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\t\t\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\t\t\t\tvec4 iz0 = Pi0.zzzz;\n\t\t\t\t\tvec4 iz1 = Pi1.zzzz;\n\t\t\t\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\t\t\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\t\t\t\tvec4 ixy1 = permute(ixy + iz1);\n\t\t\t\t\tvec4 gx0 = ixy0 * (1.0 / 7.0);\n\t\t\t\t\tvec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n\t\t\t\t\tgx0 = fract(gx0);\n\t\t\t\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\t\t\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\t\t\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\t\t\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\t\t\t\t\tvec4 gx1 = ixy1 * (1.0 / 7.0);\n\t\t\t\t\tvec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n\t\t\t\t\tgx1 = fract(gx1);\n\t\t\t\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\t\t\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\t\t\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\t\t\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\t\t\t\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\t\t\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\t\t\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\t\t\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\t\t\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\t\t\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\t\t\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\t\t\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\t\t\t\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\t\t\t\tg000 *= norm0.x;\n\t\t\t\t\tg010 *= norm0.y;\n\t\t\t\t\tg100 *= norm0.z;\n\t\t\t\t\tg110 *= norm0.w;\n\t\t\t\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\t\t\t\tg001 *= norm1.x;\n\t\t\t\t\tg011 *= norm1.y;\n\t\t\t\t\tg101 *= norm1.z;\n\t\t\t\t\tg111 *= norm1.w;\n\t\t\t\t\tfloat n000 = dot(g000, Pf0);\n\t\t\t\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\t\t\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\t\t\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\t\t\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\t\t\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\t\t\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\t\t\t\tfloat n111 = dot(g111, Pf1);\n\t\t\t\t\tvec3 fade_xyz = fade(Pf0);\n\t\t\t\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\t\t\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\t\t\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n\t\t\t\t\treturn 2.2 * n_xyz;\n\t\t\t}\n\n\t\t\t// Classic Perlin noise, periodic variant\n\t\t\tfloat pnoise(vec3 P, vec3 rep)\n\t\t\t{\n\t\t\t\t\tvec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n\t\t\t\t\tvec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n\t\t\t\t\tPi0 = mod289(Pi0);\n\t\t\t\t\tPi1 = mod289(Pi1);\n\t\t\t\t\tvec3 Pf0 = fract(P); // Fractional part for interpolation\n\t\t\t\t\tvec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n\t\t\t\t\tvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n\t\t\t\t\tvec4 iy = vec4(Pi0.yy, Pi1.yy);\n\t\t\t\t\tvec4 iz0 = Pi0.zzzz;\n\t\t\t\t\tvec4 iz1 = Pi1.zzzz;\n\t\t\t\t\tvec4 ixy = permute(permute(ix) + iy);\n\t\t\t\t\tvec4 ixy0 = permute(ixy + iz0);\n\t\t\t\t\tvec4 ixy1 = permute(ixy + iz1);\n\t\t\t\t\tvec4 gx0 = ixy0 * (1.0 / 7.0);\n\t\t\t\t\tvec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n\t\t\t\t\tgx0 = fract(gx0);\n\t\t\t\t\tvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n\t\t\t\t\tvec4 sz0 = step(gz0, vec4(0.0));\n\t\t\t\t\tgx0 -= sz0 * (step(0.0, gx0) - 0.5);\n\t\t\t\t\tgy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\t\t\t\t\tvec4 gx1 = ixy1 * (1.0 / 7.0);\n\t\t\t\t\tvec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n\t\t\t\t\tgx1 = fract(gx1);\n\t\t\t\t\tvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n\t\t\t\t\tvec4 sz1 = step(gz1, vec4(0.0));\n\t\t\t\t\tgx1 -= sz1 * (step(0.0, gx1) - 0.5);\n\t\t\t\t\tgy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\t\t\t\t\tvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n\t\t\t\t\tvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n\t\t\t\t\tvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n\t\t\t\t\tvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n\t\t\t\t\tvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n\t\t\t\t\tvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n\t\t\t\t\tvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n\t\t\t\t\tvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\t\t\t\t\tvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n\t\t\t\t\tg000 *= norm0.x;\n\t\t\t\t\tg010 *= norm0.y;\n\t\t\t\t\tg100 *= norm0.z;\n\t\t\t\t\tg110 *= norm0.w;\n\t\t\t\t\tvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n\t\t\t\t\tg001 *= norm1.x;\n\t\t\t\t\tg011 *= norm1.y;\n\t\t\t\t\tg101 *= norm1.z;\n\t\t\t\t\tg111 *= norm1.w;\n\t\t\t\t\tfloat n000 = dot(g000, Pf0);\n\t\t\t\t\tfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n\t\t\t\t\tfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n\t\t\t\t\tfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n\t\t\t\t\tfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n\t\t\t\t\tfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n\t\t\t\t\tfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n\t\t\t\t\tfloat n111 = dot(g111, Pf1);\n\t\t\t\t\tvec3 fade_xyz = fade(Pf0);\n\t\t\t\t\tvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n\t\t\t\t\tvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n\t\t\t\t\tfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n\t\t\t\t\treturn 2.2 * n_xyz;\n\t\t\t}\n\n\t\t\tfloat turbulence(vec3 p) {\n\t\t\t\t\tfloat w = 100.0;\n\t\t\t\t\tfloat t = -.5;\n\t\t\t\t\tfor (float f = 1.0 ; f <= 10.0 ; f++) {\n\t\t\t\t\tfloat power = pow(2.0, f);\n\t\t\t\t\tt += abs(pnoise(vec3(power * p), vec3(10.0, 10.0, 10.0)) / power);\n\t\t\t\t\t}\n\t\t\t\t\treturn t;\n\t\t\t}\n\n\t\t\t// START\n\t\t\tuniform float time;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec3 vNormal;\n\t\t\tvarying float noise;\n\n\t\t\t#define PHONG\n\n\t\t\tvarying vec3 vViewPosition;\n\n\t\t\t#include <common>\n\t\t\t#include <uv_pars_vertex>\n\t\t\t#include <uv2_pars_vertex>\n\t\t\t#include <displacementmap_pars_vertex>\n\t\t\t#include <envmap_pars_vertex>\n\t\t\t#include <color_pars_vertex>\n\t\t\t#include <fog_pars_vertex>\n\t\t\t#include <morphtarget_pars_vertex>\n\t\t\t#include <skinning_pars_vertex>\n\t\t\t#include <shadowmap_pars_vertex>\n\t\t\t#include <logdepthbuf_pars_vertex>\n\t\t\t#include <clipping_planes_pars_vertex>\n\n\t\t\tvoid main() {\n\t\t\t\t\t#include <uv_vertex>\n\t\t\t\t\t#include <uv2_vertex>\n\t\t\t\t\t#include <color_vertex>\n\t\t\t\t\t#include <beginnormal_vertex>\n\t\t\t\t\t#include <morphnormal_vertex>\n\t\t\t\t\t#include <skinbase_vertex>\n\t\t\t\t\t#include <skinnormal_vertex>\n\t\t\t\t\t#include <defaultnormal_vertex>\n\t\t\t\t\t#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\t\t\t\t\tvNormal = normalize(transformedNormal);\n\t\t\t\t\t#endif\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <displacementmap_vertex>\n\t\t\t\t\t#include <morphtarget_vertex>\n\t\t\t\t\t#include <skinning_vertex>\n\t\t\t\t\t#include <project_vertex>\n\t\t\t\t\t#include <logdepthbuf_vertex>\n\t\t\t\t\t#include <clipping_planes_vertex>\n\n\t\t\t\t\tvViewPosition = - mvPosition.xyz;\n\n\t\t\t\t\t#include <worldpos_vertex>\n\t\t\t\t\t#include <envmap_vertex>\n\t\t\t\t\t#include <shadowmap_vertex>\n\t\t\t\t\t#include <fog_vertex>\n\n\t\t\t\t\tvUv = uv;\n\n\t\t\t\t\tnoise = turbulence(0.01 * position + normal + time * 0.8);\n\t\t\t\t\tvec3 displacement = vec3((position.x) * noise, position.y * noise, position.z * noise);\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4((position + normal) + displacement, 1.0);\n\t\t\t}\n\t\t\t",
                                fragmentShader: "\n\t\t\t#define PHONG\n\n\t\t\tuniform vec3 diffuse;\n\t\t\tuniform vec3 emissive;\n\t\t\tuniform vec3 specular;\n\t\t\tuniform float shininess;\n\t\t\tuniform float opacity;\n\t\t\tuniform float time;\n\t\t\tvarying vec2 vUv;\n\t\t\tvarying vec3 newPosition;\n\t\t\tvarying float noise;\n\n\t\t\t#include <common>\n\t\t\t#include <packing>\n\t\t\t#include <color_pars_fragment>\n\t\t\t#include <uv_pars_fragment>\n\t\t\t#include <uv2_pars_fragment>\n\t\t\t#include <map_pars_fragment>\n\t\t\t#include <alphamap_pars_fragment>\n\t\t\t#include <aomap_pars_fragment>\n\t\t\t#include <lightmap_pars_fragment>\n\t\t\t#include <emissivemap_pars_fragment>\n\t\t\t#include <envmap_pars_fragment>\n\t\t\t#include <gradientmap_pars_fragment>\n\t\t\t#include <fog_pars_fragment>\n\t\t\t#include <bsdfs>\n\t\t\t#include <lights_pars_begin>\n\t\t\t#include <envmap_physical_pars_fragment>\n\t\t\t#include <lights_phong_pars_fragment>\n\t\t\t#include <shadowmap_pars_fragment>\n\t\t\t#include <bumpmap_pars_fragment>\n\t\t\t#include <normalmap_pars_fragment>\n\t\t\t#include <specularmap_pars_fragment>\n\t\t\t#include <logdepthbuf_pars_fragment>\n\t\t\t#include <clipping_planes_pars_fragment>\n\n\t\t\tvoid main() {\n\t\t\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t\t\tvec3 color = vec3(vUv * (0.2 - 2.0 * noise), 1.0);\n\t\t\t\t\tvec3 finalColors = vec3(color.b * 1.5, color.r, color.r);\n\t\t\t\t\tvec4 diffuseColor = vec4(cos(finalColors * noise * 3.0), 1.0);\n\t\t\t\t\tReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\n\t\t\t\t\tvec3 totalEmissiveRadiance = emissive;\n\n\t\t\t\t\t#include <logdepthbuf_fragment>\n\t\t\t\t\t#include <map_fragment>\n\t\t\t\t\t#include <color_fragment>\n\t\t\t\t\t#include <alphamap_fragment>\n\t\t\t\t\t#include <alphatest_fragment>\n\t\t\t\t\t#include <specularmap_fragment>\n\t\t\t\t\t#include <normal_fragment_begin>\n\t\t\t\t\t#include <normal_fragment_maps>\n\t\t\t\t\t#include <emissivemap_fragment>\n\t\t\t\t\t#include <lights_phong_fragment>\n\t\t\t\t\t#include <lights_fragment_begin>\n\t\t\t\t\t#include <lights_fragment_maps>\n\t\t\t\t\t#include <lights_fragment_end>\n\t\t\t\t\t#include <aomap_fragment>\n\n\t\t\t\t\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t\t\t\t\t#include <envmap_fragment>\n\t\t\t\t\t#include <premultiplied_alpha_fragment>\n\t\t\t\t\t#include <tonemapping_fragment>\n\t\t\t\t\t#include <encodings_fragment>\n\t\t\t\t\t#include <fog_fragment>\n\n\t\t\t\t\tgl_FragColor = vec4(outgoingLight, diffuseColor.a);\n\t\t\t}\n\t\t\t",
                                lights: !0
                            }),
                            u = new fu(32, 144, 144),
                            c = new ei(u, l);
                        i.setSize(window.innerWidth, window.innerHeight), a.position.z = 60, o.add(c), c.position.z = 0, c.modifier = r;
                        var f = new lc(14644223, .6);
                        f.position.z = 200, f.position.x = -100, f.position.y = -200, o.add(f);
                        var d = new uc(16777215, .3);
                        o.add(d);
                        var h = function() {
                            var t = _f()(),
                                n = window.innerWidth,
                                r = t + .3 * t;
                            e.style.height = r, i.setSize(n, r), a.aspect = n / r, a.updateProjectionMatrix(), n <= 696 ? (c.position.x = 14, c.position.y = 10) : n <= 1024 ? (c.position.x = 18, c.position.y = 14) : (c.position.x = 22, c.position.y = 16)
                        };
                        window.addEventListener("resize", h), h();
                        var p = !1;
                        window.addEventListener("mousemove", (function(e) {
                            p || (requestAnimationFrame((function() {
                                var t = e.clientX / window.innerWidth,
                                    n = e.clientY / window.innerHeight;
                                new xf.Tween(c.rotation).to({
                                    x: n / 2,
                                    y: t / 2
                                }, 1e3).easing(xf.Easing.Quartic.Out).start(), p = !1
                            })), p = !0)
                        }));
                        ! function e() {
                            requestAnimationFrame(e);
                            s.time.value = 75e-6 * (Date.now() - t), c.rotation.z += .002, i.render(o, a), xf.update()
                        }()
                    }), []), (0, kf.jsx)("canvas", Oe({
                        ref: n
                    }, e))
                };

            function Tf(e, t) {
                if (null == e) return {};
                var n, r, i = {},
                    a = Object.keys(e);
                for (r = 0; r < a.length; r++) n = a[r], t.indexOf(n) >= 0 || (i[n] = e[n]);
                return i
            }

            function Lf() {
                return Lf = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
                    }
                    return e
                }, Lf.apply(this, arguments)
            }

            function Af(e) {
                var t, n, r = "";
                if ("string" == typeof e || "number" == typeof e) r += e;
                else if ("object" == typeof e)
                    if (Array.isArray(e))
                        for (t = 0; t < e.length; t++) e[t] && (n = Af(e[t])) && (r && (r += " "), r += n);
                    else
                        for (t in e) e[t] && (r && (r += " "), r += t);
                return r
            }
            var Cf = function() {
                for (var e, t, n = 0, r = ""; n < arguments.length;)(e = arguments[n++]) && (t = Af(e)) && (r && (r += " "), r += t);
                return r
            };

            function Pf(e) {
                return null !== e && "object" === typeof e && e.constructor === Object
            }

            function Rf(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {
                        clone: !0
                    },
                    r = n.clone ? Lf({}, e) : e;
                return Pf(e) && Pf(t) && Object.keys(t).forEach((function(i) {
                    "__proto__" !== i && (Pf(t[i]) && i in e && Pf(e[i]) ? r[i] = Rf(e[i], t[i], n) : r[i] = t[i])
                })), r
            }

            function Nf(e) {
                for (var t = "https://mui.com/production-error/?code=" + e, n = 1; n < arguments.length; n += 1) t += "&args[]=" + encodeURIComponent(arguments[n]);
                return "Minified MUI error #" + e + "; visit " + t + " for the full message."
            }

            function If(e) {
                if ("string" !== typeof e) throw new Error(Nf(7));
                return e.charAt(0).toUpperCase() + e.slice(1)
            }
            var zf = {
                    xs: 0,
                    sm: 600,
                    md: 900,
                    lg: 1200,
                    xl: 1536
                },
                Of = {
                    keys: ["xs", "sm", "md", "lg", "xl"],
                    up: function(e) {
                        return "@media (min-width:".concat(zf[e], "px)")
                    }
                };

            function Df(e, t, n) {
                var r = e.theme || {};
                if (Array.isArray(t)) {
                    var i = r.breakpoints || Of;
                    return t.reduce((function(e, r, a) {
                        return e[i.up(i.keys[a])] = n(t[a]), e
                    }), {})
                }
                if ("object" === typeof t) {
                    var a = r.breakpoints || Of;
                    return Object.keys(t).reduce((function(e, r) {
                        if (-1 !== Object.keys(a.values || zf).indexOf(r)) {
                            e[a.up(r)] = n(t[r], r)
                        } else {
                            var i = r;
                            e[i] = t[i]
                        }
                        return e
                    }), {})
                }
                return n(t)
            }

            function Ff() {
                var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = null == (e = t.keys) ? void 0 : e.reduce((function(e, n) {
                        return e[t.up(n)] = {}, e
                    }), {});
                return n || {}
            }

            function Bf(e, t) {
                return e.reduce((function(e, t) {
                    var n = e[t];
                    return (!n || 0 === Object.keys(n).length) && delete e[t], e
                }), t)
            }

            function Uf(e, t) {
                var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                if (!t || "string" !== typeof t) return null;
                if (e && e.vars && n) {
                    var r = "vars.".concat(t).split(".").reduce((function(e, t) {
                        return e && e[t] ? e[t] : null
                    }), e);
                    if (null != r) return r
                }
                return t.split(".").reduce((function(e, t) {
                    return e && null != e[t] ? e[t] : null
                }), e)
            }

            function Hf(e, t, n) {
                var r, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n;
                return r = "function" === typeof e ? e(n) : Array.isArray(e) ? e[n] || i : Uf(e, n) || i, t && (r = t(r, i)), r
            }
            var Vf = function(e) {
                var t = e.prop,
                    n = e.cssProperty,
                    r = void 0 === n ? e.prop : n,
                    i = e.themeKey,
                    a = e.transform,
                    o = function(e) {
                        if (null == e[t]) return null;
                        var n = e[t],
                            o = Uf(e.theme, i) || {};
                        return Df(e, n, (function(e) {
                            var n = Hf(o, a, e);
                            return e === n && "string" === typeof e && (n = Hf(o, a, "".concat(t).concat("default" === e ? "" : If(e)), e)), !1 === r ? n : Ie({}, r, n)
                        }))
                    };
                return o.propTypes = {}, o.filterProps = [t], o
            };
            var Gf = function(e, t) {
                return t ? Rf(e, t, {
                    clone: !1
                }) : e
            };
            var Wf = function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                var r = t.reduce((function(e, t) {
                        return t.filterProps.forEach((function(n) {
                            e[n] = t
                        })), e
                    }), {}),
                    i = function(e) {
                        return Object.keys(e).reduce((function(t, n) {
                            return r[n] ? Gf(t, r[n](e)) : t
                        }), {})
                    };
                return i.propTypes = {}, i.filterProps = t.reduce((function(e, t) {
                    return e.concat(t.filterProps)
                }), []), i
            };
            var jf = {
                    m: "margin",
                    p: "padding"
                },
                qf = {
                    t: "Top",
                    r: "Right",
                    b: "Bottom",
                    l: "Left",
                    x: ["Left", "Right"],
                    y: ["Top", "Bottom"]
                },
                Xf = {
                    marginX: "mx",
                    marginY: "my",
                    paddingX: "px",
                    paddingY: "py"
                },
                Yf = function(e) {
                    var t = {};
                    return function(n) {
                        return void 0 === t[n] && (t[n] = e(n)), t[n]
                    }
                }((function(e) {
                    if (e.length > 2) {
                        if (!Xf[e]) return [e];
                        e = Xf[e]
                    }
                    var t = u(e.split(""), 2),
                        n = t[0],
                        r = t[1],
                        i = jf[n],
                        a = qf[r] || "";
                    return Array.isArray(a) ? a.map((function(e) {
                        return i + e
                    })) : [i + a]
                })),
                Zf = ["m", "mt", "mr", "mb", "ml", "mx", "my", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "marginInline", "marginInlineStart", "marginInlineEnd", "marginBlock", "marginBlockStart", "marginBlockEnd"],
                Jf = ["p", "pt", "pr", "pb", "pl", "px", "py", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "paddingBlock", "paddingBlockStart", "paddingBlockEnd"],
                $f = [].concat(Zf, Jf);

            function Qf(e, t, n, r) {
                var i, a = null != (i = Uf(e, t, !1)) ? i : n;
                return "number" === typeof a ? function(e) {
                    return "string" === typeof e ? e : a * e
                } : Array.isArray(a) ? function(e) {
                    return "string" === typeof e ? e : a[e]
                } : "function" === typeof a ? a : function() {}
            }

            function Kf(e) {
                return Qf(e, "spacing", 8)
            }

            function ed(e, t) {
                if ("string" === typeof t || null == t) return t;
                var n = e(Math.abs(t));
                return t >= 0 ? n : "number" === typeof n ? -n : "-".concat(n)
            }

            function td(e, t, n, r) {
                if (-1 === t.indexOf(n)) return null;
                var i = function(e, t) {
                    return function(n) {
                        return e.reduce((function(e, r) {
                            return e[r] = ed(t, n), e
                        }), {})
                    }
                }(Yf(n), r);
                return Df(e, e[n], i)
            }

            function nd(e, t) {
                var n = Kf(e.theme);
                return Object.keys(e).map((function(r) {
                    return td(e, t, r, n)
                })).reduce(Gf, {})
            }

            function rd(e) {
                return nd(e, Zf)
            }

            function id(e) {
                return nd(e, Jf)
            }

            function ad(e) {
                return nd(e, $f)
            }
            rd.propTypes = {}, rd.filterProps = Zf, id.propTypes = {}, id.filterProps = Jf, ad.propTypes = {}, ad.filterProps = $f;
            var od = ad;

            function sd(e) {
                return "number" !== typeof e ? e : "".concat(e, "px solid")
            }
            var ld = Vf({
                    prop: "border",
                    themeKey: "borders",
                    transform: sd
                }),
                ud = Vf({
                    prop: "borderTop",
                    themeKey: "borders",
                    transform: sd
                }),
                cd = Vf({
                    prop: "borderRight",
                    themeKey: "borders",
                    transform: sd
                }),
                fd = Vf({
                    prop: "borderBottom",
                    themeKey: "borders",
                    transform: sd
                }),
                dd = Vf({
                    prop: "borderLeft",
                    themeKey: "borders",
                    transform: sd
                }),
                hd = Vf({
                    prop: "borderColor",
                    themeKey: "palette"
                }),
                pd = Vf({
                    prop: "borderTopColor",
                    themeKey: "palette"
                }),
                vd = Vf({
                    prop: "borderRightColor",
                    themeKey: "palette"
                }),
                md = Vf({
                    prop: "borderBottomColor",
                    themeKey: "palette"
                }),
                gd = Vf({
                    prop: "borderLeftColor",
                    themeKey: "palette"
                }),
                yd = function(e) {
                    if (void 0 !== e.borderRadius && null !== e.borderRadius) {
                        var t = Qf(e.theme, "shape.borderRadius", 4);
                        return Df(e, e.borderRadius, (function(e) {
                            return {
                                borderRadius: ed(t, e)
                            }
                        }))
                    }
                    return null
                };
            yd.propTypes = {}, yd.filterProps = ["borderRadius"];
            var xd = Wf(ld, ud, cd, fd, dd, hd, pd, vd, md, gd, yd),
                bd = Wf(Vf({
                    prop: "displayPrint",
                    cssProperty: !1,
                    transform: function(e) {
                        return {
                            "@media print": {
                                display: e
                            }
                        }
                    }
                }), Vf({
                    prop: "display"
                }), Vf({
                    prop: "overflow"
                }), Vf({
                    prop: "textOverflow"
                }), Vf({
                    prop: "visibility"
                }), Vf({
                    prop: "whiteSpace"
                })),
                _d = Wf(Vf({
                    prop: "flexBasis"
                }), Vf({
                    prop: "flexDirection"
                }), Vf({
                    prop: "flexWrap"
                }), Vf({
                    prop: "justifyContent"
                }), Vf({
                    prop: "alignItems"
                }), Vf({
                    prop: "alignContent"
                }), Vf({
                    prop: "order"
                }), Vf({
                    prop: "flex"
                }), Vf({
                    prop: "flexGrow"
                }), Vf({
                    prop: "flexShrink"
                }), Vf({
                    prop: "alignSelf"
                }), Vf({
                    prop: "justifyItems"
                }), Vf({
                    prop: "justifySelf"
                })),
                wd = function(e) {
                    if (void 0 !== e.gap && null !== e.gap) {
                        var t = Qf(e.theme, "spacing", 8);
                        return Df(e, e.gap, (function(e) {
                            return {
                                gap: ed(t, e)
                            }
                        }))
                    }
                    return null
                };
            wd.propTypes = {}, wd.filterProps = ["gap"];
            var Sd = function(e) {
                if (void 0 !== e.columnGap && null !== e.columnGap) {
                    var t = Qf(e.theme, "spacing", 8);
                    return Df(e, e.columnGap, (function(e) {
                        return {
                            columnGap: ed(t, e)
                        }
                    }))
                }
                return null
            };
            Sd.propTypes = {}, Sd.filterProps = ["columnGap"];
            var Md = function(e) {
                if (void 0 !== e.rowGap && null !== e.rowGap) {
                    var t = Qf(e.theme, "spacing", 8);
                    return Df(e, e.rowGap, (function(e) {
                        return {
                            rowGap: ed(t, e)
                        }
                    }))
                }
                return null
            };
            Md.propTypes = {}, Md.filterProps = ["rowGap"];
            var kd = Wf(wd, Sd, Md, Vf({
                    prop: "gridColumn"
                }), Vf({
                    prop: "gridRow"
                }), Vf({
                    prop: "gridAutoFlow"
                }), Vf({
                    prop: "gridAutoColumns"
                }), Vf({
                    prop: "gridAutoRows"
                }), Vf({
                    prop: "gridTemplateColumns"
                }), Vf({
                    prop: "gridTemplateRows"
                }), Vf({
                    prop: "gridTemplateAreas"
                }), Vf({
                    prop: "gridArea"
                })),
                Ed = Wf(Vf({
                    prop: "position"
                }), Vf({
                    prop: "zIndex",
                    themeKey: "zIndex"
                }), Vf({
                    prop: "top"
                }), Vf({
                    prop: "right"
                }), Vf({
                    prop: "bottom"
                }), Vf({
                    prop: "left"
                }));

            function Td(e, t) {
                return "grey" === t ? t : e
            }
            var Ld = Wf(Vf({
                    prop: "color",
                    themeKey: "palette",
                    transform: Td
                }), Vf({
                    prop: "bgcolor",
                    cssProperty: "backgroundColor",
                    themeKey: "palette",
                    transform: Td
                }), Vf({
                    prop: "backgroundColor",
                    themeKey: "palette",
                    transform: Td
                })),
                Ad = Vf({
                    prop: "boxShadow",
                    themeKey: "shadows"
                });

            function Cd(e) {
                return e <= 1 && 0 !== e ? "".concat(100 * e, "%") : e
            }
            var Pd = Vf({
                    prop: "width",
                    transform: Cd
                }),
                Rd = function(e) {
                    if (void 0 !== e.maxWidth && null !== e.maxWidth) {
                        return Df(e, e.maxWidth, (function(t) {
                            var n, r, i;
                            return {
                                maxWidth: (null == (n = e.theme) || null == (r = n.breakpoints) || null == (i = r.values) ? void 0 : i[t]) || zf[t] || Cd(t)
                            }
                        }))
                    }
                    return null
                };
            Rd.filterProps = ["maxWidth"];
            var Nd = Vf({
                    prop: "minWidth",
                    transform: Cd
                }),
                Id = Vf({
                    prop: "height",
                    transform: Cd
                }),
                zd = Vf({
                    prop: "maxHeight",
                    transform: Cd
                }),
                Od = Vf({
                    prop: "minHeight",
                    transform: Cd
                }),
                Dd = (Vf({
                    prop: "size",
                    cssProperty: "width",
                    transform: Cd
                }), Vf({
                    prop: "size",
                    cssProperty: "height",
                    transform: Cd
                }), Wf(Pd, Rd, Nd, Id, zd, Od, Vf({
                    prop: "boxSizing"
                }))),
                Fd = Vf({
                    prop: "fontFamily",
                    themeKey: "typography"
                }),
                Bd = Vf({
                    prop: "fontSize",
                    themeKey: "typography"
                }),
                Ud = Vf({
                    prop: "fontStyle",
                    themeKey: "typography"
                }),
                Hd = Vf({
                    prop: "fontWeight",
                    themeKey: "typography"
                }),
                Vd = Vf({
                    prop: "letterSpacing"
                }),
                Gd = Vf({
                    prop: "textTransform"
                }),
                Wd = Vf({
                    prop: "lineHeight"
                }),
                jd = Vf({
                    prop: "textAlign"
                }),
                qd = Wf(Vf({
                    prop: "typography",
                    cssProperty: !1,
                    themeKey: "typography"
                }), Fd, Bd, Ud, Hd, Vd, Wd, jd, Gd),
                Xd = {
                    borders: xd.filterProps,
                    display: bd.filterProps,
                    flexbox: _d.filterProps,
                    grid: kd.filterProps,
                    positions: Ed.filterProps,
                    palette: Ld.filterProps,
                    shadows: Ad.filterProps,
                    sizing: Dd.filterProps,
                    spacing: od.filterProps,
                    typography: qd.filterProps
                },
                Yd = {
                    borders: xd,
                    display: bd,
                    flexbox: _d,
                    grid: kd,
                    positions: Ed,
                    palette: Ld,
                    shadows: Ad,
                    sizing: Dd,
                    spacing: od,
                    typography: qd
                },
                Zd = Object.keys(Xd).reduce((function(e, t) {
                    return Xd[t].forEach((function(n) {
                        e[n] = Yd[t]
                    })), e
                }), {});
            var Jd = ["sx"];

            function $d(e) {
                var t, n = e.sx,
                    r = function(e) {
                        var t = {
                            systemProps: {},
                            otherProps: {}
                        };
                        return Object.keys(e).forEach((function(n) {
                            Zd[n] ? t.systemProps[n] = e[n] : t.otherProps[n] = e[n]
                        })), t
                    }(Tf(e, Jd)),
                    i = r.systemProps,
                    a = r.otherProps;
                return t = Array.isArray(n) ? [i].concat(f(n)) : "function" === typeof n ? function() {
                    var e = n.apply(void 0, arguments);
                    return Pf(e) ? Lf({}, i, e) : i
                } : Lf({}, i, n), Lf({}, a, {
                    sx: t
                })
            }

            function Qd(e, t, n) {
                var r = {};
                return Object.keys(e).forEach((function(i) {
                    r[i] = e[i].reduce((function(e, r) {
                        return r && (e.push(t(r)), n && n[r] && e.push(n[r])), e
                    }), []).join(" ")
                })), r
            }
            var Kd = function(e) {
                    var t = Object.create(null);
                    return function(n) {
                        return void 0 === t[n] && (t[n] = e(n)), t[n]
                    }
                },
                eh = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
                th = Kd((function(e) {
                    return eh.test(e) || 111 === e.charCodeAt(0) && 110 === e.charCodeAt(1) && e.charCodeAt(2) < 91
                }));
            var nh = function() {
                    function e(e) {
                        var t = this;
                        this._insertTag = function(e) {
                            var n;
                            n = 0 === t.tags.length ? t.insertionPoint ? t.insertionPoint.nextSibling : t.prepend ? t.container.firstChild : t.before : t.tags[t.tags.length - 1].nextSibling, t.container.insertBefore(e, n), t.tags.push(e)
                        }, this.isSpeedy = void 0 === e.speedy || e.speedy, this.tags = [], this.ctr = 0, this.nonce = e.nonce, this.key = e.key, this.container = e.container, this.prepend = e.prepend, this.insertionPoint = e.insertionPoint, this.before = null
                    }
                    var t = e.prototype;
                    return t.hydrate = function(e) {
                        e.forEach(this._insertTag)
                    }, t.insert = function(e) {
                        this.ctr % (this.isSpeedy ? 65e3 : 1) === 0 && this._insertTag(function(e) {
                            var t = document.createElement("style");
                            return t.setAttribute("data-emotion", e.key), void 0 !== e.nonce && t.setAttribute("nonce", e.nonce), t.appendChild(document.createTextNode("")), t.setAttribute("data-s", ""), t
                        }(this));
                        var t = this.tags[this.tags.length - 1];
                        if (this.isSpeedy) {
                            var n = function(e) {
                                if (e.sheet) return e.sheet;
                                for (var t = 0; t < document.styleSheets.length; t++)
                                    if (document.styleSheets[t].ownerNode === e) return document.styleSheets[t]
                            }(t);
                            try {
                                n.insertRule(e, n.cssRules.length)
                            } catch (bm) {
                                0
                            }
                        } else t.appendChild(document.createTextNode(e));
                        this.ctr++
                    }, t.flush = function() {
                        this.tags.forEach((function(e) {
                            return e.parentNode && e.parentNode.removeChild(e)
                        })), this.tags = [], this.ctr = 0
                    }, e
                }(),
                rh = Math.abs,
                ih = String.fromCharCode,
                ah = Object.assign;

            function oh(e) {
                return e.trim()
            }

            function sh(e, t, n) {
                return e.replace(t, n)
            }

            function lh(e, t) {
                return e.indexOf(t)
            }

            function uh(e, t) {
                return 0 | e.charCodeAt(t)
            }

            function ch(e, t, n) {
                return e.slice(t, n)
            }

            function fh(e) {
                return e.length
            }

            function dh(e) {
                return e.length
            }

            function hh(e, t) {
                return t.push(e), e
            }
            var ph = 1,
                vh = 1,
                mh = 0,
                gh = 0,
                yh = 0,
                xh = "";

            function bh(e, t, n, r, i, a, o) {
                return {
                    value: e,
                    root: t,
                    parent: n,
                    type: r,
                    props: i,
                    children: a,
                    line: ph,
                    column: vh,
                    length: o,
                    return: ""
                }
            }

            function _h(e, t) {
                return ah(bh("", null, null, "", null, null, 0), e, {
                    length: -e.length
                }, t)
            }

            function wh() {
                return yh = gh > 0 ? uh(xh, --gh) : 0, vh--, 10 === yh && (vh = 1, ph--), yh
            }

            function Sh() {
                return yh = gh < mh ? uh(xh, gh++) : 0, vh++, 10 === yh && (vh = 1, ph++), yh
            }

            function Mh() {
                return uh(xh, gh)
            }

            function kh() {
                return gh
            }

            function Eh(e, t) {
                return ch(xh, e, t)
            }

            function Th(e) {
                switch (e) {
                    case 0:
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        return 5;
                    case 33:
                    case 43:
                    case 44:
                    case 47:
                    case 62:
                    case 64:
                    case 126:
                    case 59:
                    case 123:
                    case 125:
                        return 4;
                    case 58:
                        return 3;
                    case 34:
                    case 39:
                    case 40:
                    case 91:
                        return 2;
                    case 41:
                    case 93:
                        return 1
                }
                return 0
            }

            function Lh(e) {
                return ph = vh = 1, mh = fh(xh = e), gh = 0, []
            }

            function Ah(e) {
                return xh = "", e
            }

            function Ch(e) {
                return oh(Eh(gh - 1, Nh(91 === e ? e + 2 : 40 === e ? e + 1 : e)))
            }

            function Ph(e) {
                for (;
                    (yh = Mh()) && yh < 33;) Sh();
                return Th(e) > 2 || Th(yh) > 3 ? "" : " "
            }

            function Rh(e, t) {
                for (; --t && Sh() && !(yh < 48 || yh > 102 || yh > 57 && yh < 65 || yh > 70 && yh < 97););
                return Eh(e, kh() + (t < 6 && 32 == Mh() && 32 == Sh()))
            }

            function Nh(e) {
                for (; Sh();) switch (yh) {
                    case e:
                        return gh;
                    case 34:
                    case 39:
                        34 !== e && 39 !== e && Nh(yh);
                        break;
                    case 40:
                        41 === e && Nh(e);
                        break;
                    case 92:
                        Sh()
                }
                return gh
            }

            function Ih(e, t) {
                for (; Sh() && e + yh !== 57 && (e + yh !== 84 || 47 !== Mh()););
                return "/*" + Eh(t, gh - 1) + "*" + ih(47 === e ? e : Sh())
            }

            function zh(e) {
                for (; !Th(Mh());) Sh();
                return Eh(e, gh)
            }
            var Oh = "-ms-",
                Dh = "-moz-",
                Fh = "-webkit-",
                Bh = "comm",
                Uh = "rule",
                Hh = "decl",
                Vh = "@keyframes";

            function Gh(e, t) {
                for (var n = "", r = dh(e), i = 0; i < r; i++) n += t(e[i], i, e, t) || "";
                return n
            }

            function Wh(e, t, n, r) {
                switch (e.type) {
                    case "@import":
                    case Hh:
                        return e.return = e.return || e.value;
                    case Bh:
                        return "";
                    case Vh:
                        return e.return = e.value + "{" + Gh(e.children, r) + "}";
                    case Uh:
                        e.value = e.props.join(",")
                }
                return fh(n = Gh(e.children, r)) ? e.return = e.value + "{" + n + "}" : ""
            }

            function jh(e) {
                return Ah(qh("", null, null, null, [""], e = Lh(e), 0, [0], e))
            }

            function qh(e, t, n, r, i, a, o, s, l) {
                for (var u = 0, c = 0, f = o, d = 0, h = 0, p = 0, v = 1, m = 1, g = 1, y = 0, x = "", b = i, _ = a, w = r, S = x; m;) switch (p = y, y = Sh()) {
                    case 40:
                        if (108 != p && 58 == uh(S, f - 1)) {
                            -1 != lh(S += sh(Ch(y), "&", "&\f"), "&\f") && (g = -1);
                            break
                        }
                    case 34:
                    case 39:
                    case 91:
                        S += Ch(y);
                        break;
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        S += Ph(p);
                        break;
                    case 92:
                        S += Rh(kh() - 1, 7);
                        continue;
                    case 47:
                        switch (Mh()) {
                            case 42:
                            case 47:
                                hh(Yh(Ih(Sh(), kh()), t, n), l);
                                break;
                            default:
                                S += "/"
                        }
                        break;
                    case 123 * v:
                        s[u++] = fh(S) * g;
                    case 125 * v:
                    case 59:
                    case 0:
                        switch (y) {
                            case 0:
                            case 125:
                                m = 0;
                            case 59 + c:
                                h > 0 && fh(S) - f && hh(h > 32 ? Zh(S + ";", r, n, f - 1) : Zh(sh(S, " ", "") + ";", r, n, f - 2), l);
                                break;
                            case 59:
                                S += ";";
                            default:
                                if (hh(w = Xh(S, t, n, u, c, i, s, x, b = [], _ = [], f), a), 123 === y)
                                    if (0 === c) qh(S, t, w, w, b, a, f, s, _);
                                    else switch (99 === d && 110 === uh(S, 3) ? 100 : d) {
                                        case 100:
                                        case 109:
                                        case 115:
                                            qh(e, w, w, r && hh(Xh(e, w, w, 0, 0, i, s, x, i, b = [], f), _), i, _, f, s, r ? b : _);
                                            break;
                                        default:
                                            qh(S, w, w, w, [""], _, 0, s, _)
                                    }
                        }
                        u = c = h = 0, v = g = 1, x = S = "", f = o;
                        break;
                    case 58:
                        f = 1 + fh(S), h = p;
                    default:
                        if (v < 1)
                            if (123 == y) --v;
                            else if (125 == y && 0 == v++ && 125 == wh()) continue;
                        switch (S += ih(y), y * v) {
                            case 38:
                                g = c > 0 ? 1 : (S += "\f", -1);
                                break;
                            case 44:
                                s[u++] = (fh(S) - 1) * g, g = 1;
                                break;
                            case 64:
                                45 === Mh() && (S += Ch(Sh())), d = Mh(), c = f = fh(x = S += zh(kh())), y++;
                                break;
                            case 45:
                                45 === p && 2 == fh(S) && (v = 0)
                        }
                }
                return a
            }

            function Xh(e, t, n, r, i, a, o, s, l, u, c) {
                for (var f = i - 1, d = 0 === i ? a : [""], h = dh(d), p = 0, v = 0, m = 0; p < r; ++p)
                    for (var g = 0, y = ch(e, f + 1, f = rh(v = o[p])), x = e; g < h; ++g)(x = oh(v > 0 ? d[g] + " " + y : sh(y, /&\f/g, d[g]))) && (l[m++] = x);
                return bh(e, t, n, 0 === i ? Uh : s, l, u, c)
            }

            function Yh(e, t, n) {
                return bh(e, t, n, Bh, ih(yh), ch(e, 2, -2), 0)
            }

            function Zh(e, t, n, r) {
                return bh(e, t, n, Hh, ch(e, 0, r), ch(e, r + 1, -1), r)
            }
            var Jh = function(e, t, n) {
                    for (var r = 0, i = 0; r = i, i = Mh(), 38 === r && 12 === i && (t[n] = 1), !Th(i);) Sh();
                    return Eh(e, gh)
                },
                $h = function(e, t) {
                    return Ah(function(e, t) {
                        var n = -1,
                            r = 44;
                        do {
                            switch (Th(r)) {
                                case 0:
                                    38 === r && 12 === Mh() && (t[n] = 1), e[n] += Jh(gh - 1, t, n);
                                    break;
                                case 2:
                                    e[n] += Ch(r);
                                    break;
                                case 4:
                                    if (44 === r) {
                                        e[++n] = 58 === Mh() ? "&\f" : "", t[n] = e[n].length;
                                        break
                                    }
                                default:
                                    e[n] += ih(r)
                            }
                        } while (r = Sh());
                        return e
                    }(Lh(e), t))
                },
                Qh = new WeakMap,
                Kh = function(e) {
                    if ("rule" === e.type && e.parent && !(e.length < 1)) {
                        for (var t = e.value, n = e.parent, r = e.column === n.column && e.line === n.line;
                            "rule" !== n.type;)
                            if (!(n = n.parent)) return;
                        if ((1 !== e.props.length || 58 === t.charCodeAt(0) || Qh.get(n)) && !r) {
                            Qh.set(e, !0);
                            for (var i = [], a = $h(t, i), o = n.props, s = 0, l = 0; s < a.length; s++)
                                for (var u = 0; u < o.length; u++, l++) e.props[l] = i[s] ? a[s].replace(/&\f/g, o[u]) : o[u] + " " + a[s]
                        }
                    }
                },
                ep = function(e) {
                    if ("decl" === e.type) {
                        var t = e.value;
                        108 === t.charCodeAt(0) && 98 === t.charCodeAt(2) && (e.return = "", e.value = "")
                    }
                };

            function tp(e, t) {
                switch (function(e, t) {
                    return 45 ^ uh(e, 0) ? (((t << 2 ^ uh(e, 0)) << 2 ^ uh(e, 1)) << 2 ^ uh(e, 2)) << 2 ^ uh(e, 3) : 0
                }(e, t)) {
                    case 5103:
                        return "-webkit-print-" + e + e;
                    case 5737:
                    case 4201:
                    case 3177:
                    case 3433:
                    case 1641:
                    case 4457:
                    case 2921:
                    case 5572:
                    case 6356:
                    case 5844:
                    case 3191:
                    case 6645:
                    case 3005:
                    case 6391:
                    case 5879:
                    case 5623:
                    case 6135:
                    case 4599:
                    case 4855:
                    case 4215:
                    case 6389:
                    case 5109:
                    case 5365:
                    case 5621:
                    case 3829:
                        return Fh + e + e;
                    case 5349:
                    case 4246:
                    case 4810:
                    case 6968:
                    case 2756:
                        return Fh + e + Dh + e + Oh + e + e;
                    case 6828:
                    case 4268:
                        return Fh + e + Oh + e + e;
                    case 6165:
                        return Fh + e + Oh + "flex-" + e + e;
                    case 5187:
                        return Fh + e + sh(e, /(\w+).+(:[^]+)/, "-webkit-box-$1$2-ms-flex-$1$2") + e;
                    case 5443:
                        return Fh + e + Oh + "flex-item-" + sh(e, /flex-|-self/, "") + e;
                    case 4675:
                        return Fh + e + Oh + "flex-line-pack" + sh(e, /align-content|flex-|-self/, "") + e;
                    case 5548:
                        return Fh + e + Oh + sh(e, "shrink", "negative") + e;
                    case 5292:
                        return Fh + e + Oh + sh(e, "basis", "preferred-size") + e;
                    case 6060:
                        return "-webkit-box-" + sh(e, "-grow", "") + Fh + e + Oh + sh(e, "grow", "positive") + e;
                    case 4554:
                        return Fh + sh(e, /([^-])(transform)/g, "$1-webkit-$2") + e;
                    case 6187:
                        return sh(sh(sh(e, /(zoom-|grab)/, "-webkit-$1"), /(image-set)/, "-webkit-$1"), e, "") + e;
                    case 5495:
                    case 3959:
                        return sh(e, /(image-set\([^]*)/, "-webkit-$1$`$1");
                    case 4968:
                        return sh(sh(e, /(.+:)(flex-)?(.*)/, "-webkit-box-pack:$3-ms-flex-pack:$3"), /s.+-b[^;]+/, "justify") + Fh + e + e;
                    case 4095:
                    case 3583:
                    case 4068:
                    case 2532:
                        return sh(e, /(.+)-inline(.+)/, "-webkit-$1$2") + e;
                    case 8116:
                    case 7059:
                    case 5753:
                    case 5535:
                    case 5445:
                    case 5701:
                    case 4933:
                    case 4677:
                    case 5533:
                    case 5789:
                    case 5021:
                    case 4765:
                        if (fh(e) - 1 - t > 6) switch (uh(e, t + 1)) {
                            case 109:
                                if (45 !== uh(e, t + 4)) break;
                            case 102:
                                return sh(e, /(.+:)(.+)-([^]+)/, "$1-webkit-$2-$3$1-moz-" + (108 == uh(e, t + 3) ? "$3" : "$2-$3")) + e;
                            case 115:
                                return ~lh(e, "stretch") ? tp(sh(e, "stretch", "fill-available"), t) + e : e
                        }
                        break;
                    case 4949:
                        if (115 !== uh(e, t + 1)) break;
                    case 6444:
                        switch (uh(e, fh(e) - 3 - (~lh(e, "!important") && 10))) {
                            case 107:
                                return sh(e, ":", ":-webkit-") + e;
                            case 101:
                                return sh(e, /(.+:)([^;!]+)(;|!.+)?/, "$1-webkit-" + (45 === uh(e, 14) ? "inline-" : "") + "box$3$1" + "-webkit-$2$3$1" + "-ms-$2box$3") + e
                        }
                        break;
                    case 5936:
                        switch (uh(e, t + 11)) {
                            case 114:
                                return Fh + e + Oh + sh(e, /[svh]\w+-[tblr]{2}/, "tb") + e;
                            case 108:
                                return Fh + e + Oh + sh(e, /[svh]\w+-[tblr]{2}/, "tb-rl") + e;
                            case 45:
                                return Fh + e + Oh + sh(e, /[svh]\w+-[tblr]{2}/, "lr") + e
                        }
                        return Fh + e + Oh + e + e
                }
                return e
            }
            var np = [function(e, t, n, r) {
                    if (e.length > -1 && !e.return) switch (e.type) {
                        case Hh:
                            e.return = tp(e.value, e.length);
                            break;
                        case Vh:
                            return Gh([_h(e, {
                                value: sh(e.value, "@", "@-webkit-")
                            })], r);
                        case Uh:
                            if (e.length) return function(e, t) {
                                return e.map(t).join("")
                            }(e.props, (function(t) {
                                switch (function(e, t) {
                                    return (e = t.exec(e)) ? e[0] : e
                                }(t, /(::plac\w+|:read-\w+)/)) {
                                    case ":read-only":
                                    case ":read-write":
                                        return Gh([_h(e, {
                                            props: [sh(t, /:(read-\w+)/, ":-moz-$1")]
                                        })], r);
                                    case "::placeholder":
                                        return Gh([_h(e, {
                                            props: [sh(t, /:(plac\w+)/, ":-webkit-input-$1")]
                                        }), _h(e, {
                                            props: [sh(t, /:(plac\w+)/, ":-moz-$1")]
                                        }), _h(e, {
                                            props: [sh(t, /:(plac\w+)/, "-ms-input-$1")]
                                        })], r)
                                }
                                return ""
                            }))
                    }
                }],
                rp = function(e) {
                    var t = e.key;
                    if ("css" === t) {
                        var n = document.querySelectorAll("style[data-emotion]:not([data-s])");
                        Array.prototype.forEach.call(n, (function(e) {
                            -1 !== e.getAttribute("data-emotion").indexOf(" ") && (document.head.appendChild(e), e.setAttribute("data-s", ""))
                        }))
                    }
                    var r = e.stylisPlugins || np;
                    var i, a, o = {},
                        s = [];
                    i = e.container || document.head, Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="' + t + ' "]'), (function(e) {
                        for (var t = e.getAttribute("data-emotion").split(" "), n = 1; n < t.length; n++) o[t[n]] = !0;
                        s.push(e)
                    }));
                    var l, u, c = [Wh, (u = function(e) {
                            l.insert(e)
                        }, function(e) {
                            e.root || (e = e.return) && u(e)
                        })],
                        f = function(e) {
                            var t = dh(e);
                            return function(n, r, i, a) {
                                for (var o = "", s = 0; s < t; s++) o += e[s](n, r, i, a) || "";
                                return o
                            }
                        }([Kh, ep].concat(r, c));
                    a = function(e, t, n, r) {
                        l = n,
                            function(e) {
                                Gh(jh(e), f)
                            }(e ? e + "{" + t.styles + "}" : t.styles), r && (d.inserted[t.name] = !0)
                    };
                    var d = {
                        key: t,
                        sheet: new nh({
                            key: t,
                            container: i,
                            nonce: e.nonce,
                            speedy: e.speedy,
                            prepend: e.prepend,
                            insertionPoint: e.insertionPoint
                        }),
                        nonce: e.nonce,
                        inserted: o,
                        registered: {},
                        insert: a
                    };
                    return d.sheet.hydrate(s), d
                };
            var ip = function(e) {
                    for (var t, n = 0, r = 0, i = e.length; i >= 4; ++r, i -= 4) t = 1540483477 * (65535 & (t = 255 & e.charCodeAt(r) | (255 & e.charCodeAt(++r)) << 8 | (255 & e.charCodeAt(++r)) << 16 | (255 & e.charCodeAt(++r)) << 24)) + (59797 * (t >>> 16) << 16), n = 1540483477 * (65535 & (t ^= t >>> 24)) + (59797 * (t >>> 16) << 16) ^ 1540483477 * (65535 & n) + (59797 * (n >>> 16) << 16);
                    switch (i) {
                        case 3:
                            n ^= (255 & e.charCodeAt(r + 2)) << 16;
                        case 2:
                            n ^= (255 & e.charCodeAt(r + 1)) << 8;
                        case 1:
                            n = 1540483477 * (65535 & (n ^= 255 & e.charCodeAt(r))) + (59797 * (n >>> 16) << 16)
                    }
                    return (((n = 1540483477 * (65535 & (n ^= n >>> 13)) + (59797 * (n >>> 16) << 16)) ^ n >>> 15) >>> 0).toString(36)
                },
                ap = {
                    animationIterationCount: 1,
                    borderImageOutset: 1,
                    borderImageSlice: 1,
                    borderImageWidth: 1,
                    boxFlex: 1,
                    boxFlexGroup: 1,
                    boxOrdinalGroup: 1,
                    columnCount: 1,
                    columns: 1,
                    flex: 1,
                    flexGrow: 1,
                    flexPositive: 1,
                    flexShrink: 1,
                    flexNegative: 1,
                    flexOrder: 1,
                    gridRow: 1,
                    gridRowEnd: 1,
                    gridRowSpan: 1,
                    gridRowStart: 1,
                    gridColumn: 1,
                    gridColumnEnd: 1,
                    gridColumnSpan: 1,
                    gridColumnStart: 1,
                    msGridRow: 1,
                    msGridRowSpan: 1,
                    msGridColumn: 1,
                    msGridColumnSpan: 1,
                    fontWeight: 1,
                    lineHeight: 1,
                    opacity: 1,
                    order: 1,
                    orphans: 1,
                    tabSize: 1,
                    widows: 1,
                    zIndex: 1,
                    zoom: 1,
                    WebkitLineClamp: 1,
                    fillOpacity: 1,
                    floodOpacity: 1,
                    stopOpacity: 1,
                    strokeDasharray: 1,
                    strokeDashoffset: 1,
                    strokeMiterlimit: 1,
                    strokeOpacity: 1,
                    strokeWidth: 1
                },
                op = /[A-Z]|^ms/g,
                sp = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
                lp = function(e) {
                    return 45 === e.charCodeAt(1)
                },
                up = function(e) {
                    return null != e && "boolean" !== typeof e
                },
                cp = Kd((function(e) {
                    return lp(e) ? e : e.replace(op, "-$&").toLowerCase()
                })),
                fp = function(e, t) {
                    switch (e) {
                        case "animation":
                        case "animationName":
                            if ("string" === typeof t) return t.replace(sp, (function(e, t, n) {
                                return hp = {
                                    name: t,
                                    styles: n,
                                    next: hp
                                }, t
                            }))
                    }
                    return 1 === ap[e] || lp(e) || "number" !== typeof t || 0 === t ? t : t + "px"
                };

            function dp(e, t, n) {
                if (null == n) return "";
                if (void 0 !== n.__emotion_styles) return n;
                switch (typeof n) {
                    case "boolean":
                        return "";
                    case "object":
                        if (1 === n.anim) return hp = {
                            name: n.name,
                            styles: n.styles,
                            next: hp
                        }, n.name;
                        if (void 0 !== n.styles) {
                            var r = n.next;
                            if (void 0 !== r)
                                for (; void 0 !== r;) hp = {
                                    name: r.name,
                                    styles: r.styles,
                                    next: hp
                                }, r = r.next;
                            return n.styles + ";"
                        }
                        return function(e, t, n) {
                            var r = "";
                            if (Array.isArray(n))
                                for (var i = 0; i < n.length; i++) r += dp(e, t, n[i]) + ";";
                            else
                                for (var a in n) {
                                    var o = n[a];
                                    if ("object" !== typeof o) null != t && void 0 !== t[o] ? r += a + "{" + t[o] + "}" : up(o) && (r += cp(a) + ":" + fp(a, o) + ";");
                                    else if (!Array.isArray(o) || "string" !== typeof o[0] || null != t && void 0 !== t[o[0]]) {
                                        var s = dp(e, t, o);
                                        switch (a) {
                                            case "animation":
                                            case "animationName":
                                                r += cp(a) + ":" + s + ";";
                                                break;
                                            default:
                                                r += a + "{" + s + "}"
                                        }
                                    } else
                                        for (var l = 0; l < o.length; l++) up(o[l]) && (r += cp(a) + ":" + fp(a, o[l]) + ";")
                                }
                            return r
                        }(e, t, n);
                    case "function":
                        if (void 0 !== e) {
                            var i = hp,
                                a = n(e);
                            return hp = i, dp(e, t, a)
                        }
                }
                if (null == t) return n;
                var o = t[n];
                return void 0 !== o ? o : n
            }
            var hp, pp = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
            var vp = function(e, t, n) {
                    if (1 === e.length && "object" === typeof e[0] && null !== e[0] && void 0 !== e[0].styles) return e[0];
                    var r = !0,
                        i = "";
                    hp = void 0;
                    var a = e[0];
                    null == a || void 0 === a.raw ? (r = !1, i += dp(n, t, a)) : i += a[0];
                    for (var o = 1; o < e.length; o++) i += dp(n, t, e[o]), r && (i += a[o]);
                    pp.lastIndex = 0;
                    for (var s, l = ""; null !== (s = pp.exec(i));) l += "-" + s[1];
                    return {
                        name: ip(i) + l,
                        styles: i,
                        next: hp
                    }
                },
                mp = !!r.useInsertionEffect && r.useInsertionEffect,
                gp = mp || function(e) {
                    return e()
                },
                yp = (mp || t.useLayoutEffect, (0, t.createContext)("undefined" !== typeof HTMLElement ? rp({
                    key: "css"
                }) : null));
            yp.Provider;
            var xp = function(e) {
                    return (0, t.forwardRef)((function(n, r) {
                        var i = (0, t.useContext)(yp);
                        return e(n, i, r)
                    }))
                },
                bp = (0, t.createContext)({});

            function _p(e, t, n) {
                var r = "";
                return n.split(" ").forEach((function(n) {
                    void 0 !== e[n] ? t.push(e[n] + ";") : r += n + " "
                })), r
            }
            var wp = function(e, t, n) {
                    var r = e.key + "-" + t.name;
                    !1 === n && void 0 === e.registered[r] && (e.registered[r] = t.styles)
                },
                Sp = th,
                Mp = function(e) {
                    return "theme" !== e
                },
                kp = function(e) {
                    return "string" === typeof e && e.charCodeAt(0) > 96 ? Sp : Mp
                },
                Ep = function(e, t, n) {
                    var r;
                    if (t) {
                        var i = t.shouldForwardProp;
                        r = e.__emotion_forwardProp && i ? function(t) {
                            return e.__emotion_forwardProp(t) && i(t)
                        } : i
                    }
                    return "function" !== typeof r && n && (r = e.__emotion_forwardProp), r
                },
                Tp = function(e) {
                    var t = e.cache,
                        n = e.serialized,
                        r = e.isStringTag;
                    wp(t, n, r);
                    gp((function() {
                        return function(e, t, n) {
                            wp(e, t, n);
                            var r = e.key + "-" + t.name;
                            if (void 0 === e.inserted[t.name]) {
                                var i = t;
                                do {
                                    e.insert(t === i ? "." + r : "", i, e.sheet, !0), i = i.next
                                } while (void 0 !== i)
                            }
                        }(t, n, r)
                    }));
                    return null
                },
                Lp = function e(n, r) {
                    var i, a, o = n.__emotion_real === n,
                        s = o && n.__emotion_base || n;
                    void 0 !== r && (i = r.label, a = r.target);
                    var l = Ep(n, r, o),
                        u = l || kp(s),
                        c = !u("as");
                    return function() {
                        var f = arguments,
                            d = o && void 0 !== n.__emotion_styles ? n.__emotion_styles.slice(0) : [];
                        if (void 0 !== i && d.push("label:" + i + ";"), null == f[0] || void 0 === f[0].raw) d.push.apply(d, f);
                        else {
                            0,
                            d.push(f[0][0]);
                            for (var h = f.length, p = 1; p < h; p++) d.push(f[p], f[0][p])
                        }
                        var v = xp((function(e, n, r) {
                            var i = c && e.as || s,
                                o = "",
                                f = [],
                                h = e;
                            if (null == e.theme) {
                                for (var p in h = {}, e) h[p] = e[p];
                                h.theme = (0, t.useContext)(bp)
                            }
                            "string" === typeof e.className ? o = _p(n.registered, f, e.className) : null != e.className && (o = e.className + " ");
                            var v = vp(d.concat(f), n.registered, h);
                            o += n.key + "-" + v.name, void 0 !== a && (o += " " + a);
                            var m = c && void 0 === l ? kp(i) : u,
                                g = {};
                            for (var y in e) c && "as" === y || m(y) && (g[y] = e[y]);
                            return g.className = o, g.ref = r, (0, t.createElement)(t.Fragment, null, (0, t.createElement)(Tp, {
                                cache: n,
                                serialized: v,
                                isStringTag: "string" === typeof i
                            }), (0, t.createElement)(i, g))
                        }));
                        return v.displayName = void 0 !== i ? i : "Styled(" + ("string" === typeof s ? s : s.displayName || s.name || "Component") + ")", v.defaultProps = n.defaultProps, v.__emotion_real = v, v.__emotion_base = s, v.__emotion_styles = d, v.__emotion_forwardProp = l, Object.defineProperty(v, "toString", {
                            value: function() {
                                return "." + a
                            }
                        }), v.withComponent = function(t, n) {
                            return e(t, Lf({}, r, n, {
                                shouldForwardProp: Ep(v, n, !0)
                            })).apply(void 0, d)
                        }, v
                    }
                },
                Ap = Lp.bind();
            ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "tspan"].forEach((function(e) {
                Ap[e] = Ap(e)
            }));
            var Cp = Ap;

            function Pp(e, t) {
                return Cp(e, t)
            }
            var Rp = function(e, t) {
                    Array.isArray(e.__emotion_styles) && (e.__emotion_styles = t(e.__emotion_styles))
                },
                Np = ["values", "unit", "step"];

            function Ip(e) {
                var t = e.values,
                    n = void 0 === t ? {
                        xs: 0,
                        sm: 600,
                        md: 900,
                        lg: 1200,
                        xl: 1536
                    } : t,
                    r = e.unit,
                    i = void 0 === r ? "px" : r,
                    a = e.step,
                    o = void 0 === a ? 5 : a,
                    s = Tf(e, Np),
                    l = function(e) {
                        var t = Object.keys(e).map((function(t) {
                            return {
                                key: t,
                                val: e[t]
                            }
                        })) || [];
                        return t.sort((function(e, t) {
                            return e.val - t.val
                        })), t.reduce((function(e, t) {
                            return Lf({}, e, Ie({}, t.key, t.val))
                        }), {})
                    }(n),
                    u = Object.keys(l);

                function c(e) {
                    var t = "number" === typeof n[e] ? n[e] : e;
                    return "@media (min-width:".concat(t).concat(i, ")")
                }

                function f(e) {
                    var t = "number" === typeof n[e] ? n[e] : e;
                    return "@media (max-width:".concat(t - o / 100).concat(i, ")")
                }

                function d(e, t) {
                    var r = u.indexOf(t);
                    return "@media (min-width:".concat("number" === typeof n[e] ? n[e] : e).concat(i, ") and ") + "(max-width:".concat((-1 !== r && "number" === typeof n[u[r]] ? n[u[r]] : t) - o / 100).concat(i, ")")
                }
                return Lf({
                    keys: u,
                    values: l,
                    up: c,
                    down: f,
                    between: d,
                    only: function(e) {
                        return u.indexOf(e) + 1 < u.length ? d(e, u[u.indexOf(e) + 1]) : c(e)
                    },
                    not: function(e) {
                        var t = u.indexOf(e);
                        return 0 === t ? c(u[1]) : t === u.length - 1 ? f(u[t]) : d(e, u[u.indexOf(e) + 1]).replace("@media", "@media not all and")
                    },
                    unit: i
                }, s)
            }
            var zp = {
                borderRadius: 4
            };

            function Op() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 8;
                if (e.mui) return e;
                var t = Kf({
                        spacing: e
                    }),
                    n = function() {
                        for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
                        var i = 0 === n.length ? [1] : n;
                        return i.map((function(e) {
                            var n = t(e);
                            return "number" === typeof n ? "".concat(n, "px") : n
                        })).join(" ")
                    };
                return n.mui = !0, n
            }
            var Dp = ["breakpoints", "palette", "spacing", "shape"];
            var Fp = function() {
                    for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = e.breakpoints, n = void 0 === t ? {} : t, r = e.palette, i = void 0 === r ? {} : r, a = e.spacing, o = e.shape, s = void 0 === o ? {} : o, l = Tf(e, Dp), u = Ip(n), c = Op(a), f = Rf({
                            breakpoints: u,
                            direction: "ltr",
                            components: {},
                            palette: Lf({
                                mode: "light"
                            }, i),
                            spacing: c,
                            shape: Lf({}, zp, s)
                        }, l), d = arguments.length, h = new Array(d > 1 ? d - 1 : 0), p = 1; p < d; p++) h[p - 1] = arguments[p];
                    return f = h.reduce((function(e, t) {
                        return Rf(e, t)
                    }), f)
                },
                Bp = ["variant"];

            function Up(e) {
                return 0 === e.length
            }

            function Hp(e) {
                var t = e.variant,
                    n = Tf(e, Bp),
                    r = t || "";
                return Object.keys(n).sort().forEach((function(t) {
                    r += "color" === t ? Up(r) ? e[t] : If(e[t]) : "".concat(Up(r) ? t : If(t)).concat(If(e[t].toString()))
                })), r
            }

            function Vp() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                var r = t.reduce((function(e, t) {
                        return e.concat(Object.keys(t))
                    }), []),
                    i = new Set(r);
                return t.every((function(e) {
                    return i.size === Object.keys(e).length
                }))
            }

            function Gp(e, t) {
                return "function" === typeof e ? e(t) : e
            }
            var Wp = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Yd,
                    t = Object.keys(e).reduce((function(t, n) {
                        return e[n].filterProps.forEach((function(r) {
                            t[r] = e[n]
                        })), t
                    }), {});

                function n(e, n, r) {
                    var i, a = (Ie(i = {}, e, n), Ie(i, "theme", r), i),
                        o = t[e];
                    return o ? o(a) : Ie({}, e, n)
                }

                function r(e) {
                    var i = e || {},
                        a = i.sx,
                        o = i.theme,
                        s = void 0 === o ? {} : o;
                    if (!a) return null;

                    function l(e) {
                        var i = e;
                        if ("function" === typeof e) i = e(s);
                        else if ("object" !== typeof e) return e;
                        if (!i) return null;
                        var a = Ff(s.breakpoints),
                            o = Object.keys(a),
                            l = a;
                        return Object.keys(i).forEach((function(e) {
                            var a = Gp(i[e], s);
                            if (null !== a && void 0 !== a)
                                if ("object" === typeof a)
                                    if (t[e]) l = Gf(l, n(e, a, s));
                                    else {
                                        var o = Df({
                                            theme: s
                                        }, a, (function(t) {
                                            return Ie({}, e, t)
                                        }));
                                        Vp(o, a) ? l[e] = r({
                                            sx: a,
                                            theme: s
                                        }) : l = Gf(l, o)
                                    }
                            else l = Gf(l, n(e, a, s))
                        })), Bf(o, l)
                    }
                    return Array.isArray(a) ? a.map(l) : l(a)
                }
                return r
            }();
            Wp.filterProps = ["sx"];
            var jp = Wp,
                qp = ["name", "slot", "skipVariantsResolver", "skipSx", "overridesResolver"],
                Xp = ["theme"],
                Yp = ["theme"];

            function Zp(e) {
                return 0 === Object.keys(e).length
            }

            function Jp(e) {
                return "string" === typeof e && e.charCodeAt(0) > 96
            }
            var $p = function(e, t) {
                    return t.components && t.components[e] && t.components[e].styleOverrides ? t.components[e].styleOverrides : null
                },
                Qp = function(e, t) {
                    var n = [];
                    t && t.components && t.components[e] && t.components[e].variants && (n = t.components[e].variants);
                    var r = {};
                    return n.forEach((function(e) {
                        var t = Hp(e.props);
                        r[t] = e.style
                    })), r
                },
                Kp = function(e, t, n, r) {
                    var i, a, o = e.ownerState,
                        s = void 0 === o ? {} : o,
                        l = [],
                        u = null == n || null == (i = n.components) || null == (a = i[r]) ? void 0 : a.variants;
                    return u && u.forEach((function(n) {
                        var r = !0;
                        Object.keys(n.props).forEach((function(t) {
                            s[t] !== n.props[t] && e[t] !== n.props[t] && (r = !1)
                        })), r && l.push(t[Hp(n.props)])
                    })), l
                };

            function ev(e) {
                return "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e
            }
            var tv = Fp();

            function nv(e, t) {
                var n;
                return Lf({
                    toolbar: (n = {
                        minHeight: 56
                    }, Ie(n, e.up("xs"), {
                        "@media (orientation: landscape)": {
                            minHeight: 48
                        }
                    }), Ie(n, e.up("sm"), {
                        minHeight: 64
                    }), n)
                }, t)
            }

            function rv(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                return Math.min(Math.max(t, e), n)
            }

            function iv(e) {
                if (e.type) return e;
                if ("#" === e.charAt(0)) return iv(function(e) {
                    e = e.slice(1);
                    var t = new RegExp(".{1,".concat(e.length >= 6 ? 2 : 1, "}"), "g"),
                        n = e.match(t);
                    return n && 1 === n[0].length && (n = n.map((function(e) {
                        return e + e
                    }))), n ? "rgb".concat(4 === n.length ? "a" : "", "(").concat(n.map((function(e, t) {
                        return t < 3 ? parseInt(e, 16) : Math.round(parseInt(e, 16) / 255 * 1e3) / 1e3
                    })).join(", "), ")") : ""
                }(e));
                var t = e.indexOf("("),
                    n = e.substring(0, t);
                if (-1 === ["rgb", "rgba", "hsl", "hsla", "color"].indexOf(n)) throw new Error(Nf(9, e));
                var r, i = e.substring(t + 1, e.length - 1);
                if ("color" === n) {
                    if (r = (i = i.split(" ")).shift(), 4 === i.length && "/" === i[3].charAt(0) && (i[3] = i[3].slice(1)), -1 === ["srgb", "display-p3", "a98-rgb", "prophoto-rgb", "rec-2020"].indexOf(r)) throw new Error(Nf(10, r))
                } else i = i.split(",");
                return {
                    type: n,
                    values: i = i.map((function(e) {
                        return parseFloat(e)
                    })),
                    colorSpace: r
                }
            }

            function av(e) {
                var t = e.type,
                    n = e.colorSpace,
                    r = e.values;
                return -1 !== t.indexOf("rgb") ? r = r.map((function(e, t) {
                    return t < 3 ? parseInt(e, 10) : e
                })) : -1 !== t.indexOf("hsl") && (r[1] = "".concat(r[1], "%"), r[2] = "".concat(r[2], "%")), r = -1 !== t.indexOf("color") ? "".concat(n, " ").concat(r.join(" ")) : "".concat(r.join(", ")), "".concat(t, "(").concat(r, ")")
            }

            function ov(e) {
                var t = "hsl" === (e = iv(e)).type || "hsla" === e.type ? iv(function(e) {
                    var t = (e = iv(e)).values,
                        n = t[0],
                        r = t[1] / 100,
                        i = t[2] / 100,
                        a = r * Math.min(i, 1 - i),
                        o = function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : (e + n / 30) % 12;
                            return i - a * Math.max(Math.min(t - 3, 9 - t, 1), -1)
                        },
                        s = "rgb",
                        l = [Math.round(255 * o(0)), Math.round(255 * o(8)), Math.round(255 * o(4))];
                    return "hsla" === e.type && (s += "a", l.push(t[3])), av({
                        type: s,
                        values: l
                    })
                }(e)).values : e.values;
                return t = t.map((function(t) {
                    return "color" !== e.type && (t /= 255), t <= .03928 ? t / 12.92 : Math.pow((t + .055) / 1.055, 2.4)
                })), Number((.2126 * t[0] + .7152 * t[1] + .0722 * t[2]).toFixed(3))
            }

            function sv(e, t) {
                if (e = iv(e), t = rv(t), -1 !== e.type.indexOf("hsl")) e.values[2] *= 1 - t;
                else if (-1 !== e.type.indexOf("rgb") || -1 !== e.type.indexOf("color"))
                    for (var n = 0; n < 3; n += 1) e.values[n] *= 1 - t;
                return av(e)
            }

            function lv(e, t) {
                if (e = iv(e), t = rv(t), -1 !== e.type.indexOf("hsl")) e.values[2] += (100 - e.values[2]) * t;
                else if (-1 !== e.type.indexOf("rgb"))
                    for (var n = 0; n < 3; n += 1) e.values[n] += (255 - e.values[n]) * t;
                else if (-1 !== e.type.indexOf("color"))
                    for (var r = 0; r < 3; r += 1) e.values[r] += (1 - e.values[r]) * t;
                return av(e)
            }
            var uv = {
                    black: "#000",
                    white: "#fff"
                },
                cv = {
                    50: "#fafafa",
                    100: "#f5f5f5",
                    200: "#eeeeee",
                    300: "#e0e0e0",
                    400: "#bdbdbd",
                    500: "#9e9e9e",
                    600: "#757575",
                    700: "#616161",
                    800: "#424242",
                    900: "#212121",
                    A100: "#f5f5f5",
                    A200: "#eeeeee",
                    A400: "#bdbdbd",
                    A700: "#616161"
                },
                fv = {
                    50: "#f3e5f5",
                    100: "#e1bee7",
                    200: "#ce93d8",
                    300: "#ba68c8",
                    400: "#ab47bc",
                    500: "#9c27b0",
                    600: "#8e24aa",
                    700: "#7b1fa2",
                    800: "#6a1b9a",
                    900: "#4a148c",
                    A100: "#ea80fc",
                    A200: "#e040fb",
                    A400: "#d500f9",
                    A700: "#aa00ff"
                },
                dv = {
                    50: "#ffebee",
                    100: "#ffcdd2",
                    200: "#ef9a9a",
                    300: "#e57373",
                    400: "#ef5350",
                    500: "#f44336",
                    600: "#e53935",
                    700: "#d32f2f",
                    800: "#c62828",
                    900: "#b71c1c",
                    A100: "#ff8a80",
                    A200: "#ff5252",
                    A400: "#ff1744",
                    A700: "#d50000"
                },
                hv = {
                    50: "#fff3e0",
                    100: "#ffe0b2",
                    200: "#ffcc80",
                    300: "#ffb74d",
                    400: "#ffa726",
                    500: "#ff9800",
                    600: "#fb8c00",
                    700: "#f57c00",
                    800: "#ef6c00",
                    900: "#e65100",
                    A100: "#ffd180",
                    A200: "#ffab40",
                    A400: "#ff9100",
                    A700: "#ff6d00"
                },
                pv = {
                    50: "#e3f2fd",
                    100: "#bbdefb",
                    200: "#90caf9",
                    300: "#64b5f6",
                    400: "#42a5f5",
                    500: "#2196f3",
                    600: "#1e88e5",
                    700: "#1976d2",
                    800: "#1565c0",
                    900: "#0d47a1",
                    A100: "#82b1ff",
                    A200: "#448aff",
                    A400: "#2979ff",
                    A700: "#2962ff"
                },
                vv = {
                    50: "#e1f5fe",
                    100: "#b3e5fc",
                    200: "#81d4fa",
                    300: "#4fc3f7",
                    400: "#29b6f6",
                    500: "#03a9f4",
                    600: "#039be5",
                    700: "#0288d1",
                    800: "#0277bd",
                    900: "#01579b",
                    A100: "#80d8ff",
                    A200: "#40c4ff",
                    A400: "#00b0ff",
                    A700: "#0091ea"
                },
                mv = {
                    50: "#e8f5e9",
                    100: "#c8e6c9",
                    200: "#a5d6a7",
                    300: "#81c784",
                    400: "#66bb6a",
                    500: "#4caf50",
                    600: "#43a047",
                    700: "#388e3c",
                    800: "#2e7d32",
                    900: "#1b5e20",
                    A100: "#b9f6ca",
                    A200: "#69f0ae",
                    A400: "#00e676",
                    A700: "#00c853"
                },
                gv = ["mode", "contrastThreshold", "tonalOffset"],
                yv = {
                    text: {
                        primary: "rgba(0, 0, 0, 0.87)",
                        secondary: "rgba(0, 0, 0, 0.6)",
                        disabled: "rgba(0, 0, 0, 0.38)"
                    },
                    divider: "rgba(0, 0, 0, 0.12)",
                    background: {
                        paper: uv.white,
                        default: uv.white
                    },
                    action: {
                        active: "rgba(0, 0, 0, 0.54)",
                        hover: "rgba(0, 0, 0, 0.04)",
                        hoverOpacity: .04,
                        selected: "rgba(0, 0, 0, 0.08)",
                        selectedOpacity: .08,
                        disabled: "rgba(0, 0, 0, 0.26)",
                        disabledBackground: "rgba(0, 0, 0, 0.12)",
                        disabledOpacity: .38,
                        focus: "rgba(0, 0, 0, 0.12)",
                        focusOpacity: .12,
                        activatedOpacity: .12
                    }
                },
                xv = {
                    text: {
                        primary: uv.white,
                        secondary: "rgba(255, 255, 255, 0.7)",
                        disabled: "rgba(255, 255, 255, 0.5)",
                        icon: "rgba(255, 255, 255, 0.5)"
                    },
                    divider: "rgba(255, 255, 255, 0.12)",
                    background: {
                        paper: "#121212",
                        default: "#121212"
                    },
                    action: {
                        active: uv.white,
                        hover: "rgba(255, 255, 255, 0.08)",
                        hoverOpacity: .08,
                        selected: "rgba(255, 255, 255, 0.16)",
                        selectedOpacity: .16,
                        disabled: "rgba(255, 255, 255, 0.3)",
                        disabledBackground: "rgba(255, 255, 255, 0.12)",
                        disabledOpacity: .38,
                        focus: "rgba(255, 255, 255, 0.12)",
                        focusOpacity: .12,
                        activatedOpacity: .24
                    }
                };

            function bv(e, t, n, r) {
                var i = r.light || r,
                    a = r.dark || 1.5 * r;
                e[t] || (e.hasOwnProperty(n) ? e[t] = e[n] : "light" === t ? e.light = lv(e.main, i) : "dark" === t && (e.dark = sv(e.main, a)))
            }

            function _v(e) {
                var t = e.mode,
                    n = void 0 === t ? "light" : t,
                    r = e.contrastThreshold,
                    i = void 0 === r ? 3 : r,
                    a = e.tonalOffset,
                    o = void 0 === a ? .2 : a,
                    s = Tf(e, gv),
                    l = e.primary || function() {
                        return "dark" === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light") ? {
                            main: pv[200],
                            light: pv[50],
                            dark: pv[400]
                        } : {
                            main: pv[700],
                            light: pv[400],
                            dark: pv[800]
                        }
                    }(n),
                    u = e.secondary || function() {
                        return "dark" === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light") ? {
                            main: fv[200],
                            light: fv[50],
                            dark: fv[400]
                        } : {
                            main: fv[500],
                            light: fv[300],
                            dark: fv[700]
                        }
                    }(n),
                    c = e.error || function() {
                        return "dark" === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light") ? {
                            main: dv[500],
                            light: dv[300],
                            dark: dv[700]
                        } : {
                            main: dv[700],
                            light: dv[400],
                            dark: dv[800]
                        }
                    }(n),
                    f = e.info || function() {
                        return "dark" === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light") ? {
                            main: vv[400],
                            light: vv[300],
                            dark: vv[700]
                        } : {
                            main: vv[700],
                            light: vv[500],
                            dark: vv[900]
                        }
                    }(n),
                    d = e.success || function() {
                        return "dark" === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light") ? {
                            main: mv[400],
                            light: mv[300],
                            dark: mv[700]
                        } : {
                            main: mv[800],
                            light: mv[500],
                            dark: mv[900]
                        }
                    }(n),
                    h = e.warning || function() {
                        return "dark" === (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "light") ? {
                            main: hv[400],
                            light: hv[300],
                            dark: hv[700]
                        } : {
                            main: "#ed6c02",
                            light: hv[500],
                            dark: hv[900]
                        }
                    }(n);

                function p(e) {
                    var t = function(e, t) {
                        var n = ov(e),
                            r = ov(t);
                        return (Math.max(n, r) + .05) / (Math.min(n, r) + .05)
                    }(e, xv.text.primary) >= i ? xv.text.primary : yv.text.primary;
                    return t
                }
                var v = function(e) {
                        var t = e.color,
                            n = e.name,
                            r = e.mainShade,
                            i = void 0 === r ? 500 : r,
                            a = e.lightShade,
                            s = void 0 === a ? 300 : a,
                            l = e.darkShade,
                            u = void 0 === l ? 700 : l;
                        if (!(t = Lf({}, t)).main && t[i] && (t.main = t[i]), !t.hasOwnProperty("main")) throw new Error(Nf(11, n ? " (".concat(n, ")") : "", i));
                        if ("string" !== typeof t.main) throw new Error(Nf(12, n ? " (".concat(n, ")") : "", JSON.stringify(t.main)));
                        return bv(t, "light", s, o), bv(t, "dark", u, o), t.contrastText || (t.contrastText = p(t.main)), t
                    },
                    m = {
                        dark: xv,
                        light: yv
                    };
                return Rf(Lf({
                    common: Lf({}, uv),
                    mode: n,
                    primary: v({
                        color: l,
                        name: "primary"
                    }),
                    secondary: v({
                        color: u,
                        name: "secondary",
                        mainShade: "A400",
                        lightShade: "A200",
                        darkShade: "A700"
                    }),
                    error: v({
                        color: c,
                        name: "error"
                    }),
                    warning: v({
                        color: h,
                        name: "warning"
                    }),
                    info: v({
                        color: f,
                        name: "info"
                    }),
                    success: v({
                        color: d,
                        name: "success"
                    }),
                    grey: cv,
                    contrastThreshold: i,
                    getContrastText: p,
                    augmentColor: v,
                    tonalOffset: o
                }, m[n]), s)
            }
            var wv = ["fontFamily", "fontSize", "fontWeightLight", "fontWeightRegular", "fontWeightMedium", "fontWeightBold", "htmlFontSize", "allVariants", "pxToRem"];
            var Sv = {
                    textTransform: "uppercase"
                },
                Mv = '"Roboto", "Helvetica", "Arial", sans-serif';

            function kv(e, t) {
                var n = "function" === typeof t ? t(e) : t,
                    r = n.fontFamily,
                    i = void 0 === r ? Mv : r,
                    a = n.fontSize,
                    o = void 0 === a ? 14 : a,
                    s = n.fontWeightLight,
                    l = void 0 === s ? 300 : s,
                    u = n.fontWeightRegular,
                    c = void 0 === u ? 400 : u,
                    f = n.fontWeightMedium,
                    d = void 0 === f ? 500 : f,
                    h = n.fontWeightBold,
                    p = void 0 === h ? 700 : h,
                    v = n.htmlFontSize,
                    m = void 0 === v ? 16 : v,
                    g = n.allVariants,
                    y = n.pxToRem,
                    x = Tf(n, wv);
                var b = o / 14,
                    _ = y || function(e) {
                        return "".concat(e / m * b, "rem")
                    },
                    w = function(e, t, n, r, a) {
                        return Lf({
                            fontFamily: i,
                            fontWeight: e,
                            fontSize: _(t),
                            lineHeight: n
                        }, i === Mv ? {
                            letterSpacing: "".concat((o = r / t, Math.round(1e5 * o) / 1e5), "em")
                        } : {}, a, g);
                        var o
                    },
                    S = {
                        h1: w(l, 96, 1.167, -1.5),
                        h2: w(l, 60, 1.2, -.5),
                        h3: w(c, 48, 1.167, 0),
                        h4: w(c, 34, 1.235, .25),
                        h5: w(c, 24, 1.334, 0),
                        h6: w(d, 20, 1.6, .15),
                        subtitle1: w(c, 16, 1.75, .15),
                        subtitle2: w(d, 14, 1.57, .1),
                        body1: w(c, 16, 1.5, .15),
                        body2: w(c, 14, 1.43, .15),
                        button: w(d, 14, 1.75, .4, Sv),
                        caption: w(c, 12, 1.66, .4),
                        overline: w(c, 12, 2.66, 1, Sv)
                    };
                return Rf(Lf({
                    htmlFontSize: m,
                    pxToRem: _,
                    fontFamily: i,
                    fontSize: o,
                    fontWeightLight: l,
                    fontWeightRegular: c,
                    fontWeightMedium: d,
                    fontWeightBold: p
                }, S), x, {
                    clone: !1
                })
            }

            function Ev() {
                return ["".concat(arguments.length <= 0 ? void 0 : arguments[0], "px ").concat(arguments.length <= 1 ? void 0 : arguments[1], "px ").concat(arguments.length <= 2 ? void 0 : arguments[2], "px ").concat(arguments.length <= 3 ? void 0 : arguments[3], "px rgba(0,0,0,").concat(.2, ")"), "".concat(arguments.length <= 4 ? void 0 : arguments[4], "px ").concat(arguments.length <= 5 ? void 0 : arguments[5], "px ").concat(arguments.length <= 6 ? void 0 : arguments[6], "px ").concat(arguments.length <= 7 ? void 0 : arguments[7], "px rgba(0,0,0,").concat(.14, ")"), "".concat(arguments.length <= 8 ? void 0 : arguments[8], "px ").concat(arguments.length <= 9 ? void 0 : arguments[9], "px ").concat(arguments.length <= 10 ? void 0 : arguments[10], "px ").concat(arguments.length <= 11 ? void 0 : arguments[11], "px rgba(0,0,0,").concat(.12, ")")].join(",")
            }
            var Tv = ["none", Ev(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0), Ev(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0), Ev(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0), Ev(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0), Ev(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0), Ev(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0), Ev(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1), Ev(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2), Ev(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2), Ev(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3), Ev(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3), Ev(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4), Ev(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4), Ev(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4), Ev(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5), Ev(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5), Ev(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5), Ev(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6), Ev(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6), Ev(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7), Ev(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7), Ev(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7), Ev(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8), Ev(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)],
                Lv = ["duration", "easing", "delay"],
                Av = {
                    easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
                    easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
                    easeIn: "cubic-bezier(0.4, 0, 1, 1)",
                    sharp: "cubic-bezier(0.4, 0, 0.6, 1)"
                },
                Cv = {
                    shortest: 150,
                    shorter: 200,
                    short: 250,
                    standard: 300,
                    complex: 375,
                    enteringScreen: 225,
                    leavingScreen: 195
                };

            function Pv(e) {
                return "".concat(Math.round(e), "ms")
            }

            function Rv(e) {
                if (!e) return 0;
                var t = e / 36;
                return Math.round(10 * (4 + 15 * Math.pow(t, .25) + t / 5))
            }

            function Nv(e) {
                var t = Lf({}, Av, e.easing),
                    n = Lf({}, Cv, e.duration);
                return Lf({
                    getAutoHeightDuration: Rv,
                    create: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ["all"],
                            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = r.duration,
                            a = void 0 === i ? n.standard : i,
                            o = r.easing,
                            s = void 0 === o ? t.easeInOut : o,
                            l = r.delay,
                            u = void 0 === l ? 0 : l;
                        Tf(r, Lv);
                        return (Array.isArray(e) ? e : [e]).map((function(e) {
                            return "".concat(e, " ").concat("string" === typeof a ? a : Pv(a), " ").concat(s, " ").concat("string" === typeof u ? u : Pv(u))
                        })).join(",")
                    }
                }, e, {
                    easing: t,
                    duration: n
                })
            }
            var Iv = {
                    mobileStepper: 1e3,
                    fab: 1050,
                    speedDial: 1050,
                    appBar: 1100,
                    drawer: 1200,
                    modal: 1300,
                    snackbar: 1400,
                    tooltip: 1500
                },
                zv = ["breakpoints", "mixins", "spacing", "palette", "transitions", "typography", "shape"];

            function Ov() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = e.mixins,
                    n = void 0 === t ? {} : t,
                    r = e.palette,
                    i = void 0 === r ? {} : r,
                    a = e.transitions,
                    o = void 0 === a ? {} : a,
                    s = e.typography,
                    l = void 0 === s ? {} : s,
                    u = Tf(e, zv);
                if (e.vars) throw new Error(Nf(18));
                var c = _v(i),
                    f = Fp(e),
                    d = Rf(f, {
                        mixins: nv(f.breakpoints, n),
                        palette: c,
                        shadows: Tv.slice(),
                        typography: kv(c, l),
                        transitions: Nv(o),
                        zIndex: Lf({}, Iv)
                    });
                d = Rf(d, u);
                for (var h = arguments.length, p = new Array(h > 1 ? h - 1 : 0), v = 1; v < h; v++) p[v - 1] = arguments[v];
                return d = p.reduce((function(e, t) {
                    return Rf(e, t)
                }), d)
            }
            var Dv = Ov(),
                Fv = function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.defaultTheme,
                        n = void 0 === t ? tv : t,
                        r = e.rootShouldForwardProp,
                        i = void 0 === r ? ev : r,
                        a = e.slotShouldForwardProp,
                        o = void 0 === a ? ev : a,
                        s = e.styleFunctionSx,
                        l = void 0 === s ? jp : s,
                        c = function(e) {
                            var t = Zp(e.theme) ? n : e.theme;
                            return l(Lf({}, e, {
                                theme: t
                            }))
                        };
                    return c.__mui_systemSx = !0,
                        function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                            Rp(e, (function(e) {
                                return e.filter((function(e) {
                                    return !(null != e && e.__mui_systemSx)
                                }))
                            }));
                            var r, a = t.name,
                                s = t.slot,
                                l = t.skipVariantsResolver,
                                d = t.skipSx,
                                h = t.overridesResolver,
                                p = Tf(t, qp),
                                v = void 0 !== l ? l : s && "Root" !== s || !1,
                                m = d || !1;
                            var g = ev;
                            "Root" === s ? g = i : s ? g = o : Jp(e) && (g = void 0);
                            var y = Pp(e, Lf({
                                    shouldForwardProp: g,
                                    label: r
                                }, p)),
                                x = function(e) {
                                    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) r[i - 1] = arguments[i];
                                    var o = r ? r.map((function(e) {
                                            return "function" === typeof e && e.__emotion_real !== e ? function(t) {
                                                var r = t.theme,
                                                    i = Tf(t, Xp);
                                                return e(Lf({
                                                    theme: Zp(r) ? n : r
                                                }, i))
                                            } : e
                                        })) : [],
                                        s = e;
                                    a && h && o.push((function(e) {
                                        var t = Zp(e.theme) ? n : e.theme,
                                            r = $p(a, t);
                                        if (r) {
                                            var i = {};
                                            return Object.entries(r).forEach((function(n) {
                                                var r = u(n, 2),
                                                    a = r[0],
                                                    o = r[1];
                                                i[a] = "function" === typeof o ? o(Lf({}, e, {
                                                    theme: t
                                                })) : o
                                            })), h(e, i)
                                        }
                                        return null
                                    })), a && !v && o.push((function(e) {
                                        var t = Zp(e.theme) ? n : e.theme;
                                        return Kp(e, Qp(a, t), t, a)
                                    })), m || o.push(c);
                                    var l = o.length - r.length;
                                    if (Array.isArray(e) && l > 0) {
                                        var d = new Array(l).fill("");
                                        (s = [].concat(f(e), f(d))).raw = [].concat(f(e.raw), f(d))
                                    } else "function" === typeof e && e.__emotion_real !== e && (s = function(t) {
                                        var r = t.theme,
                                            i = Tf(t, Yp);
                                        return e(Lf({
                                            theme: Zp(r) ? n : r
                                        }, i))
                                    });
                                    var p = y.apply(void 0, [s].concat(f(o)));
                                    return p
                                };
                            return y.withConfig && (x.withConfig = y.withConfig), x
                        }
                }({
                    defaultTheme: Dv,
                    rootShouldForwardProp: function(e) {
                        return ev(e) && "classes" !== e
                    }
                }),
                Bv = Fv;

            function Uv(e) {
                var t = e.theme,
                    n = e.name,
                    r = e.props;
                return t && t.components && t.components[n] && t.components[n].defaultProps ? function(e, t) {
                    var n = Lf({}, t);
                    return Object.keys(e).forEach((function(t) {
                        void 0 === n[t] && (n[t] = e[t])
                    })), n
                }(t.components[n].defaultProps, r) : r
            }
            var Hv = t.createContext(null);

            function Vv() {
                return t.useContext(Hv)
            }

            function Gv(e) {
                return 0 === Object.keys(e).length
            }
            var Wv = function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        t = Vv();
                    return !t || Gv(t) ? e : t
                },
                jv = Fp();
            var qv = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : jv;
                return Wv(e)
            };

            function Xv(e) {
                return function(e) {
                    var t = e.props,
                        n = e.name,
                        r = e.defaultTheme;
                    return Uv({
                        theme: qv(r),
                        name: n,
                        props: t
                    })
                }({
                    props: e.props,
                    name: e.name,
                    defaultTheme: Dv
                })
            }
            var Yv = If,
                Zv = function(e) {
                    return e
                },
                Jv = function() {
                    var e = Zv;
                    return {
                        configure: function(t) {
                            e = t
                        },
                        generate: function(t) {
                            return e(t)
                        },
                        reset: function() {
                            e = Zv
                        }
                    }
                }(),
                $v = {
                    active: "active",
                    checked: "checked",
                    completed: "completed",
                    disabled: "disabled",
                    error: "error",
                    expanded: "expanded",
                    focused: "focused",
                    focusVisible: "focusVisible",
                    required: "required",
                    selected: "selected"
                };

            function Qv(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Mui",
                    r = $v[t];
                return r ? "".concat(n, "-").concat(r) : "".concat(Jv.generate(e), "-").concat(t)
            }

            function Kv(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "Mui",
                    r = {};
                return t.forEach((function(t) {
                    r[t] = Qv(e, t, n)
                })), r
            }

            function em(e) {
                return Qv("MuiTypography", e)
            }
            Kv("MuiTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "subtitle1", "subtitle2", "body1", "body2", "inherit", "button", "caption", "overline", "alignLeft", "alignRight", "alignCenter", "alignJustify", "noWrap", "gutterBottom", "paragraph"]);
            var tm = ["align", "className", "component", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"],
                nm = Bv("span", {
                    name: "MuiTypography",
                    slot: "Root",
                    overridesResolver: function(e, t) {
                        var n = e.ownerState;
                        return [t.root, n.variant && t[n.variant], "inherit" !== n.align && t["align".concat(Yv(n.align))], n.noWrap && t.noWrap, n.gutterBottom && t.gutterBottom, n.paragraph && t.paragraph]
                    }
                })((function(e) {
                    var t = e.theme,
                        n = e.ownerState;
                    return Lf({
                        margin: 0
                    }, n.variant && t.typography[n.variant], "inherit" !== n.align && {
                        textAlign: n.align
                    }, n.noWrap && {
                        overflow: "hidden",
                        textOverflow: "ellipsis",
                        whiteSpace: "nowrap"
                    }, n.gutterBottom && {
                        marginBottom: "0.35em"
                    }, n.paragraph && {
                        marginBottom: 16
                    })
                })),
                rm = {
                    h1: "h1",
                    h2: "h2",
                    h3: "h3",
                    h4: "h4",
                    h5: "h5",
                    h6: "h6",
                    subtitle1: "h6",
                    subtitle2: "h6",
                    body1: "p",
                    body2: "p",
                    inherit: "p"
                },
                im = {
                    primary: "primary.main",
                    textPrimary: "text.primary",
                    secondary: "secondary.main",
                    textSecondary: "text.secondary",
                    error: "error.main"
                },
                am = t.forwardRef((function(e, t) {
                    var n = Xv({
                            props: e,
                            name: "MuiTypography"
                        }),
                        r = function(e) {
                            return im[e] || e
                        }(n.color),
                        i = $d(Lf({}, n, {
                            color: r
                        })),
                        a = i.align,
                        o = void 0 === a ? "inherit" : a,
                        s = i.className,
                        l = i.component,
                        u = i.gutterBottom,
                        c = void 0 !== u && u,
                        f = i.noWrap,
                        d = void 0 !== f && f,
                        h = i.paragraph,
                        p = void 0 !== h && h,
                        v = i.variant,
                        m = void 0 === v ? "body1" : v,
                        g = i.variantMapping,
                        y = void 0 === g ? rm : g,
                        x = Tf(i, tm),
                        b = Lf({}, i, {
                            align: o,
                            color: r,
                            className: s,
                            component: l,
                            gutterBottom: c,
                            noWrap: d,
                            paragraph: p,
                            variant: m,
                            variantMapping: y
                        }),
                        _ = l || (p ? "p" : y[m] || rm[m]) || "span",
                        w = function(e) {
                            var t = e.align,
                                n = e.gutterBottom,
                                r = e.noWrap,
                                i = e.paragraph,
                                a = e.variant,
                                o = e.classes;
                            return Qd({
                                root: ["root", a, "inherit" !== e.align && "align".concat(Yv(t)), n && "gutterBottom", r && "noWrap", i && "paragraph"]
                            }, em, o)
                        }(b);
                    return (0, kf.jsx)(nm, Lf({
                        as: _,
                        ref: t,
                        ownerState: b,
                        className: Cf(w.root, s)
                    }, x))
                })),
                om = am,
                sm = "QWERTYUIOPASDFGHJKLZXCVBNM",
                lm = "qwertyuiopasdfghjklzxcvbnm",
                um = "1234567890",
                cm = "`~!@#$%^&*()-_=+{}[];:'\"|\\<>,.?/",
                fm = function() {
                    function e(t, n) {
                        if (d(this, e), n && "" !== n.trim()) this.characters = e.toCharacters(n, !1);
                        else {
                            t || (t = ["uppercase", "lowercase"]);
                            var r = "";
                            "string" === typeof t ? r = t : t.forEach((function(e) {
                                switch (e) {
                                    case "lowercase":
                                        r += lm;
                                        break;
                                    case "uppercase":
                                        r += sm;
                                        break;
                                    case "numbers":
                                        r += um;
                                        break;
                                    case "symbols":
                                        r += cm
                                }
                            })), this.characters = e.toCharacters(r, !1)
                        }
                    }
                    return p(e, [{
                        key: "shuffle",
                        value: function() {
                            for (var e, t = this.characters, n = t.length; 0 != n;) {
                                e = Math.floor(Math.random() * n), n--;
                                var r = [t[e], t[n]];
                                t[n] = r[0], t[e] = r[1]
                            }
                            return t.join("")
                        }
                    }], [{
                        key: "generateCode",
                        value: De().mark((function e(t) {
                            var n;
                            return De().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        n = 0;
                                    case 1:
                                        if (!(n < t.length)) {
                                            e.next = 8;
                                            break
                                        }
                                        return e.next = 4, t[n];
                                    case 4:
                                        n + 1 >= t.length && (n = 0);
                                    case 5:
                                        n++, e.next = 1;
                                        break;
                                    case 8:
                                    case "end":
                                        return e.stop()
                                }
                            }), e)
                        }))
                    }, {
                        key: "toCharacters",
                        value: function(e) {
                            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                n = Array.from(e);
                            return t ? n : Array.from(new Set(n))
                        }
                    }]), e
                }(),
                dm = function(e) {
                    var n, r = e.value,
                        i = e.interval,
                        a = e.onFinish,
                        o = u((0, t.useState)("Reset"), 2),
                        s = o[0],
                        l = o[1],
                        c = u((0, t.useState)(""), 2),
                        f = c[0],
                        d = c[1],
                        h = u((0, t.useState)(0), 2),
                        p = h[0],
                        v = h[1],
                        m = function() {
                            clearInterval(n)
                        };
                    return (0, t.useEffect)((function() {
                        "Playing" === s && d((function(e) {
                            return e + r[p - 1]
                        })), p >= r.length && a && a()
                    }), [p]), (0, t.useEffect)((function() {
                        switch (s) {
                            case "Playing":
                                n = setInterval((function() {
                                    v((function(e) {
                                        return e >= r.length ? (m(), l("Paused"), e) : ++e
                                    }))
                                }), i);
                                break;
                            case "Paused":
                                m();
                                break;
                            default:
                                clearInterval(n), v(0), d("")
                        }
                        return function() {
                            clearInterval(n)
                        }
                    }), [s]), {
                        text: f,
                        currentIndex: p,
                        state: s,
                        play: function() {
                            return l("Playing")
                        },
                        pause: function() {
                            return l("Paused")
                        },
                        reset: function() {
                            return l("Reset")
                        }
                    }
                };

            function hm(e) {
                var n, r = e.isPlaying,
                    i = e.loopString,
                    a = e.options,
                    o = void 0 === a ? {
                        intervalDeviation: 10,
                        interval: 100
                    } : a,
                    s = fm.generateCode(i),
                    l = o.interval - (o.intervalDeviation || 50),
                    c = o.interval + (o.intervalDeviation || 50),
                    f = Math.random() * (c - l) + l,
                    d = u((0, t.useState)("".concat(s.next().value)), 2),
                    h = d[0],
                    p = d[1],
                    v = function() {
                        clearInterval(n)
                    };
                return (0, t.useEffect)((function() {
                    return r ? n = setInterval((function() {
                        p("".concat(s.next().value))
                    }), f) : v(), v
                }), [r]), t.createElement(t.Fragment, null, h)
            }
            var pm = function(e, t) {
                    var n = {};
                    for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
                    if (null != e && "function" === typeof Object.getOwnPropertySymbols) {
                        var i = 0;
                        for (r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]])
                    }
                    return n
                },
                vm = (0, t.forwardRef)((function(e, n) {
                    var r = e.autoplay,
                        i = void 0 !== r && r,
                        a = e.interval,
                        o = void 0 === a ? 100 : a,
                        s = pm(e, ["autoplay", "interval"]),
                        l = u((0, t.useState)(!1), 2),
                        c = l[0],
                        f = l[1],
                        d = u((0, t.useState)(!1), 2),
                        h = d[0],
                        p = d[1],
                        v = (0, t.useRef)(null),
                        m = function(e) {
                            var n = u((0, t.useState)(!1), 2),
                                r = n[0],
                                i = n[1];
                            return (0, t.useEffect)((function() {
                                var t = new IntersectionObserver((function(e) {
                                    var t = u(e, 1)[0];
                                    return i(t.isIntersecting)
                                }));
                                return t.observe(e.current),
                                    function() {
                                        t.disconnect()
                                    }
                            }), []), r
                        }(v),
                        g = dm({
                            value: s.text,
                            interval: o,
                            onFinish: s.onFinish
                        }),
                        y = g.text,
                        x = g.currentIndex,
                        b = g.state,
                        _ = g.play,
                        w = g.pause,
                        S = g.reset,
                        M = Array.apply({}, Array(s.text.length)),
                        k = new fm(s.allowedCharacters, s.customCharacters);
                    return (0, t.useImperativeHandle)(n, (function() {
                        return {
                            play: _,
                            pause: w,
                            reset: S
                        }
                    }), []), (0, t.useEffect)((function() {
                        f(!0)
                    }), []), (0, t.useEffect)((function() {
                        i && !h && (console.log("play"), _()), p(!0)
                    }), [m]), (0, t.useEffect)((function() {
                        switch (s.state) {
                            case "Playing":
                                _();
                                break;
                            case "Paused":
                                w();
                                break;
                            case "Reset":
                                S()
                        }
                    }), [s.state]), t.createElement("span", {
                        ref: v,
                        className: s.className,
                        style: s.style
                    }, c ? t.createElement(t.Fragment, null, y, M.map((function(e, n) {
                        return n >= x && t.createElement(hm, {
                            key: n,
                            isPlaying: "Playing" === b,
                            loopString: k.shuffle(),
                            options: s.characterOptions
                        })
                    }))) : s.text.split("").map((function() {
                        return "-"
                    })))
                })),
                mm = vm,
                gm = n(694),
                ym = n.n(gm);
            (0, t.createContext)({
                listeners: new Set,
                stateMap: new Map
            });
            var xm = {
                api: {
                    hostname: "api.lanyard.rest",
                    secure: !0
                }
            };
            Error;
            var bm, _m = ((bm = _m || {})[bm.Event = 0] = "Event", bm[bm.Hello = 1] = "Hello", bm[bm.Initialize = 2] = "Initialize", bm[bm.Heartbeat = 3] = "Heartbeat", bm),
                wm = function(e) {
                    return e.INIT_STATE = "INIT_STATE", e.PRESENCE_UPDATE = "PRESENCE_UPDATE", e
                }(wm || {});

            function Sm(e, n) {
                var r = Oe(Oe({}, xm), n),
                    i = u((0, t.useState)(), 2),
                    a = i[0],
                    o = i[1],
                    s = "".concat(r.api.secure ? "wss" : "ws", "://").concat(r.api.hostname, "/socket");
                return (0, t.useEffect)((function() {
                    if (!(typeof window > "u")) {
                        if (!("WebSocket" in window) && !("MozWebSocket" in window)) throw new Error("WebSocket connections not supported in this browser.");
                        var t, n, r;
                        return t = "object" == typeof e ? {
                                subscribe_to_ids: e
                            } : {
                                subscribe_to_id: e
                            }, i(),
                            function() {
                                clearInterval(n), r.removeEventListener("close", i), r.close()
                            }
                    }

                    function i() {
                        n && clearInterval(n), (r = new WebSocket(s)).addEventListener("open", (function() {
                            console.log("Lanyard: Socket connection opened")
                        })), r.addEventListener("close", i), r.addEventListener("message", (function(e) {
                            var i = JSON.parse(e.data);
                            switch (i.op) {
                                case 1:
                                    var a;
                                    n = setInterval((function() {
                                        r.readyState === r.OPEN && r.send(JSON.stringify({
                                            op: 3
                                        }))
                                    }), null === (a = i.d) || void 0 === a ? void 0 : a.heartbeat_interval), r.readyState === r.OPEN && r.send(JSON.stringify({
                                        op: 2,
                                        d: t
                                    }));
                                    break;
                                case 0:
                                    switch (i.t) {
                                        case "INIT_STATE":
                                        case "PRESENCE_UPDATE":
                                            i.d && o(i.d)
                                    }
                            }
                        }))
                    }
                }), [s]), null !== a && void 0 !== a ? a : r.initialData
            }
            var Mm = "428944701094363146",
                km = "https://cdn.discordapp.com/avatars/".concat(Mm, "/"),
                Em = {
                    discord_user: {
                        avatar: "a_c3562a10551250a3f2220086d6af1545"
                    },
                    discord_status: "offline",
                    activities: []
                },
                Tm = function(e) {
                    var t = e.game,
                        n = e.darkMode,
                        r = ym()({
                            "duration-300 transition-all ease-in-out delay-150 trackInfo": !0,
                            "text-purple_lighter": n,
                            "text-purple_darker": !n
                        }),
                        i = ym()({
                            "custom_font duration-300 transition-all ease-in-out delay-150 tracking-widest font-semibold leading-3": !0,
                            "text-purple_lighter": n,
                            "text-purple_darker": !n
                        }),
                        a = function() {
                            var e, n, r, i, a, o;
                            return null !== (e = t.assets) && void 0 !== e && e.large_image ? null !== (n = t.assets) && void 0 !== n && n.large_image.startsWith("mp:external") ? null === (r = t.assets) || void 0 === r ? void 0 : r.large_image.replace(/mp:external\/([^\/]*)\/(http[s])/g, "$2:/") : (a = t.application_id, o = null === (i = t.assets) || void 0 === i ? void 0 : i.large_image, "https://cdn.discordapp.com/app-assets/".concat(a, "/").concat(o, ".png")) : "https://dcdn.dstn.to/app-icons/".concat(t.application_id)
                        }();
                    return (0, kf.jsxs)(kf.Fragment, {
                        children: [(0, kf.jsx)(om, {
                            variant: "caption",
                            children: (0, kf.jsx)("span", {
                                className: i,
                                children: "NOW PLAYING:"
                            })
                        }), (0, kf.jsx)("div", {
                            className: "now_playing_card",
                            children: (0, kf.jsxs)("div", {
                                className: "now_playing_container-inner",
                                children: [(0, kf.jsx)("img", {
                                    id: "track_art",
                                    src: a,
                                    alt: t.name
                                }), (0, kf.jsxs)("div", {
                                    className: r,
                                    children: [(0, kf.jsx)("p", {
                                        children: t.name
                                    }), (0, kf.jsx)("p", {
                                        children: t.state
                                    })]
                                })]
                            })
                        })]
                    })
                },
                Lm = function(e) {
                    var t = e.spotify,
                        n = e.darkMode,
                        r = ym()({
                            "duration-300 transition-all ease-in-out delay-150 trackInfo": !0,
                            "text-purple_lighter": n,
                            "text-purple_darker": !n
                        }),
                        i = ym()({
                            "custom_font duration-300 transition-all ease-in-out delay-150 tracking-widest font-semibold leading-3": !0,
                            "text-purple_lighter": n,
                            "text-purple_darker": !n
                        });
                    return (0, kf.jsxs)(kf.Fragment, {
                        children: [(0, kf.jsx)(om, {
                            variant: "caption",
                            children: (0, kf.jsx)("span", {
                                className: i,
                                children: "NOW PLAYING:"
                            })
                        }), (0, kf.jsx)("div", {
                            className: "now_playing_card",
                            children: (0, kf.jsxs)("div", {
                                className: "now_playing_container-inner",
                                children: [(0, kf.jsx)("img", {
                                    id: "track_art",
                                    src: t.album_art_url,
                                    alt: t.title
                                }), (0, kf.jsxs)("div", {
                                    className: r,
                                    children: [(0, kf.jsx)("p", {
                                        className: "cursor-pointer",
                                        onClick: function() {
                                            return window.open("https://open.spotify.com/track/".concat(null === t || void 0 === t ? void 0 : t.track_id), "_blank")
                                        },
                                        children: t.song
                                    }), (0, kf.jsxs)("p", {
                                        children: ["by ", t.artist]
                                    }), (0, kf.jsxs)("p", {
                                        className: "album",
                                        children: ["on ", t.album]
                                    })]
                                })]
                            })
                        })]
                    })
                },
                Am = function(e) {
                    var n = e.darkMode,
                        r = u((0, t.useState)(null), 2),
                        i = r[0],
                        a = r[1],
                        o = Sm(Mm, {
                            initialData: Em
                        }),
                        s = o.spotify,
                        l = o.activities;
                    (0, t.useEffect)((function() {
                        var e = l.find((function(e) {
                            return 0 === e.type
                        }));
                        a(e)
                    }), [l]);
                    var c = s || i;
                    return 0 !== l.length && c ? s ? (0, kf.jsx)(Lm, {
                        spotify: s,
                        darkMode: n
                    }) : i && (0, kf.jsx)(Tm, {
                        game: i,
                        darkMode: n
                    }) : (0, kf.jsx)(kf.Fragment, {})
                },
                Cm = function(e) {
                    var t = e.darkMode,
                        n = ym()({
                            "custom_font font-semibold duration-300 transition-all ease-in-out delay-150": !0,
                            "text-purple_lighter": t,
                            "text-purple_darker": !t
                        }),
                        r = ym()({
                            "custom_font duration-300 transition-all ease-in-out delay-150": !0,
                            "text-purple_lighter": t,
                            "text-purple_darker": !t
                        });
                    return (0, kf.jsxs)("div", {
                        className: "absolute -m-6 top-1/2 left-1/3",
                        children: [(0, kf.jsx)(om, {
                            variant: "h3",
                            children: (0, kf.jsx)("span", {
                                className: n,
                                children: (0, kf.jsx)(mm, {
                                    autoplay: !0,
                                    text: "Red",
                                    interval: 450,
                                    allowedCharacters: ["numbers", "symbols"]
                                })
                            })
                        }), (0, kf.jsx)(om, {
                            variant: "h6",
                            children: (0, kf.jsx)("span", {
                                className: r,
                                children: (0, kf.jsx)(mm, {
                                    autoplay: !0,
                                    text: "Full Stack Developer",
                                    interval: 100,
                                    allowedCharacters: ["symbols"]
                                })
                            })
                        }), (0, kf.jsx)(Am, {
                            darkMode: t
                        })]
                    })
                };

            function Pm(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function Rm(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? Pm(Object(n), !0).forEach((function(t) {
                        zm(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Pm(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }

            function Nm(e) {
                return Nm = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, Nm(e)
            }

            function Im(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var r = t[n];
                    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                }
            }

            function zm(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function Om(e, t) {
                return function(e) {
                    if (Array.isArray(e)) return e
                }(e) || function(e, t) {
                    var n = null == e ? null : "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null == n) return;
                    var r, i, a = [],
                        o = !0,
                        s = !1;
                    try {
                        for (n = n.call(e); !(o = (r = n.next()).done) && (a.push(r.value), !t || a.length !== t); o = !0);
                    } catch (l) {
                        s = !0, i = l
                    } finally {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (s) throw i
                        }
                    }
                    return a
                }(e, t) || Fm(e, t) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function Dm(e) {
                return function(e) {
                    if (Array.isArray(e)) return Bm(e)
                }(e) || function(e) {
                    if ("undefined" !== typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                }(e) || Fm(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function Fm(e, t) {
                if (e) {
                    if ("string" === typeof e) return Bm(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Bm(e, t) : void 0
                }
            }

            function Bm(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r
            }
            var Um = function() {},
                Hm = {},
                Vm = {},
                Gm = null,
                Wm = {
                    mark: Um,
                    measure: Um
                };
            try {
                "undefined" !== typeof window && (Hm = window), "undefined" !== typeof document && (Vm = document), "undefined" !== typeof MutationObserver && (Gm = MutationObserver), "undefined" !== typeof performance && (Wm = performance)
            } catch (bm) {}
            var jm, qm, Xm, Ym, Zm, Jm = (Hm.navigator || {}).userAgent,
                $m = void 0 === Jm ? "" : Jm,
                Qm = Hm,
                Km = Vm,
                eg = Gm,
                tg = Wm,
                ng = (Qm.document, !!Km.documentElement && !!Km.head && "function" === typeof Km.addEventListener && "function" === typeof Km.createElement),
                rg = ~$m.indexOf("MSIE") || ~$m.indexOf("Trident/"),
                ig = "svg-inline--fa",
                ag = "data-fa-i2svg",
                og = "data-fa-pseudo-element",
                sg = "data-prefix",
                lg = "data-icon",
                ug = "fontawesome-i2svg",
                cg = ["HTML", "HEAD", "STYLE", "SCRIPT"],
                fg = function() {
                    try {
                        return !0
                    } catch (bm) {
                        return !1
                    }
                }(),
                dg = "classic",
                hg = "sharp",
                pg = [dg, hg];

            function vg(e) {
                return new Proxy(e, {
                    get: function(e, t) {
                        return t in e ? e[t] : e.classic
                    }
                })
            }
            var mg = vg((zm(jm = {}, dg, {
                    fa: "solid",
                    fas: "solid",
                    "fa-solid": "solid",
                    far: "regular",
                    "fa-regular": "regular",
                    fal: "light",
                    "fa-light": "light",
                    fat: "thin",
                    "fa-thin": "thin",
                    fad: "duotone",
                    "fa-duotone": "duotone",
                    fab: "brands",
                    "fa-brands": "brands",
                    fak: "kit",
                    "fa-kit": "kit"
                }), zm(jm, hg, {
                    fa: "solid",
                    fass: "solid",
                    "fa-solid": "solid"
                }), jm)),
                gg = vg((zm(qm = {}, dg, {
                    solid: "fas",
                    regular: "far",
                    light: "fal",
                    thin: "fat",
                    duotone: "fad",
                    brands: "fab",
                    kit: "fak"
                }), zm(qm, hg, {
                    solid: "fass"
                }), qm)),
                yg = vg((zm(Xm = {}, dg, {
                    fab: "fa-brands",
                    fad: "fa-duotone",
                    fak: "fa-kit",
                    fal: "fa-light",
                    far: "fa-regular",
                    fas: "fa-solid",
                    fat: "fa-thin"
                }), zm(Xm, hg, {
                    fass: "fa-solid"
                }), Xm)),
                xg = vg((zm(Ym = {}, dg, {
                    "fa-brands": "fab",
                    "fa-duotone": "fad",
                    "fa-kit": "fak",
                    "fa-light": "fal",
                    "fa-regular": "far",
                    "fa-solid": "fas",
                    "fa-thin": "fat"
                }), zm(Ym, hg, {
                    "fa-solid": "fass"
                }), Ym)),
                bg = /fa(s|r|l|t|d|b|k|ss)?[\-\ ]/,
                _g = "fa-layers-text",
                wg = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i,
                Sg = vg((zm(Zm = {}, dg, {
                    900: "fas",
                    400: "far",
                    normal: "far",
                    300: "fal",
                    100: "fat"
                }), zm(Zm, hg, {
                    900: "fass"
                }), Zm)),
                Mg = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
                kg = Mg.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]),
                Eg = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"],
                Tg = "duotone-group",
                Lg = "swap-opacity",
                Ag = "primary",
                Cg = "secondary",
                Pg = new Set;
            Object.keys(gg.classic).map(Pg.add.bind(Pg)), Object.keys(gg.sharp).map(Pg.add.bind(Pg));
            var Rg = [].concat(pg, Dm(Pg), ["2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", Tg, Lg, Ag, Cg]).concat(Mg.map((function(e) {
                    return "".concat(e, "x")
                }))).concat(kg.map((function(e) {
                    return "w-".concat(e)
                }))),
                Ng = Qm.FontAwesomeConfig || {};
            if (Km && "function" === typeof Km.querySelector) {
                [
                    ["data-family-prefix", "familyPrefix"],
                    ["data-css-prefix", "cssPrefix"],
                    ["data-family-default", "familyDefault"],
                    ["data-style-default", "styleDefault"],
                    ["data-replacement-class", "replacementClass"],
                    ["data-auto-replace-svg", "autoReplaceSvg"],
                    ["data-auto-add-css", "autoAddCss"],
                    ["data-auto-a11y", "autoA11y"],
                    ["data-search-pseudo-elements", "searchPseudoElements"],
                    ["data-observe-mutations", "observeMutations"],
                    ["data-mutate-approach", "mutateApproach"],
                    ["data-keep-original-source", "keepOriginalSource"],
                    ["data-measure-performance", "measurePerformance"],
                    ["data-show-missing-icons", "showMissingIcons"]
                ].forEach((function(e) {
                    var t = Om(e, 2),
                        n = t[0],
                        r = t[1],
                        i = function(e) {
                            return "" === e || "false" !== e && ("true" === e || e)
                        }(function(e) {
                            var t = Km.querySelector("script[" + e + "]");
                            if (t) return t.getAttribute(e)
                        }(n));
                    void 0 !== i && null !== i && (Ng[r] = i)
                }))
            }
            var Ig = {
                styleDefault: "solid",
                familyDefault: "classic",
                cssPrefix: "fa",
                replacementClass: ig,
                autoReplaceSvg: !0,
                autoAddCss: !0,
                autoA11y: !0,
                searchPseudoElements: !1,
                observeMutations: !0,
                mutateApproach: "async",
                keepOriginalSource: !0,
                measurePerformance: !1,
                showMissingIcons: !0
            };
            Ng.familyPrefix && (Ng.cssPrefix = Ng.familyPrefix);
            var zg = Rm(Rm({}, Ig), Ng);
            zg.autoReplaceSvg || (zg.observeMutations = !1);
            var Og = {};
            Object.keys(Ig).forEach((function(e) {
                Object.defineProperty(Og, e, {
                    enumerable: !0,
                    set: function(t) {
                        zg[e] = t, Dg.forEach((function(e) {
                            return e(Og)
                        }))
                    },
                    get: function() {
                        return zg[e]
                    }
                })
            })), Object.defineProperty(Og, "familyPrefix", {
                enumerable: !0,
                set: function(e) {
                    zg.cssPrefix = e, Dg.forEach((function(e) {
                        return e(Og)
                    }))
                },
                get: function() {
                    return zg.cssPrefix
                }
            }), Qm.FontAwesomeConfig = Og;
            var Dg = [];
            var Fg = 16,
                Bg = {
                    size: 16,
                    x: 0,
                    y: 0,
                    rotate: 0,
                    flipX: !1,
                    flipY: !1
                };

            function Ug() {
                for (var e = 12, t = ""; e-- > 0;) t += "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ" [62 * Math.random() | 0];
                return t
            }

            function Hg(e) {
                for (var t = [], n = (e || []).length >>> 0; n--;) t[n] = e[n];
                return t
            }

            function Vg(e) {
                return e.classList ? Hg(e.classList) : (e.getAttribute("class") || "").split(" ").filter((function(e) {
                    return e
                }))
            }

            function Gg(e) {
                return "".concat(e).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }

            function Wg(e) {
                return Object.keys(e || {}).reduce((function(t, n) {
                    return t + "".concat(n, ": ").concat(e[n].trim(), ";")
                }), "")
            }

            function jg(e) {
                return e.size !== Bg.size || e.x !== Bg.x || e.y !== Bg.y || e.rotate !== Bg.rotate || e.flipX || e.flipY
            }

            function qg() {
                var e = "fa",
                    t = ig,
                    n = Og.cssPrefix,
                    r = Og.replacementClass,
                    i = ':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-counter-scale, 0.25));\n          transform: scale(var(--fa-counter-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(var(--fa-li-width, 2em) * -1);\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  -webkit-animation-name: fa-beat;\n          animation-name: fa-beat;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  -webkit-animation-name: fa-bounce;\n          animation-name: fa-bounce;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  -webkit-animation-name: fa-fade;\n          animation-name: fa-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  -webkit-animation-name: fa-beat-fade;\n          animation-name: fa-beat-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  -webkit-animation-name: fa-flip;\n          animation-name: fa-flip;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  -webkit-animation-name: fa-shake;\n          animation-name: fa-shake;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 2s);\n          animation-duration: var(--fa-animation-duration, 2s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));\n          animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    -webkit-animation-delay: -1ms;\n            animation-delay: -1ms;\n    -webkit-animation-duration: 1ms;\n            animation-duration: 1ms;\n    -webkit-animation-iteration-count: 1;\n            animation-iteration-count: 1;\n    transition-delay: 0s;\n    transition-duration: 0s;\n  }\n}\n@-webkit-keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@-webkit-keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@-webkit-keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@-webkit-keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@-webkit-keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@-webkit-keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  -webkit-transform: rotate(var(--fa-rotate-angle, none));\n          transform: rotate(var(--fa-rotate-angle, none));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}';
                if (n !== e || r !== t) {
                    var a = new RegExp("\\.".concat(e, "\\-"), "g"),
                        o = new RegExp("\\--".concat(e, "\\-"), "g"),
                        s = new RegExp("\\.".concat(t), "g");
                    i = i.replace(a, ".".concat(n, "-")).replace(o, "--".concat(n, "-")).replace(s, ".".concat(r))
                }
                return i
            }
            var Xg = !1;

            function Yg() {
                Og.autoAddCss && !Xg && (! function(e) {
                    if (e && ng) {
                        var t = Km.createElement("style");
                        t.setAttribute("type", "text/css"), t.innerHTML = e;
                        for (var n = Km.head.childNodes, r = null, i = n.length - 1; i > -1; i--) {
                            var a = n[i],
                                o = (a.tagName || "").toUpperCase();
                            ["STYLE", "LINK"].indexOf(o) > -1 && (r = a)
                        }
                        Km.head.insertBefore(t, r)
                    }
                }(qg()), Xg = !0)
            }
            var Zg = {
                    mixout: function() {
                        return {
                            dom: {
                                css: qg,
                                insertCss: Yg
                            }
                        }
                    },
                    hooks: function() {
                        return {
                            beforeDOMElementCreation: function() {
                                Yg()
                            },
                            beforeI2svg: function() {
                                Yg()
                            }
                        }
                    }
                },
                Jg = Qm || {};
            Jg.___FONT_AWESOME___ || (Jg.___FONT_AWESOME___ = {}), Jg.___FONT_AWESOME___.styles || (Jg.___FONT_AWESOME___.styles = {}), Jg.___FONT_AWESOME___.hooks || (Jg.___FONT_AWESOME___.hooks = {}), Jg.___FONT_AWESOME___.shims || (Jg.___FONT_AWESOME___.shims = []);
            var $g = Jg.___FONT_AWESOME___,
                Qg = [],
                Kg = !1;

            function ey(e) {
                ng && (Kg ? setTimeout(e, 0) : Qg.push(e))
            }

            function ty(e) {
                var t = e.tag,
                    n = e.attributes,
                    r = void 0 === n ? {} : n,
                    i = e.children,
                    a = void 0 === i ? [] : i;
                return "string" === typeof e ? Gg(e) : "<".concat(t, " ").concat(function(e) {
                    return Object.keys(e || {}).reduce((function(t, n) {
                        return t + "".concat(n, '="').concat(Gg(e[n]), '" ')
                    }), "").trim()
                }(r), ">").concat(a.map(ty).join(""), "</").concat(t, ">")
            }

            function ny(e, t, n) {
                if (e && e[t] && e[t][n]) return {
                    prefix: t,
                    iconName: n,
                    icon: e[t][n]
                }
            }
            ng && ((Kg = (Km.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(Km.readyState)) || Km.addEventListener("DOMContentLoaded", (function e() {
                Km.removeEventListener("DOMContentLoaded", e), Kg = 1, Qg.map((function(e) {
                    return e()
                }))
            })));
            var ry = function(e, t, n, r) {
                var i, a, o, s = Object.keys(e),
                    l = s.length,
                    u = void 0 !== r ? function(e, t) {
                        return function(n, r, i, a) {
                            return e.call(t, n, r, i, a)
                        }
                    }(t, r) : t;
                for (void 0 === n ? (i = 1, o = e[s[0]]) : (i = 0, o = n); i < l; i++) o = u(o, e[a = s[i]], a, e);
                return o
            };

            function iy(e) {
                var t = function(e) {
                    for (var t = [], n = 0, r = e.length; n < r;) {
                        var i = e.charCodeAt(n++);
                        if (i >= 55296 && i <= 56319 && n < r) {
                            var a = e.charCodeAt(n++);
                            56320 == (64512 & a) ? t.push(((1023 & i) << 10) + (1023 & a) + 65536) : (t.push(i), n--)
                        } else t.push(i)
                    }
                    return t
                }(e);
                return 1 === t.length ? t[0].toString(16) : null
            }

            function ay(e) {
                return Object.keys(e).reduce((function(t, n) {
                    var r = e[n];
                    return !!r.icon ? t[r.iconName] = r.icon : t[n] = r, t
                }), {})
            }

            function oy(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    r = n.skipHooks,
                    i = void 0 !== r && r,
                    a = ay(t);
                "function" !== typeof $g.hooks.addPack || i ? $g.styles[e] = Rm(Rm({}, $g.styles[e] || {}), a) : $g.hooks.addPack(e, ay(t)), "fas" === e && oy("fa", t)
            }
            var sy, ly, uy, cy = $g.styles,
                fy = $g.shims,
                dy = (zm(sy = {}, dg, Object.values(yg.classic)), zm(sy, hg, Object.values(yg.sharp)), sy),
                hy = null,
                py = {},
                vy = {},
                my = {},
                gy = {},
                yy = {},
                xy = (zm(ly = {}, dg, Object.keys(mg.classic)), zm(ly, hg, Object.keys(mg.sharp)), ly);

            function by(e, t) {
                var n, r = t.split("-"),
                    i = r[0],
                    a = r.slice(1).join("-");
                return i !== e || "" === a || (n = a, ~Rg.indexOf(n)) ? null : a
            }
            var _y, wy = function() {
                var e = function(e) {
                    return ry(cy, (function(t, n, r) {
                        return t[r] = ry(n, e, {}), t
                    }), {})
                };
                py = e((function(e, t, n) {
                    (t[3] && (e[t[3]] = n), t[2]) && t[2].filter((function(e) {
                        return "number" === typeof e
                    })).forEach((function(t) {
                        e[t.toString(16)] = n
                    }));
                    return e
                })), vy = e((function(e, t, n) {
                    (e[n] = n, t[2]) && t[2].filter((function(e) {
                        return "string" === typeof e
                    })).forEach((function(t) {
                        e[t] = n
                    }));
                    return e
                })), yy = e((function(e, t, n) {
                    var r = t[2];
                    return e[n] = n, r.forEach((function(t) {
                        e[t] = n
                    })), e
                }));
                var t = "far" in cy || Og.autoFetchSvg,
                    n = ry(fy, (function(e, n) {
                        var r = n[0],
                            i = n[1],
                            a = n[2];
                        return "far" !== i || t || (i = "fas"), "string" === typeof r && (e.names[r] = {
                            prefix: i,
                            iconName: a
                        }), "number" === typeof r && (e.unicodes[r.toString(16)] = {
                            prefix: i,
                            iconName: a
                        }), e
                    }), {
                        names: {},
                        unicodes: {}
                    });
                my = n.names, gy = n.unicodes, hy = Ty(Og.styleDefault, {
                    family: Og.familyDefault
                })
            };

            function Sy(e, t) {
                return (py[e] || {})[t]
            }

            function My(e, t) {
                return (yy[e] || {})[t]
            }

            function ky(e) {
                return my[e] || {
                    prefix: null,
                    iconName: null
                }
            }

            function Ey() {
                return hy
            }
            _y = function(e) {
                hy = Ty(e.styleDefault, {
                    family: Og.familyDefault
                })
            }, Dg.push(_y), wy();

            function Ty(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = t.family,
                    r = void 0 === n ? dg : n,
                    i = mg[r][e],
                    a = gg[r][e] || gg[r][i],
                    o = e in $g.styles ? e : null;
                return a || o || null
            }
            var Ly = (zm(uy = {}, dg, Object.keys(yg.classic)), zm(uy, hg, Object.keys(yg.sharp)), uy);

            function Ay(e) {
                var t, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    r = n.skipLookups,
                    i = void 0 !== r && r,
                    a = (zm(t = {}, dg, "".concat(Og.cssPrefix, "-").concat(dg)), zm(t, hg, "".concat(Og.cssPrefix, "-").concat(hg)), t),
                    o = null,
                    s = dg;
                (e.includes(a.classic) || e.some((function(e) {
                    return Ly.classic.includes(e)
                }))) && (s = dg), (e.includes(a.sharp) || e.some((function(e) {
                    return Ly.sharp.includes(e)
                }))) && (s = hg);
                var l = e.reduce((function(e, t) {
                    var n = by(Og.cssPrefix, t);
                    if (cy[t] ? (t = dy[s].includes(t) ? xg[s][t] : t, o = t, e.prefix = t) : xy[s].indexOf(t) > -1 ? (o = t, e.prefix = Ty(t, {
                            family: s
                        })) : n ? e.iconName = n : t !== Og.replacementClass && t !== a.classic && t !== a.sharp && e.rest.push(t), !i && e.prefix && e.iconName) {
                        var r = "fa" === o ? ky(e.iconName) : {},
                            l = My(e.prefix, e.iconName);
                        r.prefix && (o = null), e.iconName = r.iconName || l || e.iconName, e.prefix = r.prefix || e.prefix, "far" !== e.prefix || cy.far || !cy.fas || Og.autoFetchSvg || (e.prefix = "fas")
                    }
                    return e
                }), {
                    prefix: null,
                    iconName: null,
                    rest: []
                });
                return (e.includes("fa-brands") || e.includes("fab")) && (l.prefix = "fab"), (e.includes("fa-duotone") || e.includes("fad")) && (l.prefix = "fad"), l.prefix || s !== hg || !cy.fass && !Og.autoFetchSvg || (l.prefix = "fass", l.iconName = My(l.prefix, l.iconName) || l.iconName), "fa" !== l.prefix && "fa" !== o || (l.prefix = Ey() || "fas"), l
            }
            var Cy = function() {
                    function e() {
                        ! function(e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, e), this.definitions = {}
                    }
                    var t, n, r;
                    return t = e, n = [{
                        key: "add",
                        value: function() {
                            for (var e = this, t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
                            var i = n.reduce(this._pullDefinitions, {});
                            Object.keys(i).forEach((function(t) {
                                e.definitions[t] = Rm(Rm({}, e.definitions[t] || {}), i[t]), oy(t, i[t]);
                                var n = yg.classic[t];
                                n && oy(n, i[t]), wy()
                            }))
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            this.definitions = {}
                        }
                    }, {
                        key: "_pullDefinitions",
                        value: function(e, t) {
                            var n = t.prefix && t.iconName && t.icon ? {
                                0: t
                            } : t;
                            return Object.keys(n).map((function(t) {
                                var r = n[t],
                                    i = r.prefix,
                                    a = r.iconName,
                                    o = r.icon,
                                    s = o[2];
                                e[i] || (e[i] = {}), s.length > 0 && s.forEach((function(t) {
                                    "string" === typeof t && (e[i][t] = o)
                                })), e[i][a] = o
                            })), e
                        }
                    }], n && Im(t.prototype, n), r && Im(t, r), Object.defineProperty(t, "prototype", {
                        writable: !1
                    }), e
                }(),
                Py = [],
                Ry = {},
                Ny = {},
                Iy = Object.keys(Ny);

            function zy(e, t) {
                for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) r[i - 2] = arguments[i];
                var a = Ry[e] || [];
                return a.forEach((function(e) {
                    t = e.apply(null, [t].concat(r))
                })), t
            }

            function Oy(e) {
                for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                var i = Ry[e] || [];
                i.forEach((function(e) {
                    e.apply(null, n)
                }))
            }

            function Dy() {
                var e = arguments[0],
                    t = Array.prototype.slice.call(arguments, 1);
                return Ny[e] ? Ny[e].apply(null, t) : void 0
            }

            function Fy(e) {
                "fa" === e.prefix && (e.prefix = "fas");
                var t = e.iconName,
                    n = e.prefix || Ey();
                if (t) return t = My(n, t) || t, ny(By.definitions, n, t) || ny($g.styles, n, t)
            }
            var By = new Cy,
                Uy = {
                    i2svg: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        return ng ? (Oy("beforeI2svg", e), Dy("pseudoElements2svg", e), Dy("i2svg", e)) : Promise.reject("Operation requires a DOM of some kind.")
                    },
                    watch: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.autoReplaceSvgRoot;
                        !1 === Og.autoReplaceSvg && (Og.autoReplaceSvg = !0), Og.observeMutations = !0, ey((function() {
                            Vy({
                                autoReplaceSvgRoot: t
                            }), Oy("watch", e)
                        }))
                    }
                },
                Hy = {
                    noAuto: function() {
                        Og.autoReplaceSvg = !1, Og.observeMutations = !1, Oy("noAuto")
                    },
                    config: Og,
                    dom: Uy,
                    parse: {
                        icon: function(e) {
                            if (null === e) return null;
                            if ("object" === Nm(e) && e.prefix && e.iconName) return {
                                prefix: e.prefix,
                                iconName: My(e.prefix, e.iconName) || e.iconName
                            };
                            if (Array.isArray(e) && 2 === e.length) {
                                var t = 0 === e[1].indexOf("fa-") ? e[1].slice(3) : e[1],
                                    n = Ty(e[0]);
                                return {
                                    prefix: n,
                                    iconName: My(n, t) || t
                                }
                            }
                            if ("string" === typeof e && (e.indexOf("".concat(Og.cssPrefix, "-")) > -1 || e.match(bg))) {
                                var r = Ay(e.split(" "), {
                                    skipLookups: !0
                                });
                                return {
                                    prefix: r.prefix || Ey(),
                                    iconName: My(r.prefix, r.iconName) || r.iconName
                                }
                            }
                            if ("string" === typeof e) {
                                var i = Ey();
                                return {
                                    prefix: i,
                                    iconName: My(i, e) || e
                                }
                            }
                        }
                    },
                    library: By,
                    findIconDefinition: Fy,
                    toHtml: ty
                },
                Vy = function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.autoReplaceSvgRoot,
                        n = void 0 === t ? Km : t;
                    (Object.keys($g.styles).length > 0 || Og.autoFetchSvg) && ng && Og.autoReplaceSvg && Hy.dom.i2svg({
                        node: n
                    })
                };

            function Gy(e, t) {
                return Object.defineProperty(e, "abstract", {
                    get: t
                }), Object.defineProperty(e, "html", {
                    get: function() {
                        return e.abstract.map((function(e) {
                            return ty(e)
                        }))
                    }
                }), Object.defineProperty(e, "node", {
                    get: function() {
                        if (ng) {
                            var t = Km.createElement("div");
                            return t.innerHTML = e.html, t.children
                        }
                    }
                }), e
            }

            function Wy(e) {
                var t = e.icons,
                    n = t.main,
                    r = t.mask,
                    i = e.prefix,
                    a = e.iconName,
                    o = e.transform,
                    s = e.symbol,
                    l = e.title,
                    u = e.maskId,
                    c = e.titleId,
                    f = e.extra,
                    d = e.watchable,
                    h = void 0 !== d && d,
                    p = r.found ? r : n,
                    v = p.width,
                    m = p.height,
                    g = "fak" === i,
                    y = [Og.replacementClass, a ? "".concat(Og.cssPrefix, "-").concat(a) : ""].filter((function(e) {
                        return -1 === f.classes.indexOf(e)
                    })).filter((function(e) {
                        return "" !== e || !!e
                    })).concat(f.classes).join(" "),
                    x = {
                        children: [],
                        attributes: Rm(Rm({}, f.attributes), {}, {
                            "data-prefix": i,
                            "data-icon": a,
                            class: y,
                            role: f.attributes.role || "img",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 ".concat(v, " ").concat(m)
                        })
                    },
                    b = g && !~f.classes.indexOf("fa-fw") ? {
                        width: "".concat(v / m * 16 * .0625, "em")
                    } : {};
                h && (x.attributes[ag] = ""), l && (x.children.push({
                    tag: "title",
                    attributes: {
                        id: x.attributes["aria-labelledby"] || "title-".concat(c || Ug())
                    },
                    children: [l]
                }), delete x.attributes.title);
                var _ = Rm(Rm({}, x), {}, {
                        prefix: i,
                        iconName: a,
                        main: n,
                        mask: r,
                        maskId: u,
                        transform: o,
                        symbol: s,
                        styles: Rm(Rm({}, b), f.styles)
                    }),
                    w = r.found && n.found ? Dy("generateAbstractMask", _) || {
                        children: [],
                        attributes: {}
                    } : Dy("generateAbstractIcon", _) || {
                        children: [],
                        attributes: {}
                    },
                    S = w.children,
                    M = w.attributes;
                return _.children = S, _.attributes = M, s ? function(e) {
                    var t = e.prefix,
                        n = e.iconName,
                        r = e.children,
                        i = e.attributes,
                        a = e.symbol,
                        o = !0 === a ? "".concat(t, "-").concat(Og.cssPrefix, "-").concat(n) : a;
                    return [{
                        tag: "svg",
                        attributes: {
                            style: "display: none;"
                        },
                        children: [{
                            tag: "symbol",
                            attributes: Rm(Rm({}, i), {}, {
                                id: o
                            }),
                            children: r
                        }]
                    }]
                }(_) : function(e) {
                    var t = e.children,
                        n = e.main,
                        r = e.mask,
                        i = e.attributes,
                        a = e.styles,
                        o = e.transform;
                    if (jg(o) && n.found && !r.found) {
                        var s = {
                            x: n.width / n.height / 2,
                            y: .5
                        };
                        i.style = Wg(Rm(Rm({}, a), {}, {
                            "transform-origin": "".concat(s.x + o.x / 16, "em ").concat(s.y + o.y / 16, "em")
                        }))
                    }
                    return [{
                        tag: "svg",
                        attributes: i,
                        children: t
                    }]
                }(_)
            }

            function jy(e) {
                var t = e.content,
                    n = e.width,
                    r = e.height,
                    i = e.transform,
                    a = e.title,
                    o = e.extra,
                    s = e.watchable,
                    l = void 0 !== s && s,
                    u = Rm(Rm(Rm({}, o.attributes), a ? {
                        title: a
                    } : {}), {}, {
                        class: o.classes.join(" ")
                    });
                l && (u[ag] = "");
                var c = Rm({}, o.styles);
                jg(i) && (c.transform = function(e) {
                    var t = e.transform,
                        n = e.width,
                        r = void 0 === n ? 16 : n,
                        i = e.height,
                        a = void 0 === i ? 16 : i,
                        o = e.startCentered,
                        s = void 0 !== o && o,
                        l = "";
                    return l += s && rg ? "translate(".concat(t.x / Fg - r / 2, "em, ").concat(t.y / Fg - a / 2, "em) ") : s ? "translate(calc(-50% + ".concat(t.x / Fg, "em), calc(-50% + ").concat(t.y / Fg, "em)) ") : "translate(".concat(t.x / Fg, "em, ").concat(t.y / Fg, "em) "), l += "scale(".concat(t.size / Fg * (t.flipX ? -1 : 1), ", ").concat(t.size / Fg * (t.flipY ? -1 : 1), ") "), l + "rotate(".concat(t.rotate, "deg) ")
                }({
                    transform: i,
                    startCentered: !0,
                    width: n,
                    height: r
                }), c["-webkit-transform"] = c.transform);
                var f = Wg(c);
                f.length > 0 && (u.style = f);
                var d = [];
                return d.push({
                    tag: "span",
                    attributes: u,
                    children: [t]
                }), a && d.push({
                    tag: "span",
                    attributes: {
                        class: "sr-only"
                    },
                    children: [a]
                }), d
            }

            function qy(e) {
                var t = e.content,
                    n = e.title,
                    r = e.extra,
                    i = Rm(Rm(Rm({}, r.attributes), n ? {
                        title: n
                    } : {}), {}, {
                        class: r.classes.join(" ")
                    }),
                    a = Wg(r.styles);
                a.length > 0 && (i.style = a);
                var o = [];
                return o.push({
                    tag: "span",
                    attributes: i,
                    children: [t]
                }), n && o.push({
                    tag: "span",
                    attributes: {
                        class: "sr-only"
                    },
                    children: [n]
                }), o
            }
            var Xy = $g.styles;

            function Yy(e) {
                var t = e[0],
                    n = e[1],
                    r = Om(e.slice(4), 1)[0];
                return {
                    found: !0,
                    width: t,
                    height: n,
                    icon: Array.isArray(r) ? {
                        tag: "g",
                        attributes: {
                            class: "".concat(Og.cssPrefix, "-").concat(Tg)
                        },
                        children: [{
                            tag: "path",
                            attributes: {
                                class: "".concat(Og.cssPrefix, "-").concat(Cg),
                                fill: "currentColor",
                                d: r[0]
                            }
                        }, {
                            tag: "path",
                            attributes: {
                                class: "".concat(Og.cssPrefix, "-").concat(Ag),
                                fill: "currentColor",
                                d: r[1]
                            }
                        }]
                    } : {
                        tag: "path",
                        attributes: {
                            fill: "currentColor",
                            d: r
                        }
                    }
                }
            }
            var Zy = {
                found: !1,
                width: 512,
                height: 512
            };

            function Jy(e, t) {
                var n = t;
                return "fa" === t && null !== Og.styleDefault && (t = Ey()), new Promise((function(r, i) {
                    Dy("missingIconAbstract");
                    if ("fa" === n) {
                        var a = ky(e) || {};
                        e = a.iconName || e, t = a.prefix || t
                    }
                    if (e && t && Xy[t] && Xy[t][e]) return r(Yy(Xy[t][e]));
                    ! function(e, t) {
                        fg || Og.showMissingIcons || !e || console.error('Icon with name "'.concat(e, '" and prefix "').concat(t, '" is missing.'))
                    }(e, t), r(Rm(Rm({}, Zy), {}, {
                        icon: Og.showMissingIcons && e && Dy("missingIconAbstract") || {}
                    }))
                }))
            }
            var $y = function() {},
                Qy = Og.measurePerformance && tg && tg.mark && tg.measure ? tg : {
                    mark: $y,
                    measure: $y
                },
                Ky = 'FA "6.2.1"',
                ex = function(e) {
                    Qy.mark("".concat(Ky, " ").concat(e, " ends")), Qy.measure("".concat(Ky, " ").concat(e), "".concat(Ky, " ").concat(e, " begins"), "".concat(Ky, " ").concat(e, " ends"))
                },
                tx = function(e) {
                    return Qy.mark("".concat(Ky, " ").concat(e, " begins")),
                        function() {
                            return ex(e)
                        }
                },
                nx = function() {};

            function rx(e) {
                return "string" === typeof(e.getAttribute ? e.getAttribute(ag) : null)
            }

            function ix(e) {
                return Km.createElementNS("http://www.w3.org/2000/svg", e)
            }

            function ax(e) {
                return Km.createElement(e)
            }

            function ox(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    n = t.ceFn,
                    r = void 0 === n ? "svg" === e.tag ? ix : ax : n;
                if ("string" === typeof e) return Km.createTextNode(e);
                var i = r(e.tag);
                Object.keys(e.attributes || []).forEach((function(t) {
                    i.setAttribute(t, e.attributes[t])
                }));
                var a = e.children || [];
                return a.forEach((function(e) {
                    i.appendChild(ox(e, {
                        ceFn: r
                    }))
                })), i
            }
            var sx = {
                replace: function(e) {
                    var t = e[0];
                    if (t.parentNode)
                        if (e[1].forEach((function(e) {
                                t.parentNode.insertBefore(ox(e), t)
                            })), null === t.getAttribute(ag) && Og.keepOriginalSource) {
                            var n = Km.createComment(function(e) {
                                var t = " ".concat(e.outerHTML, " ");
                                return "".concat(t, "Font Awesome fontawesome.com ")
                            }(t));
                            t.parentNode.replaceChild(n, t)
                        } else t.remove()
                },
                nest: function(e) {
                    var t = e[0],
                        n = e[1];
                    if (~Vg(t).indexOf(Og.replacementClass)) return sx.replace(e);
                    var r = new RegExp("".concat(Og.cssPrefix, "-.*"));
                    if (delete n[0].attributes.id, n[0].attributes.class) {
                        var i = n[0].attributes.class.split(" ").reduce((function(e, t) {
                            return t === Og.replacementClass || t.match(r) ? e.toSvg.push(t) : e.toNode.push(t), e
                        }), {
                            toNode: [],
                            toSvg: []
                        });
                        n[0].attributes.class = i.toSvg.join(" "), 0 === i.toNode.length ? t.removeAttribute("class") : t.setAttribute("class", i.toNode.join(" "))
                    }
                    var a = n.map((function(e) {
                        return ty(e)
                    })).join("\n");
                    t.setAttribute(ag, ""), t.innerHTML = a
                }
            };

            function lx(e) {
                e()
            }

            function ux(e, t) {
                var n = "function" === typeof t ? t : nx;
                if (0 === e.length) n();
                else {
                    var r = lx;
                    "async" === Og.mutateApproach && (r = Qm.requestAnimationFrame || lx), r((function() {
                        var t = !0 === Og.autoReplaceSvg ? sx.replace : sx[Og.autoReplaceSvg] || sx.replace,
                            r = tx("mutate");
                        e.map(t), r(), n()
                    }))
                }
            }
            var cx = !1;

            function fx() {
                cx = !0
            }

            function dx() {
                cx = !1
            }
            var hx = null;

            function px(e) {
                if (eg && Og.observeMutations) {
                    var t = e.treeCallback,
                        n = void 0 === t ? nx : t,
                        r = e.nodeCallback,
                        i = void 0 === r ? nx : r,
                        a = e.pseudoElementsCallback,
                        o = void 0 === a ? nx : a,
                        s = e.observeMutationsRoot,
                        l = void 0 === s ? Km : s;
                    hx = new eg((function(e) {
                        if (!cx) {
                            var t = Ey();
                            Hg(e).forEach((function(e) {
                                if ("childList" === e.type && e.addedNodes.length > 0 && !rx(e.addedNodes[0]) && (Og.searchPseudoElements && o(e.target), n(e.target)), "attributes" === e.type && e.target.parentNode && Og.searchPseudoElements && o(e.target.parentNode), "attributes" === e.type && rx(e.target) && ~Eg.indexOf(e.attributeName))
                                    if ("class" === e.attributeName && function(e) {
                                            var t = e.getAttribute ? e.getAttribute(sg) : null,
                                                n = e.getAttribute ? e.getAttribute(lg) : null;
                                            return t && n
                                        }(e.target)) {
                                        var r = Ay(Vg(e.target)),
                                            a = r.prefix,
                                            s = r.iconName;
                                        e.target.setAttribute(sg, a || t), s && e.target.setAttribute(lg, s)
                                    } else(function(e) {
                                        return e && e.classList && e.classList.contains && e.classList.contains(Og.replacementClass)
                                    })(e.target) && i(e.target)
                            }))
                        }
                    })), ng && hx.observe(l, {
                        childList: !0,
                        attributes: !0,
                        characterData: !0,
                        subtree: !0
                    })
                }
            }

            function vx(e) {
                var t = e.getAttribute("style"),
                    n = [];
                return t && (n = t.split(";").reduce((function(e, t) {
                    var n = t.split(":"),
                        r = n[0],
                        i = n.slice(1);
                    return r && i.length > 0 && (e[r] = i.join(":").trim()), e
                }), {})), n
            }

            function mx(e) {
                var t = e.getAttribute("data-prefix"),
                    n = e.getAttribute("data-icon"),
                    r = void 0 !== e.innerText ? e.innerText.trim() : "",
                    i = Ay(Vg(e));
                return i.prefix || (i.prefix = Ey()), t && n && (i.prefix = t, i.iconName = n), i.iconName && i.prefix || (i.prefix && r.length > 0 && (i.iconName = function(e, t) {
                    return (vy[e] || {})[t]
                }(i.prefix, e.innerText) || Sy(i.prefix, iy(e.innerText))), !i.iconName && Og.autoFetchSvg && e.firstChild && e.firstChild.nodeType === Node.TEXT_NODE && (i.iconName = e.firstChild.data)), i
            }

            function gx(e) {
                var t = Hg(e.attributes).reduce((function(e, t) {
                        return "class" !== e.name && "style" !== e.name && (e[t.name] = t.value), e
                    }), {}),
                    n = e.getAttribute("title"),
                    r = e.getAttribute("data-fa-title-id");
                return Og.autoA11y && (n ? t["aria-labelledby"] = "".concat(Og.replacementClass, "-title-").concat(r || Ug()) : (t["aria-hidden"] = "true", t.focusable = "false")), t
            }

            function yx(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                        styleParser: !0
                    },
                    n = mx(e),
                    r = n.iconName,
                    i = n.prefix,
                    a = n.rest,
                    o = gx(e),
                    s = zy("parseNodeAttributes", {}, e),
                    l = t.styleParser ? vx(e) : [];
                return Rm({
                    iconName: r,
                    title: e.getAttribute("title"),
                    titleId: e.getAttribute("data-fa-title-id"),
                    prefix: i,
                    transform: Bg,
                    mask: {
                        iconName: null,
                        prefix: null,
                        rest: []
                    },
                    maskId: null,
                    symbol: !1,
                    extra: {
                        classes: a,
                        styles: l,
                        attributes: o
                    }
                }, s)
            }
            var xx = $g.styles;

            function bx(e) {
                var t = "nest" === Og.autoReplaceSvg ? yx(e, {
                    styleParser: !1
                }) : yx(e);
                return ~t.extra.classes.indexOf(_g) ? Dy("generateLayersText", e, t) : Dy("generateSvgReplacementMutation", e, t)
            }
            var _x = new Set;

            function wx(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                if (!ng) return Promise.resolve();
                var n = Km.documentElement.classList,
                    r = function(e) {
                        return n.add("".concat(ug, "-").concat(e))
                    },
                    i = function(e) {
                        return n.remove("".concat(ug, "-").concat(e))
                    },
                    a = Og.autoFetchSvg ? _x : pg.map((function(e) {
                        return "fa-".concat(e)
                    })).concat(Object.keys(xx));
                a.includes("fa") || a.push("fa");
                var o = [".".concat(_g, ":not([").concat(ag, "])")].concat(a.map((function(e) {
                    return ".".concat(e, ":not([").concat(ag, "])")
                }))).join(", ");
                if (0 === o.length) return Promise.resolve();
                var s = [];
                try {
                    s = Hg(e.querySelectorAll(o))
                } catch (bm) {}
                if (!(s.length > 0)) return Promise.resolve();
                r("pending"), i("complete");
                var l = tx("onTree"),
                    u = s.reduce((function(e, t) {
                        try {
                            var n = bx(t);
                            n && e.push(n)
                        } catch (bm) {
                            fg || "MissingIcon" === bm.name && console.error(bm)
                        }
                        return e
                    }), []);
                return new Promise((function(e, n) {
                    Promise.all(u).then((function(n) {
                        ux(n, (function() {
                            r("active"), r("complete"), i("pending"), "function" === typeof t && t(), l(), e()
                        }))
                    })).catch((function(e) {
                        l(), n(e)
                    }))
                }))
            }

            function Sx(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                bx(e).then((function(e) {
                    e && ux([e], t)
                }))
            }

            function Mx(e) {
                return function(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        r = (t || {}).icon ? t : Fy(t || {}),
                        i = n.mask;
                    return i && (i = (i || {}).icon ? i : Fy(i || {})), e(r, Rm(Rm({}, n), {}, {
                        mask: i
                    }))
                }
            }
            pg.map((function(e) {
                _x.add("fa-".concat(e))
            })), Object.keys(mg.classic).map(_x.add.bind(_x)), Object.keys(mg.sharp).map(_x.add.bind(_x)), _x = Dm(_x);
            var kx = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        n = t.transform,
                        r = void 0 === n ? Bg : n,
                        i = t.symbol,
                        a = void 0 !== i && i,
                        o = t.mask,
                        s = void 0 === o ? null : o,
                        l = t.maskId,
                        u = void 0 === l ? null : l,
                        c = t.title,
                        f = void 0 === c ? null : c,
                        d = t.titleId,
                        h = void 0 === d ? null : d,
                        p = t.classes,
                        v = void 0 === p ? [] : p,
                        m = t.attributes,
                        g = void 0 === m ? {} : m,
                        y = t.styles,
                        x = void 0 === y ? {} : y;
                    if (e) {
                        var b = e.prefix,
                            _ = e.iconName,
                            w = e.icon;
                        return Gy(Rm({
                            type: "icon"
                        }, e), (function() {
                            return Oy("beforeDOMElementCreation", {
                                iconDefinition: e,
                                params: t
                            }), Og.autoA11y && (f ? g["aria-labelledby"] = "".concat(Og.replacementClass, "-title-").concat(h || Ug()) : (g["aria-hidden"] = "true", g.focusable = "false")), Wy({
                                icons: {
                                    main: Yy(w),
                                    mask: s ? Yy(s.icon) : {
                                        found: !1,
                                        width: null,
                                        height: null,
                                        icon: {}
                                    }
                                },
                                prefix: b,
                                iconName: _,
                                transform: Rm(Rm({}, Bg), r),
                                symbol: a,
                                title: f,
                                maskId: u,
                                titleId: h,
                                extra: {
                                    attributes: g,
                                    styles: x,
                                    classes: v
                                }
                            })
                        }))
                    }
                },
                Ex = {
                    mixout: function() {
                        return {
                            icon: Mx(kx)
                        }
                    },
                    hooks: function() {
                        return {
                            mutationObserverCallbacks: function(e) {
                                return e.treeCallback = wx, e.nodeCallback = Sx, e
                            }
                        }
                    },
                    provides: function(e) {
                        e.i2svg = function(e) {
                            var t = e.node,
                                n = void 0 === t ? Km : t,
                                r = e.callback;
                            return wx(n, void 0 === r ? function() {} : r)
                        }, e.generateSvgReplacementMutation = function(e, t) {
                            var n = t.iconName,
                                r = t.title,
                                i = t.titleId,
                                a = t.prefix,
                                o = t.transform,
                                s = t.symbol,
                                l = t.mask,
                                u = t.maskId,
                                c = t.extra;
                            return new Promise((function(t, f) {
                                Promise.all([Jy(n, a), l.iconName ? Jy(l.iconName, l.prefix) : Promise.resolve({
                                    found: !1,
                                    width: 512,
                                    height: 512,
                                    icon: {}
                                })]).then((function(l) {
                                    var f = Om(l, 2),
                                        d = f[0],
                                        h = f[1];
                                    t([e, Wy({
                                        icons: {
                                            main: d,
                                            mask: h
                                        },
                                        prefix: a,
                                        iconName: n,
                                        transform: o,
                                        symbol: s,
                                        maskId: u,
                                        title: r,
                                        titleId: i,
                                        extra: c,
                                        watchable: !0
                                    })])
                                })).catch(f)
                            }))
                        }, e.generateAbstractIcon = function(e) {
                            var t, n = e.children,
                                r = e.attributes,
                                i = e.main,
                                a = e.transform,
                                o = Wg(e.styles);
                            return o.length > 0 && (r.style = o), jg(a) && (t = Dy("generateAbstractTransformGrouping", {
                                main: i,
                                transform: a,
                                containerWidth: i.width,
                                iconWidth: i.width
                            })), n.push(t || i.icon), {
                                children: n,
                                attributes: r
                            }
                        }
                    }
                },
                Tx = {
                    mixout: function() {
                        return {
                            layer: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    n = t.classes,
                                    r = void 0 === n ? [] : n;
                                return Gy({
                                    type: "layer"
                                }, (function() {
                                    Oy("beforeDOMElementCreation", {
                                        assembler: e,
                                        params: t
                                    });
                                    var n = [];
                                    return e((function(e) {
                                        Array.isArray(e) ? e.map((function(e) {
                                            n = n.concat(e.abstract)
                                        })) : n = n.concat(e.abstract)
                                    })), [{
                                        tag: "span",
                                        attributes: {
                                            class: ["".concat(Og.cssPrefix, "-layers")].concat(Dm(r)).join(" ")
                                        },
                                        children: n
                                    }]
                                }))
                            }
                        }
                    }
                },
                Lx = {
                    mixout: function() {
                        return {
                            counter: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    n = t.title,
                                    r = void 0 === n ? null : n,
                                    i = t.classes,
                                    a = void 0 === i ? [] : i,
                                    o = t.attributes,
                                    s = void 0 === o ? {} : o,
                                    l = t.styles,
                                    u = void 0 === l ? {} : l;
                                return Gy({
                                    type: "counter",
                                    content: e
                                }, (function() {
                                    return Oy("beforeDOMElementCreation", {
                                        content: e,
                                        params: t
                                    }), qy({
                                        content: e.toString(),
                                        title: r,
                                        extra: {
                                            attributes: s,
                                            styles: u,
                                            classes: ["".concat(Og.cssPrefix, "-layers-counter")].concat(Dm(a))
                                        }
                                    })
                                }))
                            }
                        }
                    }
                },
                Ax = {
                    mixout: function() {
                        return {
                            text: function(e) {
                                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                    n = t.transform,
                                    r = void 0 === n ? Bg : n,
                                    i = t.title,
                                    a = void 0 === i ? null : i,
                                    o = t.classes,
                                    s = void 0 === o ? [] : o,
                                    l = t.attributes,
                                    u = void 0 === l ? {} : l,
                                    c = t.styles,
                                    f = void 0 === c ? {} : c;
                                return Gy({
                                    type: "text",
                                    content: e
                                }, (function() {
                                    return Oy("beforeDOMElementCreation", {
                                        content: e,
                                        params: t
                                    }), jy({
                                        content: e,
                                        transform: Rm(Rm({}, Bg), r),
                                        title: a,
                                        extra: {
                                            attributes: u,
                                            styles: f,
                                            classes: ["".concat(Og.cssPrefix, "-layers-text")].concat(Dm(s))
                                        }
                                    })
                                }))
                            }
                        }
                    },
                    provides: function(e) {
                        e.generateLayersText = function(e, t) {
                            var n = t.title,
                                r = t.transform,
                                i = t.extra,
                                a = null,
                                o = null;
                            if (rg) {
                                var s = parseInt(getComputedStyle(e).fontSize, 10),
                                    l = e.getBoundingClientRect();
                                a = l.width / s, o = l.height / s
                            }
                            return Og.autoA11y && !n && (i.attributes["aria-hidden"] = "true"), Promise.resolve([e, jy({
                                content: e.innerHTML,
                                width: a,
                                height: o,
                                transform: r,
                                title: n,
                                extra: i,
                                watchable: !0
                            })])
                        }
                    }
                },
                Cx = new RegExp('"', "ug"),
                Px = [1105920, 1112319];

            function Rx(e, t) {
                var n = "".concat("data-fa-pseudo-element-pending").concat(t.replace(":", "-"));
                return new Promise((function(r, i) {
                    if (null !== e.getAttribute(n)) return r();
                    var a = Hg(e.children).filter((function(e) {
                            return e.getAttribute(og) === t
                        }))[0],
                        o = Qm.getComputedStyle(e, t),
                        s = o.getPropertyValue("font-family").match(wg),
                        l = o.getPropertyValue("font-weight"),
                        u = o.getPropertyValue("content");
                    if (a && !s) return e.removeChild(a), r();
                    if (s && "none" !== u && "" !== u) {
                        var c = o.getPropertyValue("content"),
                            f = ~["Sharp"].indexOf(s[2]) ? hg : dg,
                            d = ~["Solid", "Regular", "Light", "Thin", "Duotone", "Brands", "Kit"].indexOf(s[2]) ? gg[f][s[2].toLowerCase()] : Sg[f][l],
                            h = function(e) {
                                var t = e.replace(Cx, ""),
                                    n = function(e, t) {
                                        var n, r = e.length,
                                            i = e.charCodeAt(t);
                                        return i >= 55296 && i <= 56319 && r > t + 1 && (n = e.charCodeAt(t + 1)) >= 56320 && n <= 57343 ? 1024 * (i - 55296) + n - 56320 + 65536 : i
                                    }(t, 0),
                                    r = n >= Px[0] && n <= Px[1],
                                    i = 2 === t.length && t[0] === t[1];
                                return {
                                    value: iy(i ? t[0] : t),
                                    isSecondary: r || i
                                }
                            }(c),
                            p = h.value,
                            v = h.isSecondary,
                            m = s[0].startsWith("FontAwesome"),
                            g = Sy(d, p),
                            y = g;
                        if (m) {
                            var x = function(e) {
                                var t = gy[e],
                                    n = Sy("fas", e);
                                return t || (n ? {
                                    prefix: "fas",
                                    iconName: n
                                } : null) || {
                                    prefix: null,
                                    iconName: null
                                }
                            }(p);
                            x.iconName && x.prefix && (g = x.iconName, d = x.prefix)
                        }
                        if (!g || v || a && a.getAttribute(sg) === d && a.getAttribute(lg) === y) r();
                        else {
                            e.setAttribute(n, y), a && e.removeChild(a);
                            var b = {
                                    iconName: null,
                                    title: null,
                                    titleId: null,
                                    prefix: null,
                                    transform: Bg,
                                    symbol: !1,
                                    mask: {
                                        iconName: null,
                                        prefix: null,
                                        rest: []
                                    },
                                    maskId: null,
                                    extra: {
                                        classes: [],
                                        styles: {},
                                        attributes: {}
                                    }
                                },
                                _ = b.extra;
                            _.attributes[og] = t, Jy(g, d).then((function(i) {
                                var a = Wy(Rm(Rm({}, b), {}, {
                                        icons: {
                                            main: i,
                                            mask: {
                                                prefix: null,
                                                iconName: null,
                                                rest: []
                                            }
                                        },
                                        prefix: d,
                                        iconName: y,
                                        extra: _,
                                        watchable: !0
                                    })),
                                    o = Km.createElement("svg");
                                "::before" === t ? e.insertBefore(o, e.firstChild) : e.appendChild(o), o.outerHTML = a.map((function(e) {
                                    return ty(e)
                                })).join("\n"), e.removeAttribute(n), r()
                            })).catch(i)
                        }
                    } else r()
                }))
            }

            function Nx(e) {
                return Promise.all([Rx(e, "::before"), Rx(e, "::after")])
            }

            function Ix(e) {
                return e.parentNode !== document.head && !~cg.indexOf(e.tagName.toUpperCase()) && !e.getAttribute(og) && (!e.parentNode || "svg" !== e.parentNode.tagName)
            }

            function zx(e) {
                if (ng) return new Promise((function(t, n) {
                    var r = Hg(e.querySelectorAll("*")).filter(Ix).map(Nx),
                        i = tx("searchPseudoElements");
                    fx(), Promise.all(r).then((function() {
                        i(), dx(), t()
                    })).catch((function() {
                        i(), dx(), n()
                    }))
                }))
            }
            var Ox = {
                    hooks: function() {
                        return {
                            mutationObserverCallbacks: function(e) {
                                return e.pseudoElementsCallback = zx, e
                            }
                        }
                    },
                    provides: function(e) {
                        e.pseudoElements2svg = function(e) {
                            var t = e.node,
                                n = void 0 === t ? Km : t;
                            Og.searchPseudoElements && zx(n)
                        }
                    }
                },
                Dx = !1,
                Fx = function(e) {
                    return e.toLowerCase().split(" ").reduce((function(e, t) {
                        var n = t.toLowerCase().split("-"),
                            r = n[0],
                            i = n.slice(1).join("-");
                        if (r && "h" === i) return e.flipX = !0, e;
                        if (r && "v" === i) return e.flipY = !0, e;
                        if (i = parseFloat(i), isNaN(i)) return e;
                        switch (r) {
                            case "grow":
                                e.size = e.size + i;
                                break;
                            case "shrink":
                                e.size = e.size - i;
                                break;
                            case "left":
                                e.x = e.x - i;
                                break;
                            case "right":
                                e.x = e.x + i;
                                break;
                            case "up":
                                e.y = e.y - i;
                                break;
                            case "down":
                                e.y = e.y + i;
                                break;
                            case "rotate":
                                e.rotate = e.rotate + i
                        }
                        return e
                    }), {
                        size: 16,
                        x: 0,
                        y: 0,
                        flipX: !1,
                        flipY: !1,
                        rotate: 0
                    })
                },
                Bx = {
                    mixout: function() {
                        return {
                            parse: {
                                transform: function(e) {
                                    return Fx(e)
                                }
                            }
                        }
                    },
                    hooks: function() {
                        return {
                            parseNodeAttributes: function(e, t) {
                                var n = t.getAttribute("data-fa-transform");
                                return n && (e.transform = Fx(n)), e
                            }
                        }
                    },
                    provides: function(e) {
                        e.generateAbstractTransformGrouping = function(e) {
                            var t = e.main,
                                n = e.transform,
                                r = e.containerWidth,
                                i = e.iconWidth,
                                a = {
                                    transform: "translate(".concat(r / 2, " 256)")
                                },
                                o = "translate(".concat(32 * n.x, ", ").concat(32 * n.y, ") "),
                                s = "scale(".concat(n.size / 16 * (n.flipX ? -1 : 1), ", ").concat(n.size / 16 * (n.flipY ? -1 : 1), ") "),
                                l = "rotate(".concat(n.rotate, " 0 0)"),
                                u = {
                                    outer: a,
                                    inner: {
                                        transform: "".concat(o, " ").concat(s, " ").concat(l)
                                    },
                                    path: {
                                        transform: "translate(".concat(i / 2 * -1, " -256)")
                                    }
                                };
                            return {
                                tag: "g",
                                attributes: Rm({}, u.outer),
                                children: [{
                                    tag: "g",
                                    attributes: Rm({}, u.inner),
                                    children: [{
                                        tag: t.icon.tag,
                                        children: t.icon.children,
                                        attributes: Rm(Rm({}, t.icon.attributes), u.path)
                                    }]
                                }]
                            }
                        }
                    }
                },
                Ux = {
                    x: 0,
                    y: 0,
                    width: "100%",
                    height: "100%"
                };

            function Hx(e) {
                var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                return e.attributes && (e.attributes.fill || t) && (e.attributes.fill = "black"), e
            }
            var Vx = {
                    hooks: function() {
                        return {
                            parseNodeAttributes: function(e, t) {
                                var n = t.getAttribute("data-fa-mask"),
                                    r = n ? Ay(n.split(" ").map((function(e) {
                                        return e.trim()
                                    }))) : {
                                        prefix: null,
                                        iconName: null,
                                        rest: []
                                    };
                                return r.prefix || (r.prefix = Ey()), e.mask = r, e.maskId = t.getAttribute("data-fa-mask-id"), e
                            }
                        }
                    },
                    provides: function(e) {
                        e.generateAbstractMask = function(e) {
                            var t, n = e.children,
                                r = e.attributes,
                                i = e.main,
                                a = e.mask,
                                o = e.maskId,
                                s = e.transform,
                                l = i.width,
                                u = i.icon,
                                c = a.width,
                                f = a.icon,
                                d = function(e) {
                                    var t = e.transform,
                                        n = e.containerWidth,
                                        r = e.iconWidth,
                                        i = {
                                            transform: "translate(".concat(n / 2, " 256)")
                                        },
                                        a = "translate(".concat(32 * t.x, ", ").concat(32 * t.y, ") "),
                                        o = "scale(".concat(t.size / 16 * (t.flipX ? -1 : 1), ", ").concat(t.size / 16 * (t.flipY ? -1 : 1), ") "),
                                        s = "rotate(".concat(t.rotate, " 0 0)");
                                    return {
                                        outer: i,
                                        inner: {
                                            transform: "".concat(a, " ").concat(o, " ").concat(s)
                                        },
                                        path: {
                                            transform: "translate(".concat(r / 2 * -1, " -256)")
                                        }
                                    }
                                }({
                                    transform: s,
                                    containerWidth: c,
                                    iconWidth: l
                                }),
                                h = {
                                    tag: "rect",
                                    attributes: Rm(Rm({}, Ux), {}, {
                                        fill: "white"
                                    })
                                },
                                p = u.children ? {
                                    children: u.children.map(Hx)
                                } : {},
                                v = {
                                    tag: "g",
                                    attributes: Rm({}, d.inner),
                                    children: [Hx(Rm({
                                        tag: u.tag,
                                        attributes: Rm(Rm({}, u.attributes), d.path)
                                    }, p))]
                                },
                                m = {
                                    tag: "g",
                                    attributes: Rm({}, d.outer),
                                    children: [v]
                                },
                                g = "mask-".concat(o || Ug()),
                                y = "clip-".concat(o || Ug()),
                                x = {
                                    tag: "mask",
                                    attributes: Rm(Rm({}, Ux), {}, {
                                        id: g,
                                        maskUnits: "userSpaceOnUse",
                                        maskContentUnits: "userSpaceOnUse"
                                    }),
                                    children: [h, m]
                                },
                                b = {
                                    tag: "defs",
                                    children: [{
                                        tag: "clipPath",
                                        attributes: {
                                            id: y
                                        },
                                        children: (t = f, "g" === t.tag ? t.children : [t])
                                    }, x]
                                };
                            return n.push(b, {
                                tag: "rect",
                                attributes: Rm({
                                    fill: "currentColor",
                                    "clip-path": "url(#".concat(y, ")"),
                                    mask: "url(#".concat(g, ")")
                                }, Ux)
                            }), {
                                children: n,
                                attributes: r
                            }
                        }
                    }
                },
                Gx = {
                    provides: function(e) {
                        var t = !1;
                        Qm.matchMedia && (t = Qm.matchMedia("(prefers-reduced-motion: reduce)").matches), e.missingIconAbstract = function() {
                            var e = [],
                                n = {
                                    fill: "currentColor"
                                },
                                r = {
                                    attributeType: "XML",
                                    repeatCount: "indefinite",
                                    dur: "2s"
                                };
                            e.push({
                                tag: "path",
                                attributes: Rm(Rm({}, n), {}, {
                                    d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
                                })
                            });
                            var i = Rm(Rm({}, r), {}, {
                                    attributeName: "opacity"
                                }),
                                a = {
                                    tag: "circle",
                                    attributes: Rm(Rm({}, n), {}, {
                                        cx: "256",
                                        cy: "364",
                                        r: "28"
                                    }),
                                    children: []
                                };
                            return t || a.children.push({
                                tag: "animate",
                                attributes: Rm(Rm({}, r), {}, {
                                    attributeName: "r",
                                    values: "28;14;28;28;14;28;"
                                })
                            }, {
                                tag: "animate",
                                attributes: Rm(Rm({}, i), {}, {
                                    values: "1;0;1;1;0;1;"
                                })
                            }), e.push(a), e.push({
                                tag: "path",
                                attributes: Rm(Rm({}, n), {}, {
                                    opacity: "1",
                                    d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
                                }),
                                children: t ? [] : [{
                                    tag: "animate",
                                    attributes: Rm(Rm({}, i), {}, {
                                        values: "1;0;0;0;0;1;"
                                    })
                                }]
                            }), t || e.push({
                                tag: "path",
                                attributes: Rm(Rm({}, n), {}, {
                                    opacity: "0",
                                    d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
                                }),
                                children: [{
                                    tag: "animate",
                                    attributes: Rm(Rm({}, i), {}, {
                                        values: "0;0;1;1;0;0;"
                                    })
                                }]
                            }), {
                                tag: "g",
                                attributes: {
                                    class: "missing"
                                },
                                children: e
                            }
                        }
                    }
                },
                Wx = [Zg, Ex, Tx, Lx, Ax, Ox, {
                    mixout: function() {
                        return {
                            dom: {
                                unwatch: function() {
                                    fx(), Dx = !0
                                }
                            }
                        }
                    },
                    hooks: function() {
                        return {
                            bootstrap: function() {
                                px(zy("mutationObserverCallbacks", {}))
                            },
                            noAuto: function() {
                                hx && hx.disconnect()
                            },
                            watch: function(e) {
                                var t = e.observeMutationsRoot;
                                Dx ? dx() : px(zy("mutationObserverCallbacks", {
                                    observeMutationsRoot: t
                                }))
                            }
                        }
                    }
                }, Bx, Vx, Gx, {
                    hooks: function() {
                        return {
                            parseNodeAttributes: function(e, t) {
                                var n = t.getAttribute("data-fa-symbol"),
                                    r = null !== n && ("" === n || n);
                                return e.symbol = r, e
                            }
                        }
                    }
                }];
            ! function(e, t) {
                var n = t.mixoutsTo;
                Py = e, Ry = {}, Object.keys(Ny).forEach((function(e) {
                    -1 === Iy.indexOf(e) && delete Ny[e]
                })), Py.forEach((function(e) {
                    var t = e.mixout ? e.mixout() : {};
                    if (Object.keys(t).forEach((function(e) {
                            "function" === typeof t[e] && (n[e] = t[e]), "object" === Nm(t[e]) && Object.keys(t[e]).forEach((function(r) {
                                n[e] || (n[e] = {}), n[e][r] = t[e][r]
                            }))
                        })), e.hooks) {
                        var r = e.hooks();
                        Object.keys(r).forEach((function(e) {
                            Ry[e] || (Ry[e] = []), Ry[e].push(r[e])
                        }))
                    }
                    e.provides && e.provides(Ny)
                }))
            }(Wx, {
                mixoutsTo: Hy
            });
            var jx = Hy.parse,
                qx = Hy.icon,
                Xx = n(7),
                Yx = n.n(Xx);

            function Zx(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(e);
                    t && (r = r.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), n.push.apply(n, r)
                }
                return n
            }

            function Jx(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? Zx(Object(n), !0).forEach((function(t) {
                        Qx(e, t, n[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Zx(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }))
                }
                return e
            }

            function $x(e) {
                return $x = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }, $x(e)
            }

            function Qx(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function Kx(e, t) {
                if (null == e) return {};
                var n, r, i = function(e, t) {
                    if (null == e) return {};
                    var n, r, i = {},
                        a = Object.keys(e);
                    for (r = 0; r < a.length; r++) n = a[r], t.indexOf(n) >= 0 || (i[n] = e[n]);
                    return i
                }(e, t);
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    for (r = 0; r < a.length; r++) n = a[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n])
                }
                return i
            }

            function eb(e) {
                return function(e) {
                    if (Array.isArray(e)) return tb(e)
                }(e) || function(e) {
                    if ("undefined" !== typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
                }(e) || function(e, t) {
                    if (!e) return;
                    if ("string" === typeof e) return tb(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    "Object" === n && e.constructor && (n = e.constructor.name);
                    if ("Map" === n || "Set" === n) return Array.from(e);
                    if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tb(e, t)
                }(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function tb(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
                return r
            }

            function nb(e) {
                return t = e, (t -= 0) === t ? e : (e = e.replace(/[\-_\s]+(.)?/g, (function(e, t) {
                    return t ? t.toUpperCase() : ""
                }))).substr(0, 1).toLowerCase() + e.substr(1);
                var t
            }
            var rb = ["style"];

            function ib(e) {
                return e.split(";").map((function(e) {
                    return e.trim()
                })).filter((function(e) {
                    return e
                })).reduce((function(e, t) {
                    var n, r = t.indexOf(":"),
                        i = nb(t.slice(0, r)),
                        a = t.slice(r + 1).trim();
                    return i.startsWith("webkit") ? e[(n = i, n.charAt(0).toUpperCase() + n.slice(1))] = a : e[i] = a, e
                }), {})
            }
            var ab = !1;
            try {
                ab = !0
            } catch (bm) {}

            function ob(e) {
                return e && "object" === $x(e) && e.prefix && e.iconName && e.icon ? e : jx.icon ? jx.icon(e) : null === e ? null : e && "object" === $x(e) && e.prefix && e.iconName ? e : Array.isArray(e) && 2 === e.length ? {
                    prefix: e[0],
                    iconName: e[1]
                } : "string" === typeof e ? {
                    prefix: "fas",
                    iconName: e
                } : void 0
            }

            function sb(e, t) {
                return Array.isArray(t) && t.length > 0 || !Array.isArray(t) && t ? Qx({}, e, t) : {}
            }
            var lb = t.forwardRef((function(e, t) {
                var n = e.icon,
                    r = e.mask,
                    i = e.symbol,
                    a = e.className,
                    o = e.title,
                    s = e.titleId,
                    l = e.maskId,
                    u = ob(n),
                    c = sb("classes", [].concat(eb(function(e) {
                        var t, n = e.beat,
                            r = e.fade,
                            i = e.beatFade,
                            a = e.bounce,
                            o = e.shake,
                            s = e.flash,
                            l = e.spin,
                            u = e.spinPulse,
                            c = e.spinReverse,
                            f = e.pulse,
                            d = e.fixedWidth,
                            h = e.inverse,
                            p = e.border,
                            v = e.listItem,
                            m = e.flip,
                            g = e.size,
                            y = e.rotation,
                            x = e.pull,
                            b = (Qx(t = {
                                "fa-beat": n,
                                "fa-fade": r,
                                "fa-beat-fade": i,
                                "fa-bounce": a,
                                "fa-shake": o,
                                "fa-flash": s,
                                "fa-spin": l,
                                "fa-spin-reverse": c,
                                "fa-spin-pulse": u,
                                "fa-pulse": f,
                                "fa-fw": d,
                                "fa-inverse": h,
                                "fa-border": p,
                                "fa-li": v,
                                "fa-flip": !0 === m,
                                "fa-flip-horizontal": "horizontal" === m || "both" === m,
                                "fa-flip-vertical": "vertical" === m || "both" === m
                            }, "fa-".concat(g), "undefined" !== typeof g && null !== g), Qx(t, "fa-rotate-".concat(y), "undefined" !== typeof y && null !== y && 0 !== y), Qx(t, "fa-pull-".concat(x), "undefined" !== typeof x && null !== x), Qx(t, "fa-swap-opacity", e.swapOpacity), t);
                        return Object.keys(b).map((function(e) {
                            return b[e] ? e : null
                        })).filter((function(e) {
                            return e
                        }))
                    }(e)), eb(a.split(" ")))),
                    f = sb("transform", "string" === typeof e.transform ? jx.transform(e.transform) : e.transform),
                    d = sb("mask", ob(r)),
                    h = qx(u, Jx(Jx(Jx(Jx({}, c), f), d), {}, {
                        symbol: i,
                        title: o,
                        titleId: s,
                        maskId: l
                    }));
                if (!h) return function() {
                    var e;
                    !ab && console && "function" === typeof console.error && (e = console).error.apply(e, arguments)
                }("Could not find icon", u), null;
                var p = h.abstract,
                    v = {
                        ref: t
                    };
                return Object.keys(e).forEach((function(t) {
                    lb.defaultProps.hasOwnProperty(t) || (v[t] = e[t])
                })), ub(p[0], v)
            }));
            lb.displayName = "FontAwesomeIcon", lb.propTypes = {
                beat: Yx().bool,
                border: Yx().bool,
                beatFade: Yx().bool,
                bounce: Yx().bool,
                className: Yx().string,
                fade: Yx().bool,
                flash: Yx().bool,
                mask: Yx().oneOfType([Yx().object, Yx().array, Yx().string]),
                maskId: Yx().string,
                fixedWidth: Yx().bool,
                inverse: Yx().bool,
                flip: Yx().oneOf([!0, !1, "horizontal", "vertical", "both"]),
                icon: Yx().oneOfType([Yx().object, Yx().array, Yx().string]),
                listItem: Yx().bool,
                pull: Yx().oneOf(["right", "left"]),
                pulse: Yx().bool,
                rotation: Yx().oneOf([0, 90, 180, 270]),
                shake: Yx().bool,
                size: Yx().oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
                spin: Yx().bool,
                spinPulse: Yx().bool,
                spinReverse: Yx().bool,
                symbol: Yx().oneOfType([Yx().bool, Yx().string]),
                title: Yx().string,
                titleId: Yx().string,
                transform: Yx().oneOfType([Yx().string, Yx().object]),
                swapOpacity: Yx().bool
            }, lb.defaultProps = {
                border: !1,
                className: "",
                mask: null,
                maskId: null,
                fixedWidth: !1,
                inverse: !1,
                flip: !1,
                icon: null,
                listItem: !1,
                pull: null,
                pulse: !1,
                rotation: null,
                size: null,
                spin: !1,
                spinPulse: !1,
                spinReverse: !1,
                beat: !1,
                fade: !1,
                beatFade: !1,
                bounce: !1,
                shake: !1,
                symbol: !1,
                title: "",
                titleId: null,
                transform: null,
                swapOpacity: !1
            };
            var ub = function e(t, n) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    if ("string" === typeof n) return n;
                    var i = (n.children || []).map((function(n) {
                            return e(t, n)
                        })),
                        a = Object.keys(n.attributes || {}).reduce((function(e, t) {
                            var r = n.attributes[t];
                            switch (t) {
                                case "class":
                                    e.attrs.className = r, delete n.attributes.class;
                                    break;
                                case "style":
                                    e.attrs.style = ib(r);
                                    break;
                                default:
                                    0 === t.indexOf("aria-") || 0 === t.indexOf("data-") ? e.attrs[t.toLowerCase()] = r : e.attrs[nb(t)] = r
                            }
                            return e
                        }), {
                            attrs: {}
                        }),
                        o = r.style,
                        s = void 0 === o ? {} : o,
                        l = Kx(r, rb);
                    return a.attrs.style = Jx(Jx({}, a.attrs.style), s), t.apply(void 0, [n.tag, Jx(Jx({}, a.attrs), l)].concat(eb(i)))
                }.bind(null, t.createElement),
                cb = {
                    prefix: "fas",
                    iconName: "envelope",
                    icon: [512, 512, [128386, 9993, 61443], "f0e0", "M48 64C21.5 64 0 85.5 0 112c0 15.1 7.1 29.3 19.2 38.4L236.8 313.6c11.4 8.5 27 8.5 38.4 0L492.8 150.4c12.1-9.1 19.2-23.3 19.2-38.4c0-26.5-21.5-48-48-48H48zM0 176V384c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V176L294.4 339.2c-22.8 17.1-54 17.1-76.8 0L0 176z"]
                },
                fb = {
                    prefix: "fas",
                    iconName: "sun",
                    icon: [512, 512, [9728], "f185", "M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM352 256c0 53-43 96-96 96s-96-43-96-96s43-96 96-96s96 43 96 96zm32 0c0-70.7-57.3-128-128-128s-128 57.3-128 128s57.3 128 128 128s128-57.3 128-128z"]
                },
                db = {
                    prefix: "far",
                    iconName: "heart",
                    icon: [512, 512, [128153, 128154, 128155, 128156, 128420, 129293, 129294, 129505, 9829, 10084, 61578], "f004", "M244 84L255.1 96L267.1 84.02C300.6 51.37 347 36.51 392.6 44.1C461.5 55.58 512 115.2 512 185.1V190.9C512 232.4 494.8 272.1 464.4 300.4L283.7 469.1C276.2 476.1 266.3 480 256 480C245.7 480 235.8 476.1 228.3 469.1L47.59 300.4C17.23 272.1 0 232.4 0 190.9V185.1C0 115.2 50.52 55.58 119.4 44.1C164.1 36.51 211.4 51.37 244 84C243.1 84 244 84.01 244 84L244 84zM255.1 163.9L210.1 117.1C188.4 96.28 157.6 86.4 127.3 91.44C81.55 99.07 48 138.7 48 185.1V190.9C48 219.1 59.71 246.1 80.34 265.3L256 429.3L431.7 265.3C452.3 246.1 464 219.1 464 190.9V185.1C464 138.7 430.4 99.07 384.7 91.44C354.4 86.4 323.6 96.28 301.9 117.1L255.1 163.9z"]
                },
                hb = function(e) {
                    var t = e.darkMode,
                        n = e.handleDarkMode,
                        r = ym()({
                            "rounded-full p-1 mr-10 cursor-pointer duration-300 transition-all ease-in-out delay-50 opacity-1": !0,
                            "shadow-lg shadow-gray-700  hover:bg-purple_light": !t,
                            "hover:bg-purple_dark": t
                        }),
                        i = ym()({
                            "cursor-pointer hover:text-red-500 duration-1000 transition-all ease-in-out delay-50 opacity-1": !0,
                            "text-purple_lighter": t
                        });
                    return (0, kf.jsxs)("div", {
                        className: "flex justify-between m-4 prevent_select",
                        children: [(0, kf.jsxs)("a", {
                            href: "https://github.com/sponsors/Nuzair46",
                            target: "_blank",
                            className: i,
                            rel: "noreferrer",
                            type: "button",
                            children: [(0, kf.jsx)(lb, {
                                icon: db,
                                color: "pink"
                            }), " Sponsor Me"]
                        }), (0, kf.jsx)("div", {
                            className: r,
                            type: "button",
                            onClick: n,
                            children: (0, kf.jsx)(lb, {
                                icon: fb,
                                width: "24",
                                color: "".concat(t ? Sf : wf),
                                className: "transition-all duration-1000 ease-in-out delay-50"
                            })
                        })]
                    })
                },
                pb = {
                    prefix: "fab",
                    iconName: "steam",
                    icon: [496, 512, [], "f1b6", "M496 256c0 137-111.2 248-248.4 248-113.8 0-209.6-76.3-239-180.4l95.2 39.3c6.4 32.1 34.9 56.4 68.9 56.4 39.2 0 71.9-32.4 70.2-73.5l84.5-60.2c52.1 1.3 95.8-40.9 95.8-93.5 0-51.6-42-93.5-93.7-93.5s-93.7 42-93.7 93.5v1.2L176.6 279c-15.5-.9-30.7 3.4-43.5 12.1L0 236.1C10.2 108.4 117.1 8 247.6 8 384.8 8 496 119 496 256zM155.7 384.3l-30.5-12.6a52.79 52.79 0 0 0 27.2 25.8c26.9 11.2 57.8-1.6 69-28.4 5.4-13 5.5-27.3.1-40.3-5.4-13-15.5-23.2-28.5-28.6-12.9-5.4-26.7-5.2-38.9-.6l31.5 13c19.8 8.2 29.2 30.9 20.9 50.7-8.3 19.9-31 29.2-50.8 21zm173.8-129.9c-34.4 0-62.4-28-62.4-62.3s28-62.3 62.4-62.3 62.4 28 62.4 62.3-27.9 62.3-62.4 62.3zm.1-15.6c25.9 0 46.9-21 46.9-46.8 0-25.9-21-46.8-46.9-46.8s-46.9 21-46.9 46.8c.1 25.8 21.1 46.8 46.9 46.8z"]
                },
                vb = {
                    prefix: "fab",
                    iconName: "discord",
                    icon: [640, 512, [], "f392", "M524.531,69.836a1.5,1.5,0,0,0-.764-.7A485.065,485.065,0,0,0,404.081,32.03a1.816,1.816,0,0,0-1.923.91,337.461,337.461,0,0,0-14.9,30.6,447.848,447.848,0,0,0-134.426,0,309.541,309.541,0,0,0-15.135-30.6,1.89,1.89,0,0,0-1.924-.91A483.689,483.689,0,0,0,116.085,69.137a1.712,1.712,0,0,0-.788.676C39.068,183.651,18.186,294.69,28.43,404.354a2.016,2.016,0,0,0,.765,1.375A487.666,487.666,0,0,0,176.02,479.918a1.9,1.9,0,0,0,2.063-.676A348.2,348.2,0,0,0,208.12,430.4a1.86,1.86,0,0,0-1.019-2.588,321.173,321.173,0,0,1-45.868-21.853,1.885,1.885,0,0,1-.185-3.126c3.082-2.309,6.166-4.711,9.109-7.137a1.819,1.819,0,0,1,1.9-.256c96.229,43.917,200.41,43.917,295.5,0a1.812,1.812,0,0,1,1.924.233c2.944,2.426,6.027,4.851,9.132,7.16a1.884,1.884,0,0,1-.162,3.126,301.407,301.407,0,0,1-45.89,21.83,1.875,1.875,0,0,0-1,2.611,391.055,391.055,0,0,0,30.014,48.815,1.864,1.864,0,0,0,2.063.7A486.048,486.048,0,0,0,610.7,405.729a1.882,1.882,0,0,0,.765-1.352C623.729,277.594,590.933,167.465,524.531,69.836ZM222.491,337.58c-28.972,0-52.844-26.587-52.844-59.239S193.056,219.1,222.491,219.1c29.665,0,53.306,26.82,52.843,59.239C275.334,310.993,251.924,337.58,222.491,337.58Zm195.38,0c-28.971,0-52.843-26.587-52.843-59.239S388.437,219.1,417.871,219.1c29.667,0,53.307,26.82,52.844,59.239C470.715,310.993,447.538,337.58,417.871,337.58Z"]
                },
                mb = {
                    prefix: "fab",
                    iconName: "spotify",
                    icon: [496, 512, [], "f1bc", "M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm100.7 364.9c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4zm26.9-65.6c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm31-76.2c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3z"]
                },
                gb = {
                    prefix: "fab",
                    iconName: "instagram",
                    icon: [448, 512, [], "f16d", "M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"]
                },
                yb = {
                    prefix: "fab",
                    iconName: "github",
                    icon: [496, 512, [], "f09b", "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"]
                },
                xb = {
                    prefix: "fab",
                    iconName: "twitter",
                    icon: [512, 512, [], "f099", "M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"]
                },
                bb = [{
                    name: "Twitter",
                    icon: xb,
                    link: "https://twitter.com/its_nzr"
                }, {
                    name: "Github",
                    icon: yb,
                    link: "https://github.com/Nuzair46"
                }, {
                    name: "Spotify",
                    icon: mb,
                    link: "https://open.spotify.com/user/a95qn013c8aa0mhtupy5dgm0k?si=9977ebc49e40421c"
                }, {
                    name: "Discord",
                    icon: vb,
                    link: "https://dc.aaro.dev/428944701094363146"
                }, {
                    name: "Instagram",
                    icon: gb,
                    link: "https://www.instagram.com/its_nzr_"
                }, {
                    name: "Steam",
                    icon: pb,
                    link: "https://steamcommunity.com/id/rednek46"
                }, {
                    name: "Email",
                    icon: cb,
                    link: "mailto:nuzer501@gmail.com"
                }],
                _b = function(e) {
                    var t = e.darkMode,
                        n = e.social,
                        r = ym()({
                            "rounded-full p-1 mr-10 cursor-pointer duration-300 transition-all ease-in-out delay-50 opacity-1": !0,
                            "shadow-lg shadow-gray-700  hover:bg-purple_light": !t,
                            "hover:bg-purple_dark": t
                        });
                    return (0, kf.jsx)("a", {
                        href: n.link,
                        className: r,
                        type: "button",
                        target: "_blank",
                        rel: "noreferrer",
                        children: (0, kf.jsx)(lb, {
                            icon: n.icon,
                            width: "24",
                            color: "".concat(t ? Sf : wf),
                            className: "transition-all duration-1000 ease-in-out delay-50"
                        })
                    })
                },
                wb = function(e) {
                    var t = e.darkMode;
                    return (0, kf.jsx)("div", {
                        className: "space-y-3 float-right -mr-5 mt-10 flex flex-col",
                        children: bb.map((function(e, n) {
                            return (0, kf.jsx)("div", {
                                children: (0, kf.jsx)(_b, {
                                    darkMode: t,
                                    social: e
                                })
                            }, n)
                        }))
                    })
                };

            function Sb(e) {
                return Qv("MuiSvgIcon", e)
            }
            Kv("MuiSvgIcon", ["root", "colorPrimary", "colorSecondary", "colorAction", "colorError", "colorDisabled", "fontSizeInherit", "fontSizeSmall", "fontSizeMedium", "fontSizeLarge"]);
            var Mb = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"],
                kb = Bv("svg", {
                    name: "MuiSvgIcon",
                    slot: "Root",
                    overridesResolver: function(e, t) {
                        var n = e.ownerState;
                        return [t.root, "inherit" !== n.color && t["color".concat(Yv(n.color))], t["fontSize".concat(Yv(n.fontSize))]]
                    }
                })((function(e) {
                    var t, n, r, i, a, o, s, l, u, c, f, d, h, p, v, m, g, y = e.theme,
                        x = e.ownerState;
                    return {
                        userSelect: "none",
                        width: "1em",
                        height: "1em",
                        display: "inline-block",
                        fill: "currentColor",
                        flexShrink: 0,
                        transition: null == (t = y.transitions) || null == (n = t.create) ? void 0 : n.call(t, "fill", {
                            duration: null == (r = y.transitions) || null == (i = r.duration) ? void 0 : i.shorter
                        }),
                        fontSize: {
                            inherit: "inherit",
                            small: (null == (a = y.typography) || null == (o = a.pxToRem) ? void 0 : o.call(a, 20)) || "1.25rem",
                            medium: (null == (s = y.typography) || null == (l = s.pxToRem) ? void 0 : l.call(s, 24)) || "1.5rem",
                            large: (null == (u = y.typography) || null == (c = u.pxToRem) ? void 0 : c.call(u, 35)) || "2.1875rem"
                        }[x.fontSize],
                        color: null != (f = null == (d = (y.vars || y).palette) || null == (h = d[x.color]) ? void 0 : h.main) ? f : {
                            action: null == (p = (y.vars || y).palette) || null == (v = p.action) ? void 0 : v.active,
                            disabled: null == (m = (y.vars || y).palette) || null == (g = m.action) ? void 0 : g.disabled,
                            inherit: void 0
                        }[x.color]
                    }
                })),
                Eb = t.forwardRef((function(e, t) {
                    var n = Xv({
                            props: e,
                            name: "MuiSvgIcon"
                        }),
                        r = n.children,
                        i = n.className,
                        a = n.color,
                        o = void 0 === a ? "inherit" : a,
                        s = n.component,
                        l = void 0 === s ? "svg" : s,
                        u = n.fontSize,
                        c = void 0 === u ? "medium" : u,
                        f = n.htmlColor,
                        d = n.inheritViewBox,
                        h = void 0 !== d && d,
                        p = n.titleAccess,
                        v = n.viewBox,
                        m = void 0 === v ? "0 0 24 24" : v,
                        g = Tf(n, Mb),
                        y = Lf({}, n, {
                            color: o,
                            component: l,
                            fontSize: c,
                            instanceFontSize: e.fontSize,
                            inheritViewBox: h,
                            viewBox: m
                        }),
                        x = {};
                    h || (x.viewBox = m);
                    var b = function(e) {
                        var t = e.color,
                            n = e.fontSize,
                            r = e.classes;
                        return Qd({
                            root: ["root", "inherit" !== t && "color".concat(Yv(t)), "fontSize".concat(Yv(n))]
                        }, Sb, r)
                    }(y);
                    return (0, kf.jsxs)(kb, Lf({
                        as: l,
                        className: Cf(b.root, i),
                        focusable: "false",
                        color: f,
                        "aria-hidden": !p || void 0,
                        role: p ? "img" : void 0,
                        ref: t
                    }, x, g, {
                        ownerState: y,
                        children: [r, p ? (0, kf.jsx)("title", {
                            children: p
                        }) : null]
                    }))
                }));
            Eb.muiName = "SvgIcon";
            var Tb = Eb;
            var Lb = function(e, n) {
                function r(t, r) {
                    return (0, kf.jsx)(Tb, Lf({
                        "data-testid": "".concat(n, "Icon"),
                        ref: r
                    }, t, {
                        children: e
                    }))
                }
                return r.muiName = Tb.muiName, t.memo(t.forwardRef(r))
            }((0, kf.jsx)("path", {
                d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
            }), "Person");

            function Ab(e) {
                return Qv("MuiAvatar", e)
            }
            Kv("MuiAvatar", ["root", "colorDefault", "circular", "rounded", "square", "img", "fallback"]);
            var Cb = ["alt", "children", "className", "component", "imgProps", "sizes", "src", "srcSet", "variant"],
                Pb = Bv("div", {
                    name: "MuiAvatar",
                    slot: "Root",
                    overridesResolver: function(e, t) {
                        var n = e.ownerState;
                        return [t.root, t[n.variant], n.colorDefault && t.colorDefault]
                    }
                })((function(e) {
                    var t = e.theme,
                        n = e.ownerState;
                    return Lf({
                        position: "relative",
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        flexShrink: 0,
                        width: 40,
                        height: 40,
                        fontFamily: t.typography.fontFamily,
                        fontSize: t.typography.pxToRem(20),
                        lineHeight: 1,
                        borderRadius: "50%",
                        overflow: "hidden",
                        userSelect: "none"
                    }, "rounded" === n.variant && {
                        borderRadius: (t.vars || t).shape.borderRadius
                    }, "square" === n.variant && {
                        borderRadius: 0
                    }, n.colorDefault && Lf({
                        color: (t.vars || t).palette.background.default
                    }, t.vars ? {
                        backgroundColor: t.vars.palette.Avatar.defaultBg
                    } : {
                        backgroundColor: "light" === t.palette.mode ? t.palette.grey[400] : t.palette.grey[600]
                    }))
                })),
                Rb = Bv("img", {
                    name: "MuiAvatar",
                    slot: "Img",
                    overridesResolver: function(e, t) {
                        return t.img
                    }
                })({
                    width: "100%",
                    height: "100%",
                    textAlign: "center",
                    objectFit: "cover",
                    color: "transparent",
                    textIndent: 1e4
                }),
                Nb = Bv(Lb, {
                    name: "MuiAvatar",
                    slot: "Fallback",
                    overridesResolver: function(e, t) {
                        return t.fallback
                    }
                })({
                    width: "75%",
                    height: "75%"
                });
            var Ib = t.forwardRef((function(e, n) {
                    var r = Xv({
                            props: e,
                            name: "MuiAvatar"
                        }),
                        i = r.alt,
                        a = r.children,
                        o = r.className,
                        s = r.component,
                        l = void 0 === s ? "div" : s,
                        c = r.imgProps,
                        f = r.sizes,
                        d = r.src,
                        h = r.srcSet,
                        p = r.variant,
                        v = void 0 === p ? "circular" : p,
                        m = Tf(r, Cb),
                        g = null,
                        y = function(e) {
                            var n = e.crossOrigin,
                                r = e.referrerPolicy,
                                i = e.src,
                                a = e.srcSet,
                                o = u(t.useState(!1), 2),
                                s = o[0],
                                l = o[1];
                            return t.useEffect((function() {
                                if (i || a) {
                                    l(!1);
                                    var e = !0,
                                        t = new Image;
                                    return t.onload = function() {
                                            e && l("loaded")
                                        }, t.onerror = function() {
                                            e && l("error")
                                        }, t.crossOrigin = n, t.referrerPolicy = r, t.src = i, a && (t.srcset = a),
                                        function() {
                                            e = !1
                                        }
                                }
                            }), [n, r, i, a]), s
                        }(Lf({}, c, {
                            src: d,
                            srcSet: h
                        })),
                        x = d || h,
                        b = x && "error" !== y,
                        _ = Lf({}, r, {
                            colorDefault: !b,
                            component: l,
                            variant: v
                        }),
                        w = function(e) {
                            var t = e.classes;
                            return Qd({
                                root: ["root", e.variant, e.colorDefault && "colorDefault"],
                                img: ["img"],
                                fallback: ["fallback"]
                            }, Ab, t)
                        }(_);
                    return g = b ? (0, kf.jsx)(Rb, Lf({
                        alt: i,
                        src: d,
                        srcSet: h,
                        sizes: f,
                        ownerState: _,
                        className: w.img
                    }, c)) : null != a ? a : x && i ? i[0] : (0, kf.jsx)(Nb, {
                        className: w.fallback
                    }), (0, kf.jsx)(Pb, Lf({
                        as: l,
                        ownerState: _,
                        className: Cf(w.root, o),
                        ref: n
                    }, m, {
                        children: g
                    }))
                })),
                zb = Ib,
                Ob = function(e) {
                    var n = e.darkMode,
                        r = Sm(Mm, {
                            initialData: Em
                        }),
                        i = u((0, t.useState)(!1), 2),
                        a = i[0],
                        o = i[1],
                        s = u((0, t.useState)(""), 2),
                        l = s[0],
                        c = s[1],
                        f = r.discord_user,
                        d = r.discord_status,
                        h = r.activities,
                        p = "".concat(km).concat(f.avatar);
                    (0, t.useEffect)((function() {
                        var e = h.find((function(e) {
                            return 4 === e.type
                        }));
                        e && c(e)
                    }), [h]);
                    var v = {
                            "border-purple_darker rounded-full border border-2 duration-1000 transition ease-in-out delay-50": !0,
                            "shadow-lg shadow-gray-700 hover:border-purple_light": !n,
                            "hover:border-red-500": "dnd" === d,
                            "hover:border-yellow-500": "idle" === d,
                            "hover:border-green-500": "online" === d
                        },
                        m = ym()({
                            "duration-300 transition-all ease-in-out delay-150": !0,
                            "visible opacity-1": a,
                            "invisible opacity-0": !a,
                            "my-2": !0,
                            "text-purple_lighter": n,
                            "text-purple_darker": !n
                        });
                    return (0, kf.jsxs)("div", {
                        className: "absolute flex p-1 m-4 space-x-2 w-max hover:cursor-pointer",
                        onMouseEnter: function() {
                            return o(!0)
                        },
                        onMouseLeave: function() {
                            return o(!1)
                        },
                        children: [(0, kf.jsx)("div", {
                            className: "space-x-6",
                            children: (0, kf.jsx)(zb, {
                                alt: "Red",
                                src: p,
                                className: v
                            })
                        }), (0, kf.jsx)("div", {
                            className: m,
                            children: l.state
                        })]
                    })
                },
                Db = function() {
                    var e = u((0, t.useState)(!0), 2),
                        n = e[0],
                        r = e[1];
                    (0, t.useEffect)((function() {
                        var e = localStorage.getItem(Mf);
                        e && r("true" === e)
                    }), []);
                    var i = ym()({
                            "duration-1000 transition-all ease-in-out delay-50 absolute top-0 left-0 w-full h-full pointer-events-none -z-10": !0,
                            "bg-black opacity-50": n
                        }),
                        a = ym()({
                            "absolute top-0 left-0 -z-10 duration-1000 transition-all ease-in-out delay-50": !0,
                            "bg-purple_darker": n,
                            "bg-purple_lighter": !n
                        });
                    return (0, kf.jsxs)("div", {
                        className: "relative h-screen",
                        children: [(0, kf.jsx)("div", {
                            className: a,
                            children: (0, kf.jsx)(Ef, {})
                        }), n && (0, kf.jsx)("div", {
                            className: i
                        }), (0, kf.jsxs)("div", {
                            className: "z-50 mx-5",
                            children: [(0, kf.jsx)(Ob, {
                                darkMode: n
                            }), (0, kf.jsx)(Cm, {
                                darkMode: n
                            }), (0, kf.jsx)(wb, {
                                darkMode: n
                            }), (0, kf.jsx)("div", {
                                className: "absolute bottom-0 w-full",
                                children: (0, kf.jsx)(hb, {
                                    darkMode: n,
                                    handleDarkMode: function() {
                                        ! function(e) {
                                            localStorage.setItem(Mf, e)
                                        }(!n), r(!n)
                                    }
                                })
                            })]
                        })]
                    })
                },
                Fb = "/",
                Bb = function() {
                    return (0, kf.jsx)(Ce, {
                        children: (0, kf.jsx)(Te, {
                            children: (0, kf.jsx)(ke, {
                                exact: !0,
                                path: Fb,
                                element: (0, kf.jsx)(Db, {})
                            })
                        })
                    })
                },
                Ub = function() {
                    return (0, kf.jsx)("div", {
                        className: "App",
                        children: (0, kf.jsx)(Bb, {})
                    })
                };
            i.createRoot(document.getElementById("root")).render((0, kf.jsx)(Ub, {}))
        }()
}();
//# sourceMappingURL=main.5b12ea7f.js.map